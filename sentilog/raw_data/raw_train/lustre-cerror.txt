lustre-release/libcfs/libcfs/libcfs_string.c:		CERROR("Number of values %d exceeds max allowed %d\n",
lustre-release/libcfs/libcfs/module.c:		CERROR("libcfs ioctl: parameter not correctly formatted\n");
lustre-release/libcfs/libcfs/module.c:		CERROR("libcfs ioctl: version mismatch expected %#x, got %#x\n",
lustre-release/libcfs/libcfs/module.c:		CERROR("libcfs ioctl: user buffer too small for ioctl\n");
lustre-release/libcfs/libcfs/module.c:		CERROR("libcfs ioctl: user buffer is too large %d/%d\n",
lustre-release/libcfs/libcfs/module.c:		CERROR("misc_register: error %d\n", rc);
lustre-release/libcfs/libcfs/module.c:		CERROR("initialize workitem: error %d\n", rc);
lustre-release/libcfs/libcfs/module.c:		CERROR("libcfs: failed to start rehash workqueue: rc = %d\n",
lustre-release/libcfs/libcfs/module.c:		CERROR("cfs_crypto_regster: error %d\n", rc);
lustre-release/libcfs/libcfs/module.c:		CERROR("Portals memory leaked: %d bytes\n",
lustre-release/libcfs/libcfs/linux-debug.c:                CERROR("Error %d invoking LNET debug log upcall %s %s; "
lustre-release/libcfs/libcfs/fail.c:		CERROR("cfs_fail_timeout id %x sleeping for %dms\n", id, ms);
lustre-release/libcfs/libcfs/fail.c:				CERROR("cfs_fail_timeout interrupted\n");
lustre-release/libcfs/libcfs/fail.c:			CERROR("cfs_fail_timeout id %x awake\n", id);
lustre-release/libcfs/libcfs/libcfs_cpu.c:		CERROR("libcfs: CPU partition count %d > cores %d: rc = %d\n",
lustre-release/libcfs/libcfs/libcfs_cpu.c:		CERROR("Failed to allocate CPU map(%d)\n", ncpt);
lustre-release/libcfs/libcfs/libcfs_cpu.c:		CERROR("Failed to allocate scratch cpumask\n");
lustre-release/libcfs/libcfs/libcfs_cpu.c:	CERROR("Failed (rc = %d) to setup CPU partition table with %d partitions, online HW NUMA nodes: %d, HW CPU cores: %d.\n",
lustre-release/libcfs/libcfs/libcfs_cpu.c:		CERROR("Failed to duplicate pattern '%s'\n", pattern);
lustre-release/libcfs/libcfs/libcfs_cpu.c:		CERROR("Invalid pattern '%s', or too many partitions %d\n",
lustre-release/libcfs/libcfs/libcfs_cpu.c:		CERROR("Failed to allocate CPU partition table\n");
lustre-release/libcfs/libcfs/libcfs_cpu.c:				CERROR("Invalid pattern '%s'\n", str);
lustre-release/libcfs/libcfs/libcfs_cpu.c:				CERROR("Expect %d partitions but found %d\n",
lustre-release/libcfs/libcfs/libcfs_cpu.c:			CERROR("Invalid CPU pattern '%s'\n", str);
lustre-release/libcfs/libcfs/libcfs_cpu.c:			CERROR("Invalid partition id %d, total partitions %d\n",
lustre-release/libcfs/libcfs/libcfs_cpu.c:			CERROR("Partition %d has already been set.\n", cpt);
lustre-release/libcfs/libcfs/libcfs_cpu.c:			CERROR("Invalid pattern '%s'\n", str);
lustre-release/libcfs/libcfs/libcfs_cpu.c:			CERROR("Missing right bracket for partition %d in '%s'\n",
lustre-release/libcfs/libcfs/libcfs_cpu.c:			CERROR("Can't parse number range in '%s'\n", str);
lustre-release/libcfs/libcfs/libcfs_cpu.c:			CERROR("No online CPU is found on partition %d\n", cpt);
lustre-release/libcfs/libcfs/libcfs_cpu.c:			CERROR("Failed to create cptab from pattern '%s'\n",
lustre-release/libcfs/libcfs/libcfs_cpu.c:			CERROR("Failed to create cptab with npartitions %d\n",
lustre-release/libcfs/libcfs/libcfs_cpu.c:		CERROR("Can't support cpu partition number %d\n", ncpt);
lustre-release/libcfs/libcfs/workitem.c:			CERROR("Failed to create thread for "
lustre-release/lustre/mdc/mdc_dev.c:		CERROR("Pages for lockless lock %p were not purged(%d)\n",
lustre-release/lustre/mdc/mdc_dev.c:		CERROR("Impossible state: %d\n", oscl->ols_state);
lustre-release/lustre/mdc/mdc_changelog.c:		CERROR("%s: not a changelog rec %x/%d in llog "DFID" rc = %d\n",
lustre-release/lustre/mdc/mdc_changelog.c:		CERROR("%s: fail to open changelog catalog: rc = %d\n",
lustre-release/lustre/mdc/mdc_changelog.c:		CERROR("%s: fail to init llog handle: rc = %d\n",
lustre-release/lustre/mdc/mdc_changelog.c:		CERROR("%s: fail to process llog: rc = %d\n", obd->obd_name, rc);
lustre-release/lustre/mdc/mdc_changelog.c:			CERROR("%s: cannot start changelog thread: rc = %d\n",
lustre-release/lustre/mdc/mdc_request.c:                CERROR("convert xattr to acl: %d\n", rc);
lustre-release/lustre/mdc/mdc_request.c:                CERROR("validate acl: %d\n", rc);
lustre-release/lustre/mdc/mdc_request.c:				CERROR("%s: "DFID" allocating FID: rc = %d\n",
lustre-release/lustre/mdc/mdc_request.c:			CERROR("%s: too many resend retries: rc = %d\n",
lustre-release/lustre/mdc/mdc_request.c:		CERROR("%s: unexpected bytes transferred: %d (%ld expected)\n",
lustre-release/lustre/mdc/mdc_request.c:		CERROR("%s: "DFID" lock enqueue fails: rc = %d\n",
lustre-release/lustre/mdc/mdc_request.c:		CERROR("%s: dir page locate: "DFID" at %llu: rc %ld\n",
lustre-release/lustre/mdc/mdc_request.c:		CERROR("%s: page not updated: "DFID" at %llu: rc %d\n",
lustre-release/lustre/mdc/mdc_request.c:		CERROR("%s: page error: "DFID" at %llu: rc %d\n",
lustre-release/lustre/mdc/mdc_request.c:		CERROR("ptlrpc_queue_wait failed, rc: %d\n", rc);
lustre-release/lustre/mdc/mdc_request.c:		CERROR ("Can't unpack obd_quotactl\n");
lustre-release/lustre/mdc/mdc_request.c:		CERROR("%s: cannot get module '%s'\n", obd->obd_name,
lustre-release/lustre/mdc/mdc_request.c:		CERROR("unrecognised ioctl: cmd = %#x\n", cmd);
lustre-release/lustre/mdc/mdc_request.c:		CERROR("Bad copytool group %d\n", lk->lk_group);
lustre-release/lustre/mdc/mdc_request.c:		CERROR("Short HSM message %zu < %zu\n", len,
lustre-release/lustre/mdc/mdc_request.c:		CERROR("Bad magic %x!=%x\n", lh->kuc_magic, KUC_MAGIC);
lustre-release/lustre/mdc/mdc_request.c:		CERROR("Unknown import event %x\n", event);
lustre-release/lustre/mdc/mdc_request.c:                CERROR("%s: failed to setup llogging subsystems: rc = %d\n",
lustre-release/lustre/mdc/mdc_request.c:		CERROR("%s: failed to setup changelog char device: rc = %d\n",
lustre-release/lustre/mdc/mdc_locks.c:	CERROR("it disp: %X, status: %d\n", it->it_disposition, it->it_status);
lustre-release/lustre/mdc/mdc_locks.c:			CERROR("%s: Can't enlarge ea size to %d: rc = %d\n",
lustre-release/lustre/mdc/mdc_locks.c:                        CERROR ("Can't swab mdt_body\n");
lustre-release/lustre/mdc/mdc_locks.c:			CERROR("Can't alloc new fid, rc %d\n", rc);
lustre-release/lustre/mdc/mdc_locks.c:                CERROR("ldlm_cli_enqueue_fini: %d\n", rc);
lustre-release/lustre/mdd/mdd_device.c:		CERROR("can't locate next device: %s\n", nextdev);
lustre-release/lustre/mdd/mdd_device.c:		CERROR("cannot connect to next dev %s (%d)\n", nextdev, rc);
lustre-release/lustre/mdd/mdd_device.c:		CERROR("%s: cancel idx %u of catalog "DFID": rc = %d\n",
lustre-release/lustre/mdd/mdd_device.c:		CERROR("Changelogs cannot be enabled due to error "
lustre-release/lustre/mdd/mdd_device.c:		CERROR("%s: changelog llog setup failed: rc = %d\n",
lustre-release/lustre/mdd/mdd_device.c:		CERROR("%s: changelog init failed: rc = %d\n", obd->obd_name,
lustre-release/lustre/mdd/mdd_device.c:		CERROR("%s: changelog users llog setup failed: rc = %d\n",
lustre-release/lustre/mdd/mdd_device.c:		CERROR("%s: changelog user init failed: rc = %d\n",
lustre-release/lustre/mdd/mdd_device.c:		CERROR("%s: changelog detect orphan failed: rc = %d\n",
lustre-release/lustre/mdd/mdd_device.c:		CERROR("%s: changelog user detect orphan failed: rc = %d\n",
lustre-release/lustre/mdd/mdd_device.c:			CERROR("%s: purge of changelog orphan records failed: "
lustre-release/lustre/mdd/mdd_device.c:		CERROR("%s: changelog setup during init failed: rc = %d\n",
lustre-release/lustre/mdd/mdd_device.c:		CERROR("%s: error initializing \"fid\" object: rc = %d.\n",
lustre-release/lustre/mdd/mdd_device.c:		CERROR("%s: error initializing \"lost+found\": rc = %d.\n",
lustre-release/lustre/mdd/mdd_device.c:		CERROR("%s: hsm actions llog setup failed: rc = %d\n",
lustre-release/lustre/mdd/mdd_device.c:		CERROR("%s: hsm actions llog open_create failed: rc = %d\n",
lustre-release/lustre/mdd/mdd_device.c:			CERROR("%s: create root fid failed: rc = %d\n",
lustre-release/lustre/mdd/mdd_device.c:			CERROR("%s: initializing .lustre failed: rc = %d\n",
lustre-release/lustre/mdd/mdd_device.c:		CERROR("%s: failed to initialize changelog: rc = %d\n",
lustre-release/lustre/mdd/mdd_device.c:		CERROR("%s: failed to initialize lfsck: rc = %d\n",
lustre-release/lustre/mdd/mdd_device.c:		CERROR("%s: failed to register to barrier: rc = %d\n",
lustre-release/lustre/mdd/mdd_device.c:		CERROR("Maximum number of changelog users exceeded!\n");
lustre-release/lustre/mdd/mdd_device.c:		CERROR("Bad ioctl size %d\n", len);
lustre-release/lustre/mdd/mdd_device.c:		CERROR("Bad magic %x != %x\n", data->ioc_version,
lustre-release/lustre/mdd/mdd_trans.c:			CERROR("%s: cannot start ChangeLog garbage collection "
lustre-release/lustre/mdd/mdd_lproc.c:		CERROR("%s: ChangeLog has wrong flags: rc = %d\n",
lustre-release/lustre/mdd/mdd_lproc.c:		CERROR("Error %d setting up debugfs for %s\n",
lustre-release/lustre/mdd/mdd_object.c:		CERROR("%s: object "DFID" not found: rc = -2\n",
lustre-release/lustre/mdd/mdd_object.c:                CERROR("%s: object "DFID" not found: rc = -2\n",
lustre-release/lustre/mdd/mdd_object.c:			CERROR("%s: failed to rollback of layout of: "DFID
lustre-release/lustre/mdd/mdd_object.c:			CERROR("%s: failed to rollback of layout of: "DFID
lustre-release/lustre/mdd/mdd_object.c:		CERROR("%s: Don't extend directory's LOVEA, just set it.\n",
lustre-release/lustre/mdd/mdd_object.c:		CERROR("%s: "DFID" can't truncate DOM inode data, rc = %d\n",
lustre-release/lustre/mdd/mdd_object.c:				CERROR("%s: restore "DFID" HSM error: %d/%d\n",
lustre-release/lustre/mdd/mdd_object.c:			CERROR("%s: unable to roll back layout swap. FIDs: "
lustre-release/lustre/mdd/mdd_object.c:		CERROR("%s: failed to get lu_attr of "DFID": rc = %d\n",
lustre-release/lustre/mdd/mdd_object.c:			CERROR("%s: unable to delete "DFID" from orphan list: "
lustre-release/lustre/mdd/mdd_object.c:		CERROR("%s: unable to delete "DFID" from orphan list: "
lustre-release/lustre/mdd/mdd_object.c:                CERROR("%s: object "DFID" not found: rc = -2\n",
lustre-release/lustre/mdd/mdd_object.c:		CERROR("%s: object "DFID" not found: rc = %d\n",
lustre-release/lustre/mdd/mdd_orphans.c:		CERROR("%s: could not delete orphan object "DFID": rc = %d\n",
lustre-release/lustre/mdd/mdd_orphans.c:			CERROR("%s: cannot get orphan thandle: rc = %d\n",
lustre-release/lustre/mdd/mdd_orphans.c:			CERROR("%s: could not delete orphan "DFID": rc = %d\n",
lustre-release/lustre/mdd/mdd_orphans.c:			CERROR("%s: error unlinking orphan "DFID": rc = %d\n",
lustre-release/lustre/mdd/mdd_orphans.c:		CERROR("%s: cannot clean '%s': rc = %d\n",
lustre-release/lustre/mdd/mdd_orphans.c:		CERROR("%s: error loading iterator to clean '%s'\n",
lustre-release/lustre/mdd/mdd_orphans.c:			CERROR("%s: fail to get FID for orphan it: rc = %d\n",
lustre-release/lustre/mdd/mdd_orphans.c:			CERROR("%s: bad FID "DFID" cleaning '%s'\n",
lustre-release/lustre/mdd/mdd_orphans.c:		CERROR("%s: orphan dir '%s' is not an index: rc = %d\n",
lustre-release/lustre/mdd/mdd_orphans.c:		CERROR("%s: start orphan cleanup thread failed: rc = %d\n",
lustre-release/lustre/mdd/mdd_dir.c:		CERROR("%s: cannot store changelog record: type = %d, "
lustre-release/lustre/mdd/mdd_dir.c:			CERROR("link_ea add failed %d "DFID"\n",
lustre-release/lustre/mdd/mdd_dir.c:			CERROR("link_ea add '%.*s' failed %d "DFID"\n",
lustre-release/lustre/mdd/mdd_dir.c:			CERROR("link_ea del '%.*s' failed %d "DFID"\n",
lustre-release/lustre/mdd/mdd_dir.c:			CERROR("link_ea rename '%.*s'->'%.*s' failed %d "DFID
lustre-release/lustre/mdd/mdd_dir.c:				CERROR("Object "DFID" fail to be an orphan, "
lustre-release/lustre/mdd/mdd_dir.c:			CERROR("%s: invalid lmv_user_md: magic = %x, "
lustre-release/lustre/mdd/mdd_dir.c:                        CERROR("tobj is dead, something is wrong\n");
lustre-release/lustre/mdd/mdd_dir.c:			CERROR("%s: Failed to get nlink for tobj "
lustre-release/lustre/mdd/mdd_dir.c:			CERROR("%s: Failed to set ctime for tobj "
lustre-release/lustre/mdd/mdd_dir.c:			CERROR("%s: Failed to unlink tobj "
lustre-release/lustre/mdd/mdd_dir.c:			CERROR("%s: Failed to get nlink for tobj "
lustre-release/lustre/mdd/mdd_dir.c:					CERROR("%s: \'"DNAME"\' migration was "
lustre-release/lustre/mdd/mdd_dir.c:			CERROR("%s: "DFID" readlink failed: rc = %d\n",
lustre-release/lustre/mgc/mgc_request.c:                CERROR("name too long: %s\n", name);
lustre-release/lustre/mgc/mgc_request.c:                CERROR("missing name: %s\n", name);
lustre-release/lustre/mgc/mgc_request.c:			CERROR("%s: failed processing log, type %d: rc = %d\n",
lustre-release/lustre/mgc/mgc_request.c:		CERROR("logname %s is too long\n", logname);
lustre-release/lustre/mgc/mgc_request.c:			CERROR("%s: can't create sptlrpc log %s: rc = %ld\n",
lustre-release/lustre/mgc/mgc_request.c:			CERROR("%s: cannot create nodemap log: rc = %d\n",
lustre-release/lustre/mgc/mgc_request.c:			CERROR("%s: can't create params log: rc = %d\n",
lustre-release/lustre/mgc/mgc_request.c:			CERROR("%s: can't create barrier log: rc = %d\n",
lustre-release/lustre/mgc/mgc_request.c:		CERROR("%s: can't create log: rc = %d\n",
lustre-release/lustre/mgc/mgc_request.c:			CERROR("%s: sptlrpc log name not correct, %s: "
lustre-release/lustre/mgc/mgc_request.c:			CERROR("%s: can't create recover log: rc = %d\n",
lustre-release/lustre/mgc/mgc_request.c:			CERROR("failed processing log: %d\n", rc);
lustre-release/lustre/mgc/mgc_request.c:		CERROR("failed to cleanup llogging subsystems\n");
lustre-release/lustre/mgc/mgc_request.c:		CERROR("failed to setup llogging subsystems\n");
lustre-release/lustre/mgc/mgc_request.c:			CERROR("%s: cannot start requeue thread: rc = %d; "
lustre-release/lustre/mgc/mgc_request.c:                        CERROR("invalid sptlrpc flavor %s to MGS\n",
lustre-release/lustre/mgc/mgc_request.c:                CERROR("Unknown import event %#x\n", event);
lustre-release/lustre/mgc/mgc_request.c:			CERROR("MNE too large (%u)\n", entry->mne_length);
lustre-release/lustre/mgc/mgc_request.c:                        CERROR("entry index(%lld) is over max_index(%lld)\n",
lustre-release/lustre/mgc/mgc_request.c:                        CERROR("index unsorted, prev %lld, now %lld\n",
lustre-release/lustre/mgc/mgc_request.c:                        CERROR("mgc %s: invalid logname %s\n",
lustre-release/lustre/mgc/mgc_request.c:                        CERROR("mgc: cannot find uuid by nid %s\n",
lustre-release/lustre/mgc/mgc_request.c:		CERROR("%s: failed to copy remote log %s: rc = %d\n",
lustre-release/lustre/mgc/mgc_request.c:			CERROR("Can't drop cfg lock: %d\n", rcl);
lustre-release/lustre/mgc/mgc_request.c:                CERROR("lov_del_obd unimplemented\n");
lustre-release/lustre/mgc/mgc_request.c:				CERROR("Cannot process recover llog %d\n", rc);
lustre-release/lustre/mgc/mgc_request.c:				CERROR("%s: can't process params llog: rc = %d\n",
lustre-release/lustre/mgc/mgc_request.c:                CERROR("Unknown command: %d\n", lcfg->lcfg_command);
lustre-release/lustre/fld/fld_index.c:		CERROR("%s: lookup range "DRANGE" error: rc = %d\n",
lustre-release/lustre/fld/fld_index.c:			CERROR("%s: declare record "DRANGE" failed: rc = %d\n",
lustre-release/lustre/fld/fld_index.c:		CERROR("%s: insert range "DRANGE" failed: rc = %d\n",
lustre-release/lustre/fld/fld_index.c:			CERROR("%s: Can't find \"%s\" obj %d\n", fld->lsf_name,
lustre-release/lustre/fld/fld_index.c:		CERROR("%s: File \"%s\" is not an index: rc = %d!\n",
lustre-release/lustre/fld/fld_index.c:			CERROR("%s: insert special entries failed!: rc = %d\n",
lustre-release/lustre/fld/fld_request.c:	CERROR("%s: Can't find target by hash %d (seq %#llx). Targets (%d):\n",
lustre-release/lustre/fld/fld_request.c:		CERROR("  exp: 0x%p (%s), srv: 0x%p (%s), idx: %llu\n",
lustre-release/lustre/fld/fld_request.c:			CERROR("Target %s exists in FLD and known as %s:#%llu\n",
lustre-release/lustre/fld/fld_request.c:		CERROR("%s: LdebugFS failed in fld-init\n", fld->lcf_name);
lustre-release/lustre/fld/fld_request.c:		CERROR("%s: Wrong hash function %#x\n",
lustre-release/lustre/fld/fld_cache.c:                CERROR("NEW range ="DRANGE" curr = "DRANGE"\n",
lustre-release/lustre/fld/fld_handler.c:			CERROR("%s: FLD cache range "DRANGE" does not match requested flag %x: rc = %d\n",
lustre-release/lustre/fld/fld_handler.c:		CERROR("%s: Cannot find sequence %#llx: rc = %d\n",
lustre-release/lustre/fld/fld_handler.c:			CERROR("%s: lookup %#llx, but not connects to MDT0 yet: rc = %d.\n",
lustre-release/lustre/fld/lproc_fld.c:		CERROR("%s:read record error: rc %d\n",
lustre-release/lustre/osp/lproc_osp.c:		CERROR("%s: failed to setup DT tunables: %d\n",
lustre-release/lustre/osp/lproc_osp.c:		CERROR("%s: error %d setting up debugfs\n",
lustre-release/lustre/osp/lproc_osp.c:		CERROR("%s: failed to create OSC debugfs symlink\n",
lustre-release/lustre/osp/osp_dev.c:		CERROR("%s: can't be initialized: rc = %d\n",
lustre-release/lustre/osp/osp_dev.c:	CERROR("%s: can't initialize lov_objid: rc = %d\n",
lustre-release/lustre/osp/osp_dev.c:	CERROR("%s: can't initialize lov_seq: rc = %d\n",
lustre-release/lustre/osp/osp_dev.c:		CERROR("%s: Can not get ids %d from old objid!\n",
lustre-release/lustre/osp/osp_dev.c:		CERROR("%s: Can not get sequence %d from old objseq!\n",
lustre-release/lustre/osp/osp_dev.c:			CERROR("%s : Can not write seq file: rc = %d\n",
lustre-release/lustre/osp/osp_dev.c:		CERROR("%s: Got invalid FID "DFID"\n", osp->opd_obd->obd_name,
lustre-release/lustre/osp/osp_dev.c:		CERROR("%s: can't disconnect: rc = %d\n", obd->obd_name, rc);
lustre-release/lustre/osp/osp_dev.c:		CERROR("%s: can't start precreate thread: rc = %d\n",
lustre-release/lustre/osp/osp_dev.c:			CERROR("%s: unknown param %s\n",
lustre-release/lustre/osp/osp_dev.c:		CERROR("%s: unknown command %u\n",
lustre-release/lustre/osp/osp_dev.c:		CERROR("%s: can't locate next device: %s\n",
lustre-release/lustre/osp/osp_dev.c:		CERROR("%s: cannot connect to next dev %s: rc = %d\n",
lustre-release/lustre/osp/osp_dev.c:		CERROR("Cannot find obd with name %s\n",
lustre-release/lustre/osp/osp_dev.c:		CERROR("%s: invalid target name %s: rc = %d\n",
lustre-release/lustre/osp/osp_dev.c:			CERROR("%s: invalid target name %s: rc = %d\n",
lustre-release/lustre/osp/osp_dev.c:			CERROR("%s: invalid target name %s: rc = %d\n",
lustre-release/lustre/osp/osp_dev.c:			CERROR("%s: invalid OST index in '%s': rc = %d\n",
lustre-release/lustre/osp/osp_dev.c:			CERROR("%s: invalid target name %s: rc = %d\n",
lustre-release/lustre/osp/osp_dev.c:			CERROR("%s: invalid OST index in '%s': rc = %d\n",
lustre-release/lustre/osp/osp_dev.c:			CERROR("%s: invalid mdt index from %s: rc =%d\n",
lustre-release/lustre/osp/osp_dev.c:			CERROR("%s: invalid OST index in '%s': rc =%d\n",
lustre-release/lustre/osp/osp_dev.c:		CERROR("%s: fsname too long in '%s': rc = %d\n",
lustre-release/lustre/osp/osp_dev.c:		CERROR("%s: can't setup obd: rc = %d\n", osp->opd_obd->obd_name,
lustre-release/lustre/osp/osp_dev.c:		CERROR("%s: fid init error: rc = %d\n",
lustre-release/lustre/osp/osp_dev.c:		CERROR("%s: can't connect obd: rc = %d\n", obd->obd_name, rc);
lustre-release/lustre/osp/osp_dev.c:		CERROR("%s: class disconnect error: rc = %d\n",
lustre-release/lustre/osp/osp_dev.c:		CERROR("%s: unsupported import event: %#x\n",
lustre-release/lustre/osp/osp_dev.c:		CERROR("%s: cannot get module '%s'\n", obd->obd_name,
lustre-release/lustre/osp/osp_dev.c:		CERROR("%s: unrecognized ioctl %#x by %s\n", obd->obd_name,
lustre-release/lustre/osp/lwp_dev.c:		CERROR("%s: failed to get server_uuid from lwp_name: rc = %d\n",
lustre-release/lustre/osp/lwp_dev.c:		CERROR("%s: client obd setup error: rc = %d\n",
lustre-release/lustre/osp/lwp_dev.c:		CERROR("%s: unknown command %u\n",
lustre-release/lustre/osp/lwp_dev.c:		CERROR("Cannot find obd with name %s\n",
lustre-release/lustre/osp/lwp_dev.c:		CERROR("%s: ptlrpcd addref error: rc =%d\n",
lustre-release/lustre/osp/lwp_dev.c:		CERROR("%s: lprocfs_obd_setup failed. %d\n",
lustre-release/lustre/osp/lwp_dev.c:		CERROR("%s: setup lwp failed. %d\n",
lustre-release/lustre/osp/lwp_dev.c:		CERROR("%s: sptlrpc_lprocfs_cliobd_attached failed. %d\n",
lustre-release/lustre/osp/lwp_dev.c:		CERROR("LWP notify thread: %s wasn't stopped\n", name);
lustre-release/lustre/osp/lwp_dev.c:		CERROR("Failed to start LWP notify thread:%s. %lu\n",
lustre-release/lustre/osp/lwp_dev.c:		CERROR("%s: can't connect obd: rc = %d\n", obd->obd_name, rc);
lustre-release/lustre/osp/lwp_dev.c:		CERROR("%s: class disconnect error: rc = %d\n",
lustre-release/lustre/osp/lwp_dev.c:		CERROR("%s: unsupported import event: %#x\n",
lustre-release/lustre/osp/lwp_dev.c:	CERROR("Unknown key %s\n", (char *)key);
lustre-release/lustre/osp/osp_object.c:		CERROR("%s: Insert update error "DFID": rc = %d\n",
lustre-release/lustre/osp/osp_object.c:			CERROR("%s:osp_attr_get update error "DFID": rc = %d\n",
lustre-release/lustre/osp/osp_object.c:				CERROR("%s: update error "DFID": rc = %d\n",
lustre-release/lustre/osp/osp_object.c:		CERROR("%s: Insert update error "DFID": rc = %d\n",
lustre-release/lustre/osp/osp_object.c:			CERROR("%s: Wrong version %x expected %x "DFID
lustre-release/lustre/osp/osp_object.c:		CERROR("%s: Wrong version %x expected %x "DFID": rc = %d\n",
lustre-release/lustre/osp/osp_object.c:		CERROR("%s: returned more pages than expected, %u > %u\n",
lustre-release/lustre/osp/osp_object.c:				CERROR("%s: invalid magic (%x != %x) for page "
lustre-release/lustre/osp/osp_sync.c:			CERROR("Bad %llu to set " DOSTID "\n",
lustre-release/lustre/osp/osp_sync.c:		CERROR("logging isn't available, run LFSCK\n");
lustre-release/lustre/osp/osp_sync.c:		CERROR("%s: invalid setattr record, lsr_valid:%llu\n",
lustre-release/lustre/osp/osp_sync.c:		CERROR("%s: unknown record type: %x\n", d->opd_obd->obd_name,
lustre-release/lustre/osp/osp_sync.c:			CERROR("%s: can't delete invalid record: "
lustre-release/lustre/osp/osp_sync.c:					CERROR("%s: can't cancel record: %d\n",
lustre-release/lustre/osp/osp_sync.c:			CERROR("%s: can't cancel %d records rc: %d\n",
lustre-release/lustre/osp/osp_sync.c:		CERROR("%s: can't initialize env: rc = %d\n",
lustre-release/lustre/osp/osp_sync.c:		CERROR("can't get appropriate context\n");
lustre-release/lustre/osp/osp_sync.c:		CERROR("can't get llh\n");
lustre-release/lustre/osp/osp_sync.c:		CERROR("%s: llog process with osp_sync_process_queues "
lustre-release/lustre/osp/osp_sync.c:		CERROR("can't cleanup llog: %d\n", rc);
lustre-release/lustre/osp/osp_sync.c:			CERROR("%s: can't get id from catalogs: rc = %d\n",
lustre-release/lustre/osp/osp_sync.c:			CERROR("%s: the catid "DFID" for init llog %d is bad\n",
lustre-release/lustre/osp/osp_sync.c:		CERROR("%s: can't initialize llog: rc = %d\n",
lustre-release/lustre/osp/osp_sync.c:		CERROR("%s: cannot start sync thread: rc = %d\n",
lustre-release/lustre/osp/osp_sync.c:		CERROR("%s: can't sync\n", d->opd_obd->obd_name);
lustre-release/lustre/osp/osp_trans.c:		CERROR("%s: init env error: rc = %d\n", osp->opd_obd->obd_name,
lustre-release/lustre/osp/osp_trans.c:		CERROR("%s: init env error: rc = %d\n", osp->opd_obd->obd_name,
lustre-release/lustre/osp/osp_md_object.c:		CERROR("%s: Insert update error: rc = %d\n",
lustre-release/lustre/osp/osp_md_object.c:		CERROR("%s: Wrong version %x expected %x: rc = %d\n",
lustre-release/lustre/osp/osp_md_object.c:		CERROR("%s: lookup "DFID" %s wrong size %d\n",
lustre-release/lustre/osp/osp_md_object.c:		CERROR("%s: lookup "DFID" %s invalid fid "DFID"\n",
lustre-release/lustre/osp/osp_md_object.c:		CERROR("%s: Insert update error "DFID": rc = %d\n",
lustre-release/lustre/osp/osp_md_object.c:		CERROR("%s: cannot insert update: rc = %d\n",
lustre-release/lustre/osp/osp_md_object.c:		CERROR("%s: invalid update reply magic %x expected %x:"
lustre-release/lustre/osp/osp_precreate.c:			CERROR("%s: can't sync\n", d->opd_obd->obd_name);
lustre-release/lustre/osp/osp_precreate.c:		CERROR("%s: can not write to last seq file: rc = %d\n",
lustre-release/lustre/osp/osp_precreate.c:		CERROR("%s: can not write to last seq file: rc = %d\n",
lustre-release/lustre/osp/osp_precreate.c:		CERROR("%s: alloc fid error: rc = %d\n",
lustre-release/lustre/osp/osp_precreate.c:		CERROR("%s: Can not update oid/seq file: rc = %d\n",
lustre-release/lustre/osp/osp_precreate.c:		CERROR("%s: can't precreate: rc = %d\n", d->opd_obd->obd_name,
lustre-release/lustre/osp/osp_precreate.c:		CERROR("%s: precreate fid "DFID" <= local used fid "DFID
lustre-release/lustre/osp/osp_precreate.c:			CERROR("%s: server does not support FID: rc = %d\n",
lustre-release/lustre/osp/osp_precreate.c:		CERROR("%s: Got last_fid failed.\n", d->opd_obd->obd_name);
lustre-release/lustre/osp/osp_precreate.c:		CERROR("%s: Got insane last_fid "DFID"\n",
lustre-release/lustre/osp/osp_precreate.c:			CERROR("%s: cannot cleanup orphans: rc = %d\n",
lustre-release/lustre/osp/osp_precreate.c:		CERROR("%s: init env error: rc = %d\n",
lustre-release/lustre/osp/osp_precreate.c:			CERROR("%s: alloc fid error: rc = %d\n",
lustre-release/lustre/osp/osp_precreate.c:		CERROR("%s: write fid error: rc = %d\n",
lustre-release/lustre/osp/osp_precreate.c:		CERROR("%s: init env error: rc = %d\n", d->opd_obd->obd_name,
lustre-release/lustre/osp/osp_precreate.c:				CERROR("%s: init pre fid error: rc = %d\n",
lustre-release/lustre/osp/osp_precreate.c:					CERROR("%s: cannot precreate objects:"
lustre-release/lustre/osp/osp_precreate.c:			CERROR("%s: precreate failed opd_pre_status %d\n",
lustre-release/lustre/osp/osp_precreate.c:			CERROR("can't punch object: %d\n", rc);
lustre-release/lustre/osp/osp_precreate.c:		CERROR("can't start precreate thread %ld\n", PTR_ERR(task));
lustre-release/lustre/osd-zfs/osd_object.c:		CERROR("%s: fail to create tx to set blksize for "DFID"\n",
lustre-release/lustre/osd-zfs/osd_object.c:		CERROR("%s: fail to assign tx to set blksize for "DFID
lustre-release/lustre/osd-zfs/osd_object.c:			CERROR("%s: fail to set blksize for "DFID": rc = %d\n",
lustre-release/lustre/osd-zfs/osd_object.c:			CERROR("%s: FID-in-LMA "DFID" does not match the "
lustre-release/lustre/osd-zfs/osd_object.c:		CERROR("%s: lookup "DFID"/%#llx failed: rc = %d\n",
lustre-release/lustre/osd-zfs/osd_object.c:		CERROR("%s: cannot destroy xattrs for %s: rc = %d\n",
lustre-release/lustre/osd-zfs/osd_object.c:			CERROR("%s: failed to free %s %llu: rc = %d\n",
lustre-release/lustre/osd-zfs/osd_object.c:			CERROR("%s: failed to free %s %llu: rc = %d\n",
lustre-release/lustre/osd-zfs/osd_object.c:			CERROR("%s: zap_add_int() failed %s %llu: rc = %d\n",
lustre-release/lustre/osd-zfs/osd_object.c:		CERROR("%s: zap_remove(%s) failed: rc = %d\n",
lustre-release/lustre/osd-zfs/osd_object.c:			CERROR("%s: can't change blocksize: %d\n",
lustre-release/lustre/osd-zfs/osd_object.c:			CERROR("%s: can't change blocksize: %d\n",
lustre-release/lustre/osd-zfs/osd_xattr.c:		CERROR("%s: can't allocate buffer for xattr update\n",
lustre-release/lustre/osd-zfs/osd_xattr.c:		CERROR("%s: can't allocate buffer for xattr update\n",
lustre-release/lustre/osd-zfs/osd_xattr.c:			CERROR("%s: failed to remove agent entry for "DFID
lustre-release/lustre/osd-zfs/osd_xattr.c:			CERROR("%s: xattr %s lookup failed: rc = %d\n",
lustre-release/lustre/osd-zfs/osd_xattr.c:			CERROR("%s: lookup xattr %s failed: rc = %d\n",
lustre-release/lustre/osd-zfs/osd_xattr.c:				CERROR("%s: free xattr %s failed: rc = %d\n",
lustre-release/lustre/osd-zfs/osd_xattr.c:		CERROR("%s: free xattr %llu failed: rc = %d\n",
lustre-release/lustre/osd-zfs/osd_index.c:		CERROR("%s: can't get bonus, rc = %d\n", osd->od_svname, rc);
lustre-release/lustre/osd-zfs/osd_index.c:				CERROR("wrong parent: "DFID" != "DFID"\n",
lustre-release/lustre/osd-zfs/osd_index.c:		CERROR("%s: fail to init for check LMV "DFID"(%llu): rc = %d\n",
lustre-release/lustre/osd-zfs/osd_index.c:			CERROR("%s: fail to locate next for check LMV "
lustre-release/lustre/osd-zfs/osd_index.c:				CERROR("%s: fail to lookup for check LMV "
lustre-release/lustre/osd-zfs/osd_index.c:		CERROR("%s: fail to remove entry under remote "
lustre-release/lustre/osd-zfs/osd_index.c:		CERROR("%s: fail to load LMA for removing "
lustre-release/lustre/osd-zfs/osd_index.c:		CERROR("%s: fail to update LMA for removing "
lustre-release/lustre/osd-zfs/osd_index.c:			CERROR("%s: Can not lookup fld for %#llx\n",
lustre-release/lustre/osd-zfs/osd_index.c:			CERROR("%s: "DFID" wasn't declared for insert\n",
lustre-release/lustre/osd-zfs/osd_index.c:			CERROR("%s: OIC for "DFID" isn't filled\n",
lustre-release/lustre/osd-zfs/osd_index.c:			CERROR("%s: failed to locate entry  %s: rc = %d\n",
lustre-release/lustre/osd-zfs/osd_index.c:			CERROR("%s: failed to destroy agent object (%llu) "
lustre-release/lustre/osd-zfs/osd_index.c:		CERROR("%s: zap_remove %s failed: rc = %d\n",
lustre-release/lustre/osd-zfs/osd_index.c:		CERROR("%s: unsupported direntry format: %d %d\n",
lustre-release/lustre/osd-zfs/osd_index.c:		CERROR("%s: unsupported direntry format: %d %d\n",
lustre-release/lustre/osd-zfs/osd_index.c:		CERROR("NOT IMPLEMETED YET (move to %#llx)\n",
lustre-release/lustre/osd-zfs/osd_quota.c:		CERROR("couldn't parse name %s\n", za->za_name);
lustre-release/lustre/osd-zfs/osd_lproc.c:		CERROR("%s: cannot setup sysfs / debugfs entry: %d\n",
lustre-release/lustre/osd-zfs/osd_lproc.c:		CERROR("Error %d setting up lprocfs for %s\n", rc, name);
lustre-release/lustre/osd-zfs/osd_handler.c:		CERROR("%s: can't initialize shrinker env: rc = %d\n",
lustre-release/lustre/osd-zfs/osd_handler.c:			CERROR("%s: transaction @0x%p commit error: rc = %d\n",
lustre-release/lustre/osd-zfs/osd_handler.c:		CERROR("%s: dt_txn_hook_start failed: rc = %d\n",
lustre-release/lustre/osd-zfs/osd_handler.c:			CERROR("%s: failed to start transaction due to ENOSPC"
lustre-release/lustre/osd-zfs/osd_handler.c:			CERROR("%s: can't assign tx: rc = %d\n",
lustre-release/lustre/osd-zfs/osd_handler.c:		CERROR("%s: someone try to start transaction under "
lustre-release/lustre/osd-zfs/osd_handler.c:	CERROR("%s: *** setting device %s read-only ***\n",
lustre-release/lustre/osd-zfs/osd_handler.c:		CERROR("%s: can't open %s\n", o->od_svname, o->od_mntdev);
lustre-release/lustre/osd-zfs/osd_handler.c:		CERROR("%s: Error looking up ZPL VERSION\n", o->od_mntdev);
lustre-release/lustre/osd-zfs/osd_handler.c:		CERROR("%s: lookup for root failed: rc = %d\n",
lustre-release/lustre/osd-zfs/osd_handler.c:		CERROR("%s: lookup for %s failed: rc = %d\n",
lustre-release/lustre/osd-zfs/osd_handler.c:		CERROR("%s: Space accounting not supported by this target, "
lustre-release/lustre/osd-zfs/osd_handler.c:		CERROR("%s: can't get dnode for unlinked: rc = %d\n",
lustre-release/lustre/osd-zfs/osd_handler.c:		CERROR("%s: someone try to free objects under "
lustre-release/lustre/osd-zfs/osd_handler.c:		CERROR("%s: lost %d allocated page(s)\n", o->od_svname,
lustre-release/lustre/osd-zfs/osd_handler.c:		CERROR("%s: lost %d loaned abuf(s)\n", o->od_svname,
lustre-release/lustre/osd-zfs/osd_handler.c:		CERROR("%s: lost %d pinned dbuf(s)\n", o->od_svname,
lustre-release/lustre/osd-zfs/osd_handler.c:		CERROR("proc fini error %d\n", rc);
lustre-release/lustre/osd-zfs/osd_scrub.c:			CERROR("%s: not enough RAM for rebuild index\n",
lustre-release/lustre/osd-zfs/osd_oi.c:			CERROR("%s: "DFID" lookup failed: rc = %d\n",
lustre-release/lustre/osd-zfs/osd_oi.c:		CERROR("%s: Can not create %s : rc = %d\n",
lustre-release/lustre/osd-zfs/osd_oi.c:		CERROR("%s: Can not find seq group "DFID"\n", osd_name(osd),
lustre-release/lustre/osd-zfs/osd_oi.c:		CERROR("%s: Can not find seq group "DFID"\n", osd_name(osd),
lustre-release/lustre/osd-zfs/osd_oi.c:		CERROR("%s: FID "DFID" add id map cache failed: %ld\n",
lustre-release/lustre/osd-zfs/osd_oi.c:			CERROR("%s: can't lookup: rc = %d\n",
lustre-release/lustre/osd-zfs/osd_oi.c:		CERROR("%s: FID "DFID" add id map cache failed: %ld\n",
lustre-release/lustre/lod/lod_lov.c:				CERROR("%s: failed to disconnect %s: rc = %d\n",
lustre-release/lustre/lod/lod_lov.c:		CERROR("request to add OBD %s with invalid generation: %d\n",
lustre-release/lustre/lod/lod_lov.c:		CERROR("can't find %s device\n", osp);
lustre-release/lustre/lod/lod_lov.c:		CERROR("%s: cannot connect to next dev %s (%d)\n",
lustre-release/lustre/lod/lod_lov.c:		CERROR("%s: can't set up pool, failed with %d\n",
lustre-release/lustre/lod/lod_lov.c:			CERROR("%s: cannot start llog on %s:rc = %d\n",
lustre-release/lustre/lod/lod_lov.c:		CERROR("Fail to add LFSCK target: name = %s, type = %s, "
lustre-release/lustre/lod/lod_lov.c:		CERROR("can't find %s device\n", osp);
lustre-release/lustre/lod/lod_lov.c:		CERROR("%s: request to remove OBD %s with invalid generation %d"
lustre-release/lustre/lod/lod_lov.c:		CERROR("%s: device %d is not set up\n", obd->obd_name, idx);
lustre-release/lustre/lod/lod_lov.c:		CERROR("%s: LOD target UUID %s at index %d does not match %s\n",
lustre-release/lustre/lod/lod_lov.c:				CERROR("%s: Can not locate "DFID": rc = %d\n",
lustre-release/lustre/lod/lod_lov.c:		CERROR("%s: bad idx: %d of %d\n", lod2obd(md)->obd_name, idx,
lustre-release/lustre/lod/lod_lov.c:		CERROR("%s: bad lod_tgt_desc for idx: %d\n",
lustre-release/lustre/lod/lod_lov.c:		CERROR("%s: invalid lod device, for idx: %d\n",
lustre-release/lustre/lod/lod_lov.c:		CERROR("LOD setup requires a descriptor\n");
lustre-release/lustre/lod/lod_lov.c:		CERROR("descriptor size wrong: %d > %d\n",
lustre-release/lustre/lod/lod_lov.c:			CERROR("%s: Bad lov desc magic: %#x\n",
lustre-release/lustre/lod/lod_qos.c:		CERROR("%s: statfs: rc = %d\n", lod2obd(d)->obd_name, rc);
lustre-release/lustre/lod/lod_qos.c:		CERROR("can't find slice\n");
lustre-release/lustre/lod/lod_qos.c:		CERROR("can't allocate memory for ost-in-use array\n");
lustre-release/lustre/lod/lod_qos.c:		CERROR("Start index %d not found in pool '%s'\n",
lustre-release/lustre/lod/lod_qos.c:	CERROR("can't lstripe objid "DFID": have %d want %u\n",
lustre-release/lustre/lod/lod_qos.c:		CERROR("%s: unrecognized magic %X\n",
lustre-release/lustre/lod/lod_qos.c:				CERROR("can't declare create: %d\n", rc);
lustre-release/lustre/lod/lod_sub_object.c:		CERROR("%s: can't get id from catalogs: rc = %d\n",
lustre-release/lustre/lod/lod_object.c:				CERROR("%s: the shard %.*s for the striped "
lustre-release/lustre/lod/lod_object.c:				CERROR("%s: both the shard "DFID" and "DFID
lustre-release/lustre/lod/lod_object.c:		CERROR("%s: invalid lmv_user_md: magic = %x, "
lustre-release/lustre/lod/lod_object.c:		CERROR("Invalid magic %x\n", lum->lmm_magic);
lustre-release/lustre/lod/lod_object.c:		CERROR("%s: "DFID" first component cannot be extension space\n",
lustre-release/lustre/lod/lod_object.c:		CERROR("%s: "DFID" invalid extension space components\n",
lustre-release/lustre/lod/lod_object.c:			CERROR("%s: the replay buffer of layout extend "
lustre-release/lustre/lod/lod_object.c:		CERROR("%s: can't locate "DFID":rc = %d\n",
lustre-release/lustre/lod/lod_object.c:		CERROR(DFID ": doesn't have a primary mirror\n",
lustre-release/lustre/lod/lod_dev.c:		CERROR("%s: invalid FID "DFID"\n", lod2obd(lod)->obd_name,
lustre-release/lustre/lod/lod_dev.c:			CERROR("%s: error cleaning up LOD index %u: cmd %#x : rc = %d\n",
lustre-release/lustre/lod/lod_dev.c:		CERROR("%s: broken update record! index %u "DFID".%u: rc = %d\n",
lustre-release/lustre/lod/lod_dev.c:		CERROR("%s: can't initialize env: rc = %d\n",
lustre-release/lustre/lod/lod_dev.c:		CERROR("%s get update log failed: rc = %d\n",
lustre-release/lustre/lod/lod_dev.c:		CERROR("invalid MDT index in '%s': rc = %d\n", lodname, rc);
lustre-release/lustre/lod/lod_dev.c:		CERROR("invalid MDT index in '%s': rc = %d\n", lodname, rc);
lustre-release/lustre/lod/lod_dev.c:		CERROR("invalid MDT index in '%s': rc = %d\n", lodname, rc);
lustre-release/lustre/lod/lod_dev.c:		CERROR("invalid MDT index in '%s': rc = %d\n", lodname, rc);
lustre-release/lustre/lod/lod_dev.c:		CERROR("invalid MDT index in '%s': rc = %d\n", lodname, rc);
lustre-release/lustre/lod/lod_dev.c:		CERROR("%s: cannot setup updatelog llog: rc = %d\n",
lustre-release/lustre/lod/lod_dev.c:		CERROR("%s: cannot start recovery thread: rc = %d\n",
lustre-release/lustre/lod/lod_dev.c:		CERROR("%s: cannot init distribute txn: rc = %d\n",
lustre-release/lustre/lod/lod_dev.c:				CERROR("%s: can not find %s: rc = %d\n",
lustre-release/lustre/lod/lod_dev.c:				CERROR("%s: can not find %s: rc = %d\n",
lustre-release/lustre/lod/lod_dev.c:			CERROR("%s: can't process %u: rc = %d\n",
lustre-release/lustre/lod/lod_dev.c:			CERROR("error in disconnect from storage: rc = %d\n",
lustre-release/lustre/lod/lod_dev.c:		CERROR("%s: unknown command %u\n", lod2obd(lod)->obd_name,
lustre-release/lustre/lod/lod_dev.c:				CERROR("%s: can't complete recovery on #%d: rc = %d\n",
lustre-release/lustre/lod/lod_dev.c:		CERROR("%s: prepare bottom error: rc = %d\n",
lustre-release/lustre/lod/lod_dev.c:				CERROR("%s: can't sync ost %u: rc = %d\n",
lustre-release/lustre/lod/lod_dev.c:				CERROR("%s: can't sync mdt %u: rc = %d\n",
lustre-release/lustre/lod/lod_dev.c:			CERROR("%s: unable to parse device name: rc = %d\n",
lustre-release/lustre/lod/lod_dev.c:		CERROR("%s: unable to parse device name: rc = %d\n",
lustre-release/lustre/lod/lod_dev.c:		CERROR("%s: can not locate next device: rc = %d\n",
lustre-release/lustre/lod/lod_dev.c:		CERROR("%s: cannot connect to next dev: rc = %d\n",
lustre-release/lustre/lod/lod_dev.c:		CERROR("Cannot find obd with name '%s': rc = %d\n",
lustre-release/lustre/lod/lod_dev.c:		CERROR("%s: can not fini ost descriptors: rc =  %d\n",
lustre-release/lustre/lod/lod_dev.c:		CERROR("%s: can not fini mdt descriptors: rc =  %d\n",
lustre-release/lustre/lod/lod_dev.c:		CERROR("%s: disconnect #%d\n", exp->exp_obd->obd_name,
lustre-release/lustre/lod/lproc_lod.c:			CERROR("can't set maxage on #%d: %d\n",
lustre-release/lustre/lod/lproc_lod.c:		CERROR("%s: failed to setup DT tunables: %d\n",
lustre-release/lustre/lod/lproc_lod.c:		CERROR("%s: error %d setting up lprocfs\n",
lustre-release/lustre/lod/lproc_lod.c:		CERROR("%s: lov subsystem not found\n", obd->obd_name);
lustre-release/lustre/lod/lproc_lod.c:		CERROR("%s: failed to create LOV sysfs symlink\n",
lustre-release/lustre/lod/lproc_lod.c:		CERROR("%s: failed to create LOV debugfs symlink\n",
lustre-release/lustre/lod/lproc_lod.c:		CERROR("cannot create LOV symlink for /proc/fs/lustre/lod/%s\n",
lustre-release/lustre/lov/lov_object.c:			CERROR("%s: OST %04x is not initialized\n",
lustre-release/lustre/lov/lov_object.c:		CERROR("%s: error while looking for mds number. Seq %#llx"
lustre-release/lustre/lov/lov_object.c:		CERROR("%s: cannot find corresponding MDC device for mds #%x "
lustre-release/lustre/lov/lov_object.c:		CERROR("%s: DOM entry must be the first stripe in a mirror\n",
lustre-release/lustre/lov/lov_object.c:				CERROR("%s: DOM entries with different sizes\n",
lustre-release/lustre/lov/lov_object.c:			CERROR("%s: unknown composite layout entry type %i\n",
lustre-release/lustre/lov/lov_object.c:		CERROR("%s: cannot apply new layout on "DFID" : rc = %d\n",
lustre-release/lustre/lov/lov_obd.c:                CERROR("Target %s not set up\n", obd_uuid2str(tgt_uuid));
lustre-release/lustre/lov/lov_obd.c:                CERROR("Target %s register_observer error %d\n",
lustre-release/lustre/lov/lov_obd.c:                CERROR("Target %s connect error %d\n",
lustre-release/lustre/lov/lov_obd.c:			CERROR("%s: can't register LOV target /sys/fs/lustre/%s/%s/target_obds/%s : rc = %d\n",
lustre-release/lustre/lov/lov_obd.c:                        CERROR("%s: lov connect tgt %d failed: %d\n",
lustre-release/lustre/lov/lov_obd.c:                        CERROR("%s error sending notify %d\n",
lustre-release/lustre/lov/lov_obd.c:                CERROR("Target %s disconnect error %d\n",
lustre-release/lustre/lov/lov_obd.c:		CERROR("%s: unknown event %d for uuid %s\n", obd->obd_name,
lustre-release/lustre/lov/lov_obd.c:			CERROR("unexpected notification of %s %s\n",
lustre-release/lustre/lov/lov_obd.c:			CERROR("%s: event %d failed: rc = %d\n", obd->obd_name,
lustre-release/lustre/lov/lov_obd.c:		CERROR("%s: request to add '%s' with invalid generation: %d\n",
lustre-release/lustre/lov/lov_obd.c:		CERROR("%s: UUID %s already assigned at index %d: rc = %d\n",
lustre-release/lustre/lov/lov_obd.c:		CERROR("%s: add failed, deleting %s: rc = %d\n",
lustre-release/lustre/lov/lov_obd.c:                CERROR("LOV target index %d >= number of LOV OBDs %d.\n",
lustre-release/lustre/lov/lov_obd.c:                CERROR("LOV target at index %d is not setup.\n", index);
lustre-release/lustre/lov/lov_obd.c:                CERROR("LOV target UUID %s at index %d doesn't match %s.\n",
lustre-release/lustre/lov/lov_obd.c:                CERROR("LOV setup requires a descriptor\n");
lustre-release/lustre/lov/lov_obd.c:                CERROR("descriptor size wrong: %d > %d\n",
lustre-release/lustre/lov/lov_obd.c:                        CERROR("%s: Bad lov desc magic: %#x\n",
lustre-release/lustre/lov/lov_obd.c:				CERROR("%s: lov tgt %d not cleaned! "
lustre-release/lustre/lov/lov_obd.c:                CERROR("Unknown command: %d\n", lcfg->lcfg_command);
lustre-release/lustre/lov/lov_obd.c:		CERROR("%s: bad quota opc %x for lov obd\n",
lustre-release/lustre/lov/lov_obd.c:                                CERROR("ost %d is inactive\n", i);
lustre-release/lustre/lov/lov_dev.c:			CERROR("%s: failed to add MDC %s as target: rc = %d\n",
lustre-release/lustre/lov/lov_dev.c:		CERROR("Target %s not set up\n", obd_uuid2str(&tgt->ltd_uuid));
lustre-release/lustre/lov/lov_dev.c:			CERROR("add failed (%d), deleting %s\n", rc,
lustre-release/lustre/lov/lov_dev.c:		CERROR("%s: cannot serve more than %d MDC devices\n",
lustre-release/lustre/lov/lov_dev.c:			CERROR("%s: cannot find LMV OBD by UUID (%s)\n",
lustre-release/lustre/lov/lov_dev.c:			CERROR("%s: failed to add MDC %s as target: rc = %d\n",
lustre-release/lustre/lov/lov_io.c:		CERROR(DFID ": cannot find any valid components covering "
lustre-release/lustre/lov/lov_io.c:		CERROR(DFID": failed to find a component covering "
lustre-release/lustre/lov/lov_io.c:		CERROR(DFID": trying to instantiate components for designated "
lustre-release/lustre/lov/lov_io.c:			CERROR("I/O to invalid component: %d, mirror: %d\n",
lustre-release/lustre/lov/lov_io.c:		CERROR("Page fault on a file without stripes: "DFID"\n",
lustre-release/lustre/lov/lov_ea.c:		CERROR("lov: bad stripe count %d: rc = %d\n",
lustre-release/lustre/lov/lov_ea.c:		CERROR("lov: zero object id: rc = %d\n", rc);
lustre-release/lustre/lov/lov_ea.c:		CERROR("lov: unrecognized striping pattern: rc = %d\n", rc);
lustre-release/lustre/lov/lov_ea.c:		CERROR("lov: bad stripe size %u: rc = %d\n",
lustre-release/lustre/lov/lov_ea.c:		CERROR("LOV EA %s too small: %zu, need %u\n",
lustre-release/lustre/lov/lov_ea.c:			CERROR("%s: OST index %d more than OST count %d\n",
lustre-release/lustre/lov/lov_ea.c:			CERROR("%s: OST index %d missing\n",
lustre-release/lustre/lov/lov_ea.c:		CERROR("bad LCM buffer size %zu, expected %zu\n",
lustre-release/lustre/lov/lov_ea.c:			CERROR("LCM entry %u has invalid blob: "
lustre-release/lustre/lov/lproc_lov.c:		CERROR("%s: error setting up debugfs for pools : rc %d\n",
lustre-release/lustre/lov/lov_pack.c:		CERROR("bad LSM MAGIC: 0x%08X != 0x%08X nor 0x%08X\n",
lustre-release/lustre/ldlm/ldlm_resource.c:		CERROR("Failed to set %s, rc = %d.\n",
lustre-release/lustre/ldlm/ldlm_resource.c:		CERROR("%s should be greater than 1MB.\n",
lustre-release/lustre/ldlm/ldlm_resource.c:			CERROR("lock_reclaim_threshold_mb must be smaller than "
lustre-release/lustre/ldlm/ldlm_resource.c:			CERROR("lock_limit_mb must be greater than "
lustre-release/lustre/ldlm/ldlm_resource.c:		CERROR("LDebugFS failed in ldlm-init\n");
lustre-release/lustre/ldlm/ldlm_resource.c:		CERROR("LProcFS failed in ldlm-init\n");
lustre-release/lustre/ldlm/ldlm_resource.c:		CERROR("LProcFS failed in ldlm-init\n");
lustre-release/lustre/ldlm/ldlm_resource.c:		CERROR("LProcFS failed in ldlm-init\n");
lustre-release/lustre/ldlm/ldlm_resource.c:		CERROR("lru_size: invalid value written\n");
lustre-release/lustre/ldlm/ldlm_resource.c:		CERROR("dlm namespace %s has no procfs dir?\n",
lustre-release/lustre/ldlm/ldlm_resource.c:		CERROR("ldlm_get_ref failed: %d\n", rc);
lustre-release/lustre/ldlm/ldlm_resource.c:		CERROR("Unknown type %d for ns %s\n", ns_type, name);
lustre-release/lustre/ldlm/ldlm_resource.c:		CERROR("Can't initialize ns sysfs, rc %d\n", rc);
lustre-release/lustre/ldlm/ldlm_resource.c:		CERROR("Can't initialize ns proc, rc %d\n", rc);
lustre-release/lustre/ldlm/ldlm_resource.c:		CERROR("Can't initialize lock pool, rc %d\n", rc);
lustre-release/lustre/ldlm/ldlm_resource.c:				CERROR("ldlm_cli_cancel: %d\n", rc);
lustre-release/lustre/ldlm/ldlm_resource.c:	CERROR("%s: namespace resource "DLDLMRES" (%p) refcount nonzero "
lustre-release/lustre/ldlm/ldlm_pool.c:		CERROR("%s: debugfs entry is not initialized\n",
lustre-release/lustre/ldlm/ldlm_pool.c:		CERROR("%s: cannot create 'pool' debugfs entry: rc = %d\n",
lustre-release/lustre/ldlm/ldlm_lock.c:		CERROR("Unknown intent 0x%08x\n", it);
lustre-release/lustre/ldlm/ldlm_lock.c:                        CERROR("FL_CBPENDING set on non-local lock--just a "
lustre-release/lustre/ldlm/ldlm_lock.c:                CERROR("This is client-side-only module, cannot handle "
lustre-release/lustre/ldlm/ldlm_lock.c:		CERROR("This is client-side-only module, cannot handle "
lustre-release/lustre/ldlm/ldlm_flock.c:		CERROR("deadlock found, but client doesn't support flock canceliation\n");
lustre-release/lustre/ldlm/ldlm_flock.c:		CERROR("Illegal parameter for client-side-only module.\n");
lustre-release/lustre/ldlm/ldlm_lib.c:				CERROR("can't remove current connection\n");
lustre-release/lustre/ldlm/ldlm_lib.c:		CERROR("connection %s not found\n", uuid->uuid);
lustre-release/lustre/ldlm/ldlm_lib.c:		CERROR("unknown client OBD type \"%s\", can't setup\n",
lustre-release/lustre/ldlm/ldlm_lib.c:		CERROR("requires a TARGET UUID\n");
lustre-release/lustre/ldlm/ldlm_lib.c:		CERROR("client UUID must be less than 38 characters\n");
lustre-release/lustre/ldlm/ldlm_lib.c:		CERROR("setup requires a SERVER UUID\n");
lustre-release/lustre/ldlm/ldlm_lib.c:		CERROR("target UUID must be less than 38 characters\n");
lustre-release/lustre/ldlm/ldlm_lib.c:		CERROR("ldlm_get_ref failed: %d\n", rc);
lustre-release/lustre/ldlm/ldlm_lib.c:			CERROR("%s: bad mount option 'network=%s': rc = %d\n",
lustre-release/lustre/ldlm/ldlm_lib.c:		CERROR("can't add initial connection\n");
lustre-release/lustre/ldlm/ldlm_lib.c:		CERROR("Unable to create client namespace - %s\n",
lustre-release/lustre/ldlm/ldlm_lib.c:		CERROR("invalid export for disconnect: exp %p cookie %#llx\n",
lustre-release/lustre/ldlm/ldlm_lib.c:		CERROR("disconnecting disconnected device (%s)\n",
lustre-release/lustre/ldlm/ldlm_lib.c:		CERROR("%s: cannot get reverse import %s security: rc = %d\n",
lustre-release/lustre/ldlm/ldlm_lib.c:			CERROR("invalid flags %x of resent replay\n",
lustre-release/lustre/ldlm/ldlm_lib.c:		CERROR("%s: Recovery queues ( %s%s%s) are not empty\n",
lustre-release/lustre/ldlm/ldlm_lib.c:			CERROR("%s: Aborting recovery\n", obd->obd_name);
lustre-release/lustre/ldlm/ldlm_lib.c:			CERROR("Invalid DLM result code: %d\n", error);
lustre-release/lustre/ldlm/ldlm_lib.c:		CERROR("dumping locks for export %p, ignore if the unmount doesn't hang\n",
lustre-release/lustre/ldlm/ldlm_request.c:			CERROR("ldlm_cli_cancel: %d\n", rc);
lustre-release/lustre/ldlm/ldlm_request.c:		CERROR("Trying to enqueue local lock in a shadow namespace\n");
lustre-release/lustre/ldlm/ldlm_request.c:		CERROR("canceling unused lock "DLDLMRES": rc = %d\n",
lustre-release/lustre/ldlm/ldlm_request.c:		CERROR("received replay ack for unknown local cookie %#llx remote cookie %#llx from server %s id %s\n",
lustre-release/lustre/ldlm/ldlm_lockd.c:				CERROR("free lock on elt list %p\n", lock);
lustre-release/lustre/ldlm/ldlm_lockd.c:				CERROR("lock with free export on elt list %p\n",
lustre-release/lustre/ldlm/ldlm_lockd.c:			CERROR("dump the log upon eviction\n");
lustre-release/lustre/ldlm/ldlm_lockd.c:		CERROR("unknown opcode %u\n",
lustre-release/lustre/ldlm/ldlm_lockd.c:			CERROR("ldlm_cli_cancel: %d\n", rc);
lustre-release/lustre/ldlm/ldlm_lockd.c:		CERROR("%s from %s arrived at %llu with bad export cookie %llu\n",
lustre-release/lustre/ldlm/ldlm_lockd.c:		CERROR("invalid opcode %d\n",
lustre-release/lustre/ldlm/ldlm_lockd.c:		CERROR("cannot start LDLM thread ldlm_bl_%02d: rc %ld\n",
lustre-release/lustre/ldlm/ldlm_lockd.c:			CERROR("ldlm_cleanup failed: %d\n", rc);
lustre-release/lustre/ldlm/ldlm_lockd.c:		CERROR("failed to start service\n");
lustre-release/lustre/ldlm/ldlm_lockd.c:		CERROR("failed to start service\n");
lustre-release/lustre/ldlm/ldlm_lockd.c:		CERROR("Cannot start ldlm expired-lock thread: %d\n", rc);
lustre-release/lustre/ldlm/ldlm_lockd.c:		CERROR("Failed to initialize LDLM pools: %d\n", rc);
lustre-release/lustre/ldlm/ldlm_lockd.c:		CERROR("Failed to setup reclaim thread: rc = %d\n", rc);
lustre-release/lustre/ldlm/ldlm_lockd.c:		CERROR("ldlm still has namespaces; clean these up first.\n");
lustre-release/lustre/ldlm/ldlm_lockd.c:		CERROR("ldlm_refcount is %d in ldlm_exit!\n", ldlm_refcount);
lustre-release/lustre/osc/osc_quota.c:                CERROR("ptlrpc_queue_wait failed, rc: %d\n", rc);
lustre-release/lustre/osc/osc_quota.c:                CERROR ("Can't unpack obd_quotactl\n");
lustre-release/lustre/osc/osc_cache.c:		CERROR("max_pages: %#x chunkbits: %u chunk_mask: %#lx\n",
lustre-release/lustre/osc/osc_cache.c:		CERROR("completion on oap %p obj %p returns %d.\n",
lustre-release/lustre/osc/osc_cache.c:				CERROR("Write request failed with %d\n", rc);
lustre-release/lustre/osc/osc_cache.c:				CERROR("Read request failed with %d\n", rc);
lustre-release/lustre/osc/osc_object.c:			CERROR("Bad %llu to set " DOSTID " : rc %d\n",
lustre-release/lustre/osc/osc_lock.c:		CERROR("Impossible state: %d\n", oscl->ols_state);
lustre-release/lustre/osc/osc_lock.c:		CERROR("%s: server does not support lockahead/locknoexpand:"
lustre-release/lustre/osc/osc_lock.c:                CERROR("Pages for lockless lock %p were not purged(%d)\n",
lustre-release/lustre/osc/osc_request.c:		CERROR("can't unpack ost_body\n");
lustre-release/lustre/osc/osc_request.c:		CERROR("dirty %lu > dirty_max %lu\n",
lustre-release/lustre/osc/osc_request.c:		 * this CERROR() unless we add in a small fudge factor (+1). */
lustre-release/lustre/osc/osc_request.c:		CERROR("%s: dirty %ld > system dirty_max %ld\n",
lustre-release/lustre/osc/osc_request.c:		CERROR("dirty %lu - dirty_max %lu too big???\n",
lustre-release/lustre/osc/osc_request.c:                CERROR("Unexpected # bytes transferred: %d (requested %d)\n",
lustre-release/lustre/osc/osc_request.c:		CERROR("%s: unable to initialize checksum hash %s: rc = %d\n",
lustre-release/lustre/osc/osc_request.c:		CERROR("Unable to initialize checksum hash %s\n",
lustre-release/lustre/osc/osc_request.c:			CERROR("%s: can't open to dump pages with checksum "
lustre-release/lustre/osc/osc_request.c:				CERROR("%s: wanted to write %u but got %d "
lustre-release/lustre/osc/osc_request.c:		CERROR("%s: sync returns %d\n", dbgcksum_file_name, rc);
lustre-release/lustre/osc/osc_request.c:			CERROR("%s: unexpected positive size %d\n",
lustre-release/lustre/osc/osc_request.c:		CERROR("%s: unexpected size %d, requested %d\n", obd_name,
lustre-release/lustre/osc/osc_request.c:		CERROR("%s: unexpected size %d, transferred %d\n", obd_name,
lustre-release/lustre/osc/osc_request.c:			CERROR("%s: checksum %u requested from %s but not sent\n",
lustre-release/lustre/osc/osc_request.c:			CERROR("%s: too many resent retries for object: "
lustre-release/lustre/osc/osc_request.c:		CERROR("prep_req failed: %d\n", rc);
lustre-release/lustre/osc/osc_request.c:		CERROR("%s: cannot get module '%s'\n", obd->obd_name,
lustre-release/lustre/osc/osc_request.c:                CERROR("Unknown import event %d\n", event);
lustre-release/lustre/llite/vvp_dev.c:			CERROR("Cannot init lu_site, rc %d.\n", rc);
lustre-release/lustre/llite/vvp_dev.c:                CERROR("Cannot cleanup cl-stack due to memory shortage.\n");
lustre-release/lustre/llite/xattr.c:			CERROR("Invalid LOV magic %08x\n",
lustre-release/lustre/llite/xattr_cache.c:		CERROR("no MDT BODY in the refill xattr reply\n");
lustre-release/lustre/llite/xattr_cache.c:		CERROR("wrong setxattr reply\n");
lustre-release/lustre/llite/xattr_cache.c:			CERROR("xattr protocol violation (names are broken)\n");
lustre-release/lustre/llite/xattr_cache.c:			CERROR("xattr protocol violation (vals are broken)\n");
lustre-release/lustre/llite/xattr_cache.c:		CERROR("a hole in xattr data\n");
lustre-release/lustre/llite/vvp_io.c:		CERROR("Wrong IO type %u\n", vio->vui_io_subtype);
lustre-release/lustre/llite/vvp_io.c:	CERROR("unknown error in page fault %d\n", cfio->ft_flags);
lustre-release/lustre/llite/vvp_io.c:			CERROR("%s: refresh file layout " DFID " error %d.\n",
lustre-release/lustre/llite/llite_nfs.c:		CERROR("%s: failure inode "DFID" get parent: rc = %d\n",
lustre-release/lustre/llite/llite_lib.c:                CERROR("MD %s: not setup or attached\n", md);
lustre-release/lustre/llite/llite_lib.c:		CERROR("cannot connect to %s: rc = %d\n", md, err);
lustre-release/lustre/llite/llite_lib.c:		CERROR("%s: Can't init metadata layer FID infrastructure, "
lustre-release/lustre/llite/llite_lib.c:		CERROR("%s: Get connect data failed: rc = %d\n",
lustre-release/lustre/llite/llite_lib.c:		CERROR("DT %s: not setup or attached\n", dt);
lustre-release/lustre/llite/llite_lib.c:		CERROR("%s: Cannot connect to %s: rc = %d\n",
lustre-release/lustre/llite/llite_lib.c:		CERROR("%s: Can't init data layer FID infrastructure, "
lustre-release/lustre/llite/llite_lib.c:		CERROR("cannot mds_connect: rc = %d\n", err);
lustre-release/lustre/llite/llite_lib.c:		CERROR("%s: Invalid root fid "DFID" during mount\n",
lustre-release/lustre/llite/llite_lib.c:		CERROR("%s: md_getattr failed for root: rc = %d\n",
lustre-release/lustre/llite/llite_lib.c:		CERROR("failed to understand root inode md: rc = %d\n", err);
lustre-release/lustre/llite/llite_lib.c:		CERROR("%s: bad ll_iget() for root: rc = %d\n",
lustre-release/lustre/llite/llite_lib.c:			CERROR("%s: Set checksum failed: rc = %d\n",
lustre-release/lustre/llite/llite_lib.c:		CERROR("%s: can't make root dentry: rc = %d\n",
lustre-release/lustre/llite/llite_lib.c:			CERROR("%s: could not register %s in llite: rc = %d\n",
lustre-release/lustre/llite/llite_lib.c:			CERROR("%s: could not register %s in llite: rc = %d\n",
lustre-release/lustre/llite/llite_lib.c:		CERROR("%s: cannot get max LOV EA size: rc = %d\n",
lustre-release/lustre/llite/llite_lib.c:		CERROR("Get max mdsize error rc %d\n", rc);
lustre-release/lustre/llite/llite_lib.c:		CERROR("Get default mdsize error rc %d\n", rc);
lustre-release/lustre/llite/llite_lib.c:		CERROR("%s: fsname longer than %u characters: rc = %d\n",
lustre-release/lustre/llite/llite_lib.c:		CERROR("%s: could not register mountpoint in llite: rc = %d\n",
lustre-release/lustre/llite/llite_lib.c:		CERROR("%s: failed get simple inode "DFID": rc = -ENOENT\n",
lustre-release/lustre/llite/llite_lib.c:		CERROR("%s: "DFID" dir layout mismatch:\n",
lustre-release/lustre/llite/llite_lib.c:			CERROR("md_setattr fails: rc = %d\n", rc);
lustre-release/lustre/llite/llite_lib.c:				CERROR("%s: PCC inode "DFID" setattr failed: "
lustre-release/lustre/llite/llite_lib.c:			CERROR("%s: failure inode "DFID": rc = %d\n",
lustre-release/lustre/llite/llite_lib.c:		CERROR("Invalid MDC connection handle %#llx\n",
lustre-release/lustre/llite/llite_lib.c:		CERROR("Invalid LOV connection handle %#llx\n",
lustre-release/lustre/llite/llite_lib.c:			CERROR("%s: Fid is insane "DFID"\n",
lustre-release/lustre/llite/llite_lib.c:                        CERROR("new_inode -fatal: rc %d\n", rc);
lustre-release/lustre/llite/dir.c:                CERROR("Failed to set parameter: %d\n", rc);
lustre-release/lustre/llite/dir.c:		CERROR("unknown magic: %lX\n", (unsigned long)lmm->lmm_magic);
lustre-release/lustre/llite/dir.c:				CERROR("%s: archive id %d requested but only "
lustre-release/lustre/llite/dir.c:		CERROR("unsupported quotactl op: %#x\n", cmd);
lustre-release/lustre/llite/dir.c:			CERROR("%s: lookup %.*s failed: rc = %d\n",
lustre-release/lustre/llite/dir.c:			CERROR("%s: wrong lum magic %x : rc = %d\n", filename,
lustre-release/lustre/llite/dir.c:			CERROR("%s: wrong lum size %d for magic %x : rc = %d\n",
lustre-release/lustre/llite/dir.c:			CERROR("%s: wrong lum magic %x or size %d: rc = %d\n",
lustre-release/lustre/llite/dir.c:				CERROR("invalid %d foreign size returned\n",
lustre-release/lustre/llite/dir.c:                        CERROR("get target count failed: %d\n", rc);
lustre-release/lustre/llite/dir.c:			CERROR("%s: wrong lum magic %x: rc = %d\n",
lustre-release/lustre/llite/lproc_llite.c:		CERROR("%s: can't set max_readahead_mb=%llu > %luMB\n",
lustre-release/lustre/llite/lproc_llite.c:		CERROR("%s: can't set max_readahead_per_file_mb=%llu > max_read_ahead_mb=%lu\n",
lustre-release/lustre/llite/lproc_llite.c:		CERROR("%s: can't set max_read_ahead_whole_mb=%llu > max_read_ahead_per_file_mb=%lu\n",
lustre-release/lustre/llite/lproc_llite.c:		CERROR("%s: can't set max cache more than %lu MB\n",
lustre-release/lustre/llite/lproc_llite.c:	CERROR("Bad statahead_running_max value %lu. Valid values "
lustre-release/lustre/llite/lproc_llite.c:		CERROR("Bad statahead_max value %lu. Valid values are in the range [0, %d]\n",
lustre-release/lustre/llite/lproc_llite.c:			CERROR("%s: Revise array LL_SBI_FLAGS to match sbi "
lustre-release/lustre/llite/lproc_llite.c:		CERROR("%s: cannot set max_read_ahead_async_active=%u %s than %u\n",
lustre-release/lustre/llite/lproc_llite.c:		CERROR("%s: can't set read_ahead_async_file_threshold_mb=%lu > "
lustre-release/lustre/llite/namei.c:		CERROR("MDS body missing FID\n");
lustre-release/lustre/llite/namei.c:		CERROR("MDS body missing FID\n");
lustre-release/lustre/llite/namei.c:		CERROR("Can not initialize inode "DFID" without object type: "
lustre-release/lustre/llite/namei.c:		CERROR("Invalid inode "DFID" type\n", PFID(&lli->lli_fid));
lustre-release/lustre/llite/namei.c:                CERROR("Tell Peter, lookup on mtpt, it %s\n", LL_IT2STR(it));
lustre-release/lustre/llite/statahead.c:		CERROR("can't start ll_agl thread, rc: %ld\n", PTR_ERR(task));
lustre-release/lustre/llite/statahead.c:			CERROR("%s: reading dir "DFID" at %llu"
lustre-release/lustre/llite/statahead.c:		CERROR("can't start ll_sa thread, rc: %d\n", rc);
lustre-release/lustre/llite/symlink.c:			CERROR("%s: inode "DFID": rc = %d\n",
lustre-release/lustre/llite/symlink.c:		CERROR("OBD_MD_LINKNAME not set on reply\n");
lustre-release/lustre/llite/symlink.c:		CERROR("%s: inode "DFID": symlink length %d not expected %d\n",
lustre-release/lustre/llite/symlink.c:		CERROR("%s: inode "DFID": symlink not NULL terminated string"
lustre-release/lustre/llite/file.c:		CERROR("%s: invalid MDC connection handle closing "DFID"\n",
lustre-release/lustre/llite/file.c:		CERROR("%s: inode "DFID" mdc close failed: rc = %d\n",
lustre-release/lustre/llite/file.c:		CERROR("%s: server returns off/len %llu/%u but size %llu\n",
lustre-release/lustre/llite/file.c:		CERROR(DFID "lease granted but no open lock, %d/%llu.\n",
lustre-release/lustre/llite/file.c:		CERROR("%s: error closing file "DFID": %d\n",
lustre-release/lustre/llite/file.c:			CERROR("unknown IO subtype %u\n", vio->vui_io_subtype);
lustre-release/lustre/llite/file.c:                                CERROR("%s: unable to disable locking on "
lustre-release/lustre/llite/file.c:                CERROR("unknown fcntl lock command: %d\n", cmd);
lustre-release/lustre/llite/file.c:			CERROR("%s: MDT doesn't support stripe directory "
lustre-release/lustre/llite/file.c:		CERROR("%s: migrate %s, but FID "DFID" is insane\n",
lustre-release/lustre/llite/lcommon_misc.c:		CERROR("unexpected notification from %s %s"
lustre-release/lustre/llite/lcommon_cl.c:			CERROR("%s: unexpected not-NEW inode "DFID": rc = %d\n",
lustre-release/lustre/llite/lcommon_cl.c:		CERROR("%s: failed to initialize cl_object "DFID": rc = %d\n",
lustre-release/lustre/target/tgt_grant.c:		CERROR("%s: cli %s/%p ted_grant(%ld) + ted_pending(%ld)"
lustre-release/lustre/target/tgt_grant.c:		CERROR("%s: cli %s/%p ted_dirty(%ld) > maxsize(%llu)\n",
lustre-release/lustre/target/tgt_grant.c: * found, a CERROR is printed with the function name \func that was passed as
lustre-release/lustre/target/tgt_grant.c:		CERROR("%s: tot_granted %llu != fo_tot_granted %llu\n",
lustre-release/lustre/target/tgt_grant.c:		CERROR("%s: tot_pending %llu != fo_tot_pending %llu\n",
lustre-release/lustre/target/tgt_grant.c:		CERROR("%s: tot_dirty %llu != fo_tot_dirty %llu\n",
lustre-release/lustre/target/tgt_grant.c:		CERROR("%s: tot_pending %llu > tot_granted %llu\n",
lustre-release/lustre/target/tgt_grant.c:		CERROR("%s: tot_granted %llu > maxsize %llu\n",
lustre-release/lustre/target/tgt_grant.c:		CERROR("%s: tot_dirty %llu > maxsize %llu\n",
lustre-release/lustre/target/tgt_grant.c:		CERROR("%s: cli %s/%p reports %llu dropped > tot_grant %llu\n",
lustre-release/lustre/target/tgt_grant.c:		CERROR("%s: cli %s/%p dirty %ld pend %ld grant %ld\n",
lustre-release/lustre/target/tgt_grant.c:			CERROR("%s: cli %s claims %lu GRANT, real grant %lu\n",
lustre-release/lustre/target/tgt_grant.c:			CERROR("%s: cli %s is replaying OST_WRITE while one rnb"
lustre-release/lustre/target/tgt_grant.c:		CERROR("%s: cli %s/%p dirty %ld pend %ld grant %ld\n",
lustre-release/lustre/target/tgt_grant.c:		CERROR("%s: client %s/%p requesting > max (%lu), %llu\n",
lustre-release/lustre/target/tgt_grant.c:		CERROR("%s: cli %s/%p grant %ld want %llu current %llu\n",
lustre-release/lustre/target/tgt_grant.c:		CERROR("%s: cli %s/%p ted_pending(%lu) < grant_used(%lu)\n",
lustre-release/lustre/target/tgt_grant.c:		CERROR("%s: cli %s/%p tot_granted(%llu) < grant_used(%lu)\n",
lustre-release/lustre/target/tgt_grant.c:		CERROR("%s: cli %s/%p tot_pending(%llu) < grant_used(%lu)\n",
lustre-release/lustre/target/update_recovery.c:			CERROR("Unknown update type %u\n", (__u32)op->uop_type);
lustre-release/lustre/target/update_recovery.c:		CERROR("%s: failure to initialize session: rc = %d\n",
lustre-release/lustre/target/update_recovery.c:					CERROR("%s: undo for %s:%d: rc = %d\n",
lustre-release/lustre/target/update_trans.c:			CERROR("%s: cannot prepare updates: rc = %d\n",
lustre-release/lustre/target/update_trans.c:			CERROR("%s: write updates failed: rc = %d\n",
lustre-release/lustre/target/update_trans.c:			CERROR("%s: stop trans failed: rc = %d\n",
lustre-release/lustre/target/update_trans.c:			CERROR("%s: prepare updates failed: rc = %d\n",
lustre-release/lustre/target/update_trans.c:				CERROR("%s: write updates failed: rc = %d\n",
lustre-release/lustre/target/update_trans.c:			CERROR("%s: stop trans failed: rc = %d\n",
lustre-release/lustre/target/update_trans.c:		CERROR("%s can't read last committed batchid: rc = %d\n",
lustre-release/lustre/target/out_lib.c:		CERROR("%s: undo failure, we are doomed!: rc = %d\n",
lustre-release/lustre/target/out_lib.c:	CERROR("%s: attr set undo "DFID" unimplemented yet!: rc = %d\n",
lustre-release/lustre/target/out_lib.c:	CERROR("%s: Oops, can not rollback index_delete yet: rc = %d\n",
lustre-release/lustre/target/out_lib.c:	CERROR("%s: not support destroy undo yet!: rc = %d\n",
lustre-release/lustre/target/tgt_handler.c:		CERROR("%s: invalid FID: "DFID"\n", tgt_name(tsi->tsi_tgt),
lustre-release/lustre/target/tgt_handler.c:	CERROR("%s: client %s sent bad object "DOSTID": rc = %d\n",
lustre-release/lustre/target/tgt_handler.c:		CERROR("%s: client %s sent bad ioobj max %u for "DOSTID
lustre-release/lustre/target/tgt_handler.c:		CERROR("%s: short ioobj\n", tgt_name(tsi->tsi_tgt));
lustre-release/lustre/target/tgt_handler.c:		CERROR("%s: too many ioobjs (%d)\n", tgt_name(tsi->tsi_tgt),
lustre-release/lustre/target/tgt_handler.c:		CERROR("%s: ioo has zero bufcnt\n", tgt_name(tsi->tsi_tgt));
lustre-release/lustre/target/tgt_handler.c:			CERROR("%s: OBD_MD_FLID flag is not set in ost_body but OID/FID is mandatory with HAS_BODY\n",
lustre-release/lustre/target/tgt_handler.c:		CERROR("%s: no handlers for opcode 0x%x\n", tgt_name(tgt),
lustre-release/lustre/target/tgt_handler.c:		CERROR("%s: unsupported opcode 0x%x\n", tgt_name(tgt), opc);
lustre-release/lustre/target/tgt_handler.c:			CERROR("%s: unauthorized rpc flavor %x from %s, "
lustre-release/lustre/target/tgt_handler.c:			CERROR("%s: RPC source %s doesn't match %s\n",
lustre-release/lustre/target/tgt_handler.c:		CERROR("No target passed");
lustre-release/lustre/target/tgt_handler.c:		CERROR("%s: failed get sptlrpc rules: rc = %d\n",
lustre-release/lustre/target/tgt_handler.c:			CERROR("%s: syncing "DFID" (%llu-%llu) on lock "
lustre-release/lustre/target/tgt_handler.c:		CERROR("%s: unable to initialize checksum hash %s\n",
lustre-release/lustre/target/tgt_handler.c:				CERROR("%s: can't alloc page for corruption\n",
lustre-release/lustre/target/tgt_handler.c:				CERROR("%s: can't alloc page for corruption\n",
lustre-release/lustre/target/tgt_handler.c:			CERROR("%s: can't open to dump pages with checksum "
lustre-release/lustre/target/tgt_handler.c:				CERROR("%s: wanted to write %u but got %d "
lustre-release/lustre/target/tgt_handler.c:		CERROR("%s: sync returns %d\n", dbgcksum_file_name, rc);
lustre-release/lustre/target/tgt_handler.c:		CERROR("%s: unable to initialize checksum hash %s\n",
lustre-release/lustre/target/tgt_handler.c:				CERROR("%s: can't alloc page for corruption\n",
lustre-release/lustre/target/tgt_handler.c:				CERROR("%s: can't alloc page for corruption\n",
lustre-release/lustre/target/tgt_handler.c:		CERROR("%s: deny read request from %s to portal %u\n",
lustre-release/lustre/target/tgt_handler.c:		CERROR("Dropping timed-out read from %s because locking object " DOSTID " took %lld seconds (limit was %lld).\n",
lustre-release/lustre/target/tgt_handler.c:		CERROR("%s: deny write request from %s to portal %u\n",
lustre-release/lustre/target/tgt_handler.c:		CERROR("%s: Dropping timed-out write from %s because locking object " DOSTID " took %lld seconds (limit was %lld).\n",
lustre-release/lustre/target/tgt_lastrcvd.c:		CERROR("%s: slot %d already set in bitmap\n",
lustre-release/lustre/target/tgt_lastrcvd.c:		CERROR("%s: slot %d not allocated\n",
lustre-release/lustre/target/tgt_lastrcvd.c:		CERROR("%s: slot %d already clear in bitmap\n",
lustre-release/lustre/target/tgt_lastrcvd.c:		CERROR("%s: client %u bit already clear in bitmap\n",
lustre-release/lustre/target/tgt_lastrcvd.c:		CERROR("%s: can't initialize environment: rc = %d\n",
lustre-release/lustre/target/tgt_lastrcvd.c:		CERROR("%s: no room for %u clients - fix LR_MAX_CLIENTS\n",
lustre-release/lustre/target/tgt_lastrcvd.c:				CERROR("%s: unable to set MULTI RPCS "
lustre-release/lustre/target/tgt_lastrcvd.c:		CERROR("%s: Failed to write client lcd at idx %d, rc %d\n",
lustre-release/lustre/target/tgt_lastrcvd.c:		CERROR("%s: client %d: bit already set in bitmap!!\n",
lustre-release/lustre/target/tgt_lastrcvd.c:		CERROR("%s: client %u: bit already clear in bitmap!!\n",
lustre-release/lustre/target/tgt_lastrcvd.c:		CERROR("%s: failed to update server data, skip client %s "
lustre-release/lustre/target/tgt_lastrcvd.c:			CERROR("%s: couldn't find a slot for reply data: "
lustre-release/lustre/target/tgt_lastrcvd.c:				CERROR("%s: can't update %s file: rc = %d\n",
lustre-release/lustre/target/tgt_lastrcvd.c:			CERROR("%s: replay transno %llu failed: rc = %d\n",
lustre-release/lustre/target/tgt_lastrcvd.c:		CERROR("%s: client idx %d has offset %lld\n",
lustre-release/lustre/target/tgt_lastrcvd.c:				CERROR("%s: trying to overwrite bigger transno:"
lustre-release/lustre/target/tgt_lastrcvd.c:			CERROR("%s: error reading last_rcvd %s idx %d off "
lustre-release/lustre/target/tgt_lastrcvd.c:				CERROR("%s: Duplicate export %s!\n",
lustre-release/lustre/target/tgt_lastrcvd.c:				CERROR("%s: duplicate export for client "
lustre-release/lustre/target/tgt_lastrcvd.c:		CERROR("%s: Can not get index from name: rc = %d\n",
lustre-release/lustre/target/tgt_lastrcvd.c:		CERROR("%s: unknown target type %x\n", tgt_name(tgt), type);
lustre-release/lustre/target/tgt_lastrcvd.c:			CERROR("%s: error reading LAST_RCVD: rc= %d\n",
lustre-release/lustre/target/tgt_lastrcvd.c:		CERROR("%s: unsupported incompat filesystem feature(s) %x\n",
lustre-release/lustre/target/tgt_lastrcvd.c:		CERROR("%s: unsupported read-only filesystem feature(s) %x\n",
lustre-release/lustre/target/tgt_lastrcvd.c:		CERROR("%s: bad last_rcvd contents!\n", tgt_name(tgt));
lustre-release/lustre/target/tgt_lastrcvd.c:			CERROR("%s: error writing %s: rc = %d\n",
lustre-release/lustre/target/tgt_lastrcvd.c:			CERROR("%s: error reading %s: rc = %d\n",
lustre-release/lustre/target/tgt_lastrcvd.c:			CERROR("%s: invalid header in %s\n",
lustre-release/lustre/target/tgt_lastrcvd.c:				CERROR("%s: error reading %s: rc = %d\n",
lustre-release/lustre/target/tgt_lastrcvd.c:			CERROR("%s: busy tag=%u req_xid=%llu, trd=%p: xid=%llu transno=%llu client_gen=%u slot_idx=%d: rc = %d\n",
lustre-release/lustre/target/tgt_main.c:		CERROR("%s: can't get statfs data, rc %d\n", tgt_name(lut),
lustre-release/lustre/target/tgt_main.c:		CERROR("%s: blocksize (%d) is not a power of 2\n",
lustre-release/lustre/target/tgt_main.c:		CERROR("%s: cannot open LAST_RCVD: rc = %d\n", tgt_name(lut),
lustre-release/lustre/target/tgt_main.c:		CERROR("%s: cannot open REPLY_DATA: rc = %d\n", tgt_name(lut),
lustre-release/lustre/target/tgt_main.c:			CERROR("%s: unable to clear MULTI RPCS "
lustre-release/lustre/target/out_handler.c:		CERROR("%s: obdo is NULL, invalid RPC: rc = %ld\n",
lustre-release/lustre/target/out_handler.c:			CERROR("%s: invalid fid: rc = %ld\n",
lustre-release/lustre/target/out_handler.c:			CERROR("%s: invalid fid "DFID": rc = %d\n",
lustre-release/lustre/target/out_handler.c:		CERROR("%s: empty obdo in the update: rc = %ld\n",
lustre-release/lustre/target/out_handler.c:		CERROR("%s: empty name for xattr get: rc = %ld\n",
lustre-release/lustre/target/out_handler.c:		CERROR("%s: empty name for xattr get: rc = %d\n",
lustre-release/lustre/target/out_handler.c:		CERROR("%s: empty buf for xattr list: rc = %d\n",
lustre-release/lustre/target/out_handler.c:		CERROR("%s: empty name for lookup: rc = %ld\n",
lustre-release/lustre/target/out_handler.c:		CERROR("%s: empty name for xattr set: rc = %ld\n",
lustre-release/lustre/target/out_handler.c:		CERROR("%s: emptry or wrong size %zu flag: rc = %ld\n",
lustre-release/lustre/target/out_handler.c:		CERROR("%s: empty name for xattr set: rc = %ld\n",
lustre-release/lustre/target/out_handler.c:		CERROR("%s: empty name for index insert: rc = %ld\n",
lustre-release/lustre/target/out_handler.c:		CERROR("%s: invalid fid: rc = %ld\n",
lustre-release/lustre/target/out_handler.c:		CERROR("%s: invalid FID "DFID": rc = %d\n",
lustre-release/lustre/target/out_handler.c:		CERROR("%s: invalid type for index insert: rc = %ld\n",
lustre-release/lustre/target/out_handler.c:		CERROR("%s: empty name for index delete: rc = %ld\n",
lustre-release/lustre/target/out_handler.c:		CERROR("%s: invalid FID "DFID": rc = %d\n",
lustre-release/lustre/target/out_handler.c:		CERROR("%s: empty buf for xattr set: rc = %ld\n",
lustre-release/lustre/target/out_handler.c:		CERROR("%s: empty or wrong size %zu pos: rc = %ld\n",
lustre-release/lustre/target/out_handler.c:		CERROR("%s: empty size for read: rc = %ld\n",
lustre-release/lustre/target/out_handler.c:		CERROR("%s: empty pos for read: rc = %ld\n",
lustre-release/lustre/target/out_handler.c:		CERROR("%s: start handle error: rc = %d\n", dt_obd_name(dt),
lustre-release/lustre/target/out_handler.c:					CERROR("%s: undo for %s:%d: rc = %d\n",
lustre-release/lustre/target/out_handler.c:		CERROR("%s: invalid update buffer magic %x expect %x: "
lustre-release/lustre/target/out_handler.c:			CERROR("%s: invalid update buffer magic %x"
lustre-release/lustre/target/out_handler.c:				CERROR("%s: invalid FID "DFID": rc = %d\n",
lustre-release/lustre/target/out_handler.c:		CERROR("%s: too small reply buf %u for %u, need %u at least\n",
lustre-release/lustre/target/out_handler.c:		CERROR("%s: Can't pack response: rc = %d\n",
lustre-release/lustre/target/out_handler.c:				CERROR("%s: unsupported opc: 0x%x\n",
lustre-release/lustre/lfsck/lfsck_namespace.c:		CERROR("%s: fail to find backend /lost+found: rc = %ld\n",
lustre-release/lustre/lfsck/lfsck_namespace.c:		CERROR("%s: unknown lfsck_namespace status %d\n",
lustre-release/lustre/lfsck/lfsck_namespace.c:		CERROR("%s: fail to init namespace LFSCK component: rc = %d\n",
lustre-release/lustre/lfsck/lfsck_layout.c:		CERROR("%s: unknown lfsck_layout status %d\n",
lustre-release/lustre/lfsck/lfsck_layout.c:		CERROR("%s: fail to init layout LFSCK component: rc = %d\n",
lustre-release/lustre/lfsck/lfsck_lib.c:		CERROR("%s: the device %s (%u) is registered already\n",
lustre-release/lustre/lfsck/lfsck_lib.c:		CERROR("%s: cannot start LFSCK assistant thread for %s: "
lustre-release/lustre/lfsck/lfsck_lib.c:			CERROR("%s: cannot notify MDT %x for LFSCK stop: "
lustre-release/lustre/lfsck/lfsck_lib.c:		CERROR("%s: fail to stop LFSCK on some MDTs: rc = %d\n",
lustre-release/lustre/lfsck/lfsck_lib.c:			CERROR("%s: cannot notify MDT %x for LFSCK "
lustre-release/lustre/lfsck/lfsck_lib.c:		CERROR("%s: cannot start LFSCK on some MDTs, "
lustre-release/lustre/lfsck/lfsck_lib.c:		CERROR("%s: only allow to specify '-A | -o' via MDS\n",
lustre-release/lustre/lfsck/lfsck_lib.c:		CERROR("%s: cannot start LFSCK thread: rc = %d\n",
lustre-release/lustre/lfsck/lfsck_lib.c:		CERROR("%s: only allow to specify '-A' via MDS\n",
lustre-release/lustre/ofd/lproc_ofd.c:		CERROR("%s: lprocfs_obd_setup failed: %d.\n",
lustre-release/lustre/ofd/lproc_ofd.c:		CERROR("%s: tgt_tunables_init failed: rc = %d\n",
lustre-release/lustre/ofd/lproc_ofd.c:		CERROR("%s: lprocfs_alloc_obd_stats failed: %d.\n",
lustre-release/lustre/ofd/lproc_ofd.c:		CERROR("%s: error %d setting up lprocfs for %s\n",
lustre-release/lustre/ofd/lproc_ofd.c:		CERROR("%s: add proc entry 'clear' failed: %d.\n",
lustre-release/lustre/ofd/ofd_fs.c:			CERROR("Bad %llu to set " DOSTID "\n",
lustre-release/lustre/ofd/ofd_fs.c:		CERROR("%s: fid fini error: rc = %d\n", ofd_name(ofd), rc);
lustre-release/lustre/ofd/ofd_fs.c:			CERROR("%s: can't read last_id: rc = %d\n",
lustre-release/lustre/ofd/ofd_fs.c:		CERROR("%s: corrupted size %llu LAST_ID of seq %#llx\n",
lustre-release/lustre/ofd/ofd_fs.c:		CERROR("%s: cannot update controller: rc = %d\n",
lustre-release/lustre/ofd/ofd_fs.c:		CERROR("%s: fid init error: rc = %d\n", ofd_name(ofd), rc);
lustre-release/lustre/ofd/ofd_fs.c:		CERROR("%s: Can't init fld, rc %d\n", ofd_name(ofd), rc);
lustre-release/lustre/ofd/ofd_fs.c:		CERROR("%s: Can't init seq exp, rc %d\n", ofd_name(ofd), rc);
lustre-release/lustre/ofd/ofd_lvb.c:		CERROR("%s: no LVB data for "DFID"\n",
lustre-release/lustre/ofd/ofd_dev.c:		CERROR("%s: can't locate next device: %s\n",
lustre-release/lustre/ofd/ofd_dev.c:		CERROR("%s: cannot connect to next dev %s: rc = %d\n",
lustre-release/lustre/ofd/ofd_dev.c:		CERROR("Cannot get mount info for %s!\n", dev);
lustre-release/lustre/ofd/ofd_dev.c:		CERROR("%s: failed to trigger LCFG_PRE_CLEANUP\n", ofd_name(m));
lustre-release/lustre/ofd/ofd_dev.c:			CERROR("param is empty\n");
lustre-release/lustre/ofd/ofd_dev.c:		CERROR("%s: unknown lfsck event: rc = %d\n",
lustre-release/lustre/ofd/ofd_dev.c:		CERROR("%s: failed to initialize lfsck: rc = %d\n",
lustre-release/lustre/ofd/ofd_dev.c:		CERROR("%s: seq server init error: rc = %d\n", obd_name, rc);
lustre-release/lustre/ofd/ofd_dev.c:		CERROR("%s: seq client init error: rc = %d\n", obd_name, rc);
lustre-release/lustre/ofd/ofd_dev.c:		CERROR("%s: Unsupported key %s\n",
lustre-release/lustre/ofd/ofd_dev.c:		CERROR("%s: error finding object "DFID"\n",
lustre-release/lustre/ofd/ofd_dev.c:		CERROR("%s: not supported key %s\n", tgt_name(tsi->tsi_tgt),
lustre-release/lustre/ofd/ofd_dev.c:		CERROR("%s: setattr from %s is trying to truncate object "DFID
lustre-release/lustre/ofd/ofd_dev.c:		CERROR("%s: Can not find seq for "DOSTID"\n",
lustre-release/lustre/ofd/ofd_dev.c:		CERROR("%s: Can't find FID Sequence %#llx: rc = %ld\n",
lustre-release/lustre/ofd/ofd_dev.c:			CERROR("%s: recreate objid "DOSTID" > last id %llu"
lustre-release/lustre/ofd/ofd_dev.c:			CERROR("%s: dropping old orphan cleanup request\n",
lustre-release/lustre/ofd/ofd_dev.c:			CERROR("%s: dropping old precreate request\n",
lustre-release/lustre/ofd/ofd_dev.c:				CERROR("%s : invalid o_seq "DOSTID"\n",
lustre-release/lustre/ofd/ofd_dev.c:				CERROR("%s: invalid precreate request for "
lustre-release/lustre/ofd/ofd_dev.c:			CERROR("%s: unable to precreate: rc = %d\n",
lustre-release/lustre/ofd/ofd_dev.c:			CERROR("%s: error destroying object "DFID": %d\n",
lustre-release/lustre/ofd/ofd_dev.c:		CERROR("%s: statfs failed: rc = %d\n",
lustre-release/lustre/ofd/ofd_dev.c:		CERROR("Cannot find obd with name %s\n", dev);
lustre-release/lustre/ofd/ofd_dev.c:		CERROR("%s: can't init device stack, rc %d\n",
lustre-release/lustre/ofd/ofd_obd.c:			CERROR("%s: cli %s/%p ocd_connect_flags: %#llx ocd_version: %x ocd_grant: %d ocd_index: %u ocd_brw_size is unexpectedly zero, network data corruption? Refusing connection of this client\n",
lustre-release/lustre/ofd/ofd_obd.c:			CERROR("%s: Connect with checksum support but no ocd_cksum_types is set\n",
lustre-release/lustre/ofd/ofd_obd.c:		CERROR("%s: Can't initialize export: rc %d\n",
lustre-release/lustre/ofd/ofd_obd.c:		CERROR("%s: cli %s/%p has %lu pending on destroyed export\n",
lustre-release/lustre/ofd/ofd_obd.c:		CERROR("%s: Unsupported key %s\n",
lustre-release/lustre/ofd/ofd_obd.c:		CERROR("%s: not supported key %s\n",
lustre-release/lustre/ofd/ofd_obd.c:		CERROR("%s: setattr from %s trying to truncate object "DFID
lustre-release/lustre/ofd/ofd_obd.c:		CERROR("%s: can't find object "DFID"\n",
lustre-release/lustre/ofd/ofd_obd.c:		CERROR("%s: error destroying object "DFID": %d\n",
lustre-release/lustre/ofd/ofd_obd.c:		CERROR("%s: Can't find FID Sequence %#llx: rc = %ld\n",
lustre-release/lustre/ofd/ofd_obd.c:		CERROR("%s: unable to precreate: rc = %d\n",
lustre-release/lustre/ofd/ofd_obd.c:			CERROR("%s: Bad %llu to set " DOSTID " : rc %d\n",
lustre-release/lustre/ofd/ofd_obd.c:		CERROR("%s: aborting recovery\n", obd->obd_name);
lustre-release/lustre/ofd/ofd_obd.c:		CERROR("%s: not supported cmd = %#x\n", obd->obd_name, cmd);
lustre-release/lustre/ofd/ofd_io.c:		CERROR("%s: cannot start self_repair thread: rc = %d\n",
lustre-release/lustre/ofd/ofd_io.c:			CERROR("%s: Can't find FID Sequence %#llx: rc = %d\n",
lustre-release/lustre/ofd/ofd_io.c:				CERROR("%s : invalid o_seq "DOSTID"\n",
lustre-release/lustre/ofd/ofd_io.c:		CERROR("%s: BRW to missing obj "DOSTID"\n",
lustre-release/lustre/ofd/ofd_io.c:		CERROR("%s: bulk has too many pages %d, which exceeds the"
lustre-release/lustre/ofd/ofd_io.c:			CERROR("%s: Can not find seq for "DOSTID
lustre-release/lustre/ofd/ofd_io.c:		CERROR("%s: wrong cmd %d received!\n",
lustre-release/lustre/ofd/ofd_objects.c:		CERROR("%s:"DOSTID" hit the IDIF_MAX_OID (1<<48)!\n",
lustre-release/lustre/ofd/ofd_objects.c:		CERROR("%s:"DOSTID" hit the OBIF_MAX_OID (1<<32)!\n",
lustre-release/lustre/ofd/ofd_objects.c:			CERROR("%s: fail to reset the LAST_ID for seq (%#llx"
lustre-release/lustre/ofd/ofd_objects.c:		CERROR("%s: failed to stop transaction: rc = %d\n",
lustre-release/lustre/ofd/ofd_objects.c:			CERROR(DFID": update layout version from client\n",
lustre-release/lustre/ofd/ofd_objects.c:		CERROR("%s: failed to stop transaction: rc = %d\n",
lustre-release/lustre/ofd/ofd_objects.c:		CERROR("%s: failed to stop transaction: rc = %d\n",
lustre-release/lustre/ofd/ofd_objects.c:		CERROR("%s failed to stop transaction: %d\n",
lustre-release/lustre/mgs/mgs_nids.c:		CERROR("%s: read version file %s error %d\n",
lustre-release/lustre/mgs/mgs_nids.c:		CERROR("Write NID table version for file system %s error %d\n",
lustre-release/lustre/mgs/mgs_nids.c:		CERROR("%s: IR: failed to read current version, rc = %d\n",
lustre-release/lustre/mgs/mgs_nids.c:		CERROR("Start notify thread error %ld\n", PTR_ERR(task));
lustre-release/lustre/mgs/mgs_nids.c:		CERROR("Unable to process command: %s(%d)\n", ptr, rc);
lustre-release/lustre/mgs/mgs_llog.c:			CERROR("%s: key failed when listing %s: rc = %d\n",
lustre-release/lustre/mgs/mgs_llog.c:		CERROR("%s: key failed when listing %s: rc = %d\n",
lustre-release/lustre/mgs/mgs_llog.c:                CERROR("unhandled lrh_type: %#x\n", rec->lrh_type);
lustre-release/lustre/mgs/mgs_llog.c:                CERROR("Insane cfg\n");
lustre-release/lustre/mgs/mgs_llog.c:		CERROR("Old config format is not supported\n");
lustre-release/lustre/mgs/mgs_llog.c:		CERROR("fsname %s is too long\n", fsname);
lustre-release/lustre/mgs/mgs_llog.c:			CERROR("No memory for MDT index maps\n");
lustre-release/lustre/mgs/mgs_llog.c:			CERROR("No memory for OST index maps\n");
lustre-release/lustre/mgs/mgs_llog.c:			CERROR("Can't get db from client log %d\n", rc);
lustre-release/lustre/mgs/mgs_llog.c:		CERROR("Can't get db from params log %d\n", rc);
lustre-release/lustre/mgs/mgs_llog.c:                CERROR("Can't get db for %s\n", mti->mti_fsname);
lustre-release/lustre/mgs/mgs_llog.c:        CERROR("max index %d exceeded.\n", i);
lustre-release/lustre/mgs/mgs_llog.c:		CERROR("unknown server type %#x\n", flags);
lustre-release/lustre/mgs/mgs_llog.c:                CERROR("Can't get db for %s\n", mti->mti_fsname);
lustre-release/lustre/mgs/mgs_llog.c:		CERROR("unknown server type %#x\n", mti->mti_flags);
lustre-release/lustre/mgs/mgs_llog.c:                CERROR("unhandled lrh_type: %#x\n", rec->lrh_type);
lustre-release/lustre/mgs/mgs_llog.c:                CERROR("Insane cfg\n");
lustre-release/lustre/mgs/mgs_llog.c:		CERROR("%s: modify %s/%s failed: rc = %d\n",
lustre-release/lustre/mgs/mgs_llog.c:					CERROR("Can't create uuid for "
lustre-release/lustre/mgs/mgs_llog.c:			CERROR("No new nids were added, nid %s with uuid %s, "
lustre-release/lustre/mgs/mgs_llog.c:		CERROR("unhandled lrh_type: %#x, cmd %x %s %s\n",
lustre-release/lustre/mgs/mgs_llog.c:		CERROR("%s: can't make backup for %s: rc = %d\n",
lustre-release/lustre/mgs/mgs_llog.c:		CERROR("%s: llog should be restored: rc = %d\n",
lustre-release/lustre/mgs/mgs_llog.c:			CERROR("%s: can't restore backup %s: rc = %d\n",
lustre-release/lustre/mgs/mgs_llog.c:		CERROR("%s: failed to replace log %s: rc = %d\n",
lustre-release/lustre/mgs/mgs_llog.c:		CERROR("%s: node %s still connected during replace_nids "
lustre-release/lustre/mgs/mgs_llog.c:		CERROR("Only MGS is allowed to be started\n");
lustre-release/lustre/mgs/mgs_llog.c:		CERROR("%s: can't find fsdb: rc = %d\n", fsname, rc);
lustre-release/lustre/mgs/mgs_llog.c:		CERROR("%s: error while replacing NIDs for %s: rc = %d\n",
lustre-release/lustre/mgs/mgs_llog.c:		CERROR("Only MGS is allowed to be started\n");
lustre-release/lustre/mgs/mgs_llog.c:		CERROR("%s: cannot read config directory '%s': rc = %d\n",
lustre-release/lustre/mgs/mgs_llog.c:		CERROR("%s: list empty reading config dir '%s': rc = %d\n",
lustre-release/lustre/mgs/mgs_llog.c:		CERROR("%s: can't start log %s: rc = %d\n",
lustre-release/lustre/mgs/mgs_llog.c:			CERROR("%s: Can't modify llog %s: rc = %d\n",
lustre-release/lustre/mgs/mgs_llog.c:			CERROR("%s: writing log %s: rc = %d\n",
lustre-release/lustre/mgs/mgs_llog.c:		CERROR("params are too long: %s %s%s\n",
lustre-release/lustre/mgs/mgs_llog.c:                CERROR("unhandled lrh_type: %#x\n", rec->lrh_type);
lustre-release/lustre/mgs/mgs_llog.c:                CERROR("Insane cfg\n");
lustre-release/lustre/mgs/mgs_llog.c:                CERROR("log is empty! Logical error\n");
lustre-release/lustre/mgs/mgs_llog.c:                CERROR("log is empty! Logical error\n");
lustre-release/lustre/mgs/mgs_llog.c:		CERROR("log is empty! Logical error\n");
lustre-release/lustre/mgs/mgs_llog.c:		CERROR("parameter quota.%s isn't supported (only quota.mdt "
lustre-release/lustre/mgs/mgs_llog.c:			CERROR("enable option(%s) isn't supported\n", tmp);
lustre-release/lustre/mgs/mgs_llog.c:		CERROR("%s: error writing log %s: rc = %d\n",
lustre-release/lustre/mgs/mgs_llog.c:        CERROR("Invalid param: %s\n", param);
lustre-release/lustre/mgs/mgs_llog.c:                CERROR("Invalid sptlrpc parameter: %s\n", param);
lustre-release/lustre/mgs/mgs_llog.c:                CERROR("Invalid sptlrpc flavor parameter: %s\n", param);
lustre-release/lustre/mgs/mgs_llog.c:                CERROR("unhandled lrh_type: %#x\n", rec->lrh_type);
lustre-release/lustre/mgs/mgs_llog.c:                CERROR("Insane cfg\n");
lustre-release/lustre/mgs/mgs_llog.c:                CERROR("invalid command (%x)\n", lcfg->lcfg_command);
lustre-release/lustre/mgs/mgs_llog.c:                CERROR("svname is empty\n");
lustre-release/lustre/mgs/mgs_llog.c:                CERROR("param is empty\n");
lustre-release/lustre/mgs/mgs_llog.c:                CERROR("read sptlrpc record error (%d): %s\n", rc, param);
lustre-release/lustre/mgs/mgs_llog.c:                CERROR("failed to read sptlrpc config database: %d\n", rc);
lustre-release/lustre/mgs/mgs_llog.c:                CERROR("err %d on param '%s'\n", rc, ptr);
lustre-release/lustre/mgs/mgs_llog.c:			CERROR("Unknown target type %#x, can't create log for %s\n",
lustre-release/lustre/mgs/mgs_llog.c:			CERROR("Can't write logs for %s (%d)\n",
lustre-release/lustre/mgs/mgs_llog.c:		CERROR("%s: MGS config context doesn't exist\n",
lustre-release/lustre/mgs/mgs_llog.c:		CERROR("%s: failed to clear log %s: %d\n",
lustre-release/lustre/mgs/mgs_llog.c:		CERROR("No filesystem targets for %s. cfg_device from lctl "
lustre-release/lustre/mgs/mgs_llog.c:		CERROR("Can't get db for %s\n", fsname);
lustre-release/lustre/mgs/mgs_llog.c:		CERROR("%s is not defined\n", fsname);
lustre-release/lustre/mgs/mgs_fs.c:		CERROR("%s: error loading nodemap config file, file must be "
lustre-release/lustre/mgs/mgs_fs.c:		CERROR("%s: failed to trigger LCFG_PRE_CLEANUP\n",
lustre-release/lustre/mgs/mgs_handler.c:			CERROR("%s: can't take cfg lock for %#llx/%#llx : rc = %d\n",
lustre-release/lustre/mgs/mgs_handler.c:			CERROR("%s: Update IR return failure: rc = %d\n",
lustre-release/lustre/mgs/mgs_handler.c:		CERROR("%s: Can't get db for %s: rc = %d\n",
lustre-release/lustre/mgs/mgs_handler.c:				CERROR("Can't get db for %s: %d\n",
lustre-release/lustre/mgs/mgs_handler.c:		CERROR("Can't get db for %s: %d\n", mti->mti_fsname, rc);
lustre-release/lustre/mgs/mgs_handler.c:                        CERROR("Failed to write %s log (%d)\n",
lustre-release/lustre/mgs/mgs_handler.c:				CERROR("Fail to get db for %s: %d\n",
lustre-release/lustre/mgs/mgs_handler.c:		CERROR("%s: no logname in request\n", tgt_name(tsi->tsi_tgt));
lustre-release/lustre/mgs/mgs_handler.c:		CERROR("%s: unknown cfg record type: %d\n",
lustre-release/lustre/mgs/mgs_handler.c:		CERROR("%s: OBD_IOC_NODEMAP command %X for %s: rc = %d\n",
lustre-release/lustre/mgs/mgs_handler.c:		CERROR("%s: unknown cfg record type: %d\n",
lustre-release/lustre/mgs/mgs_handler.c:                CERROR("OBD_IOC_POOL err %d, cmd %X for pool %s.%s\n",
lustre-release/lustre/mgs/mgs_handler.c:			CERROR("%s: unknown cfg record type: %d\n",
lustre-release/lustre/mgs/mgs_handler.c:			CERROR("%s: setparam err: rc = %d\n",
lustre-release/lustre/mgs/mgs_handler.c:			CERROR("%s: no device or fsname specified: rc = %d\n",
lustre-release/lustre/mgs/mgs_handler.c:			CERROR("%s: device or fsname is too long: rc = %d\n",
lustre-release/lustre/mgs/mgs_handler.c:			CERROR("%s: device or fsname is not NUL terminated: "
lustre-release/lustre/mgs/mgs_handler.c:			CERROR("%s: no NIDs specified: rc = %d\n",
lustre-release/lustre/mgs/mgs_handler.c:			CERROR("%s: NID list is not NUL terminated: "
lustre-release/lustre/mgs/mgs_handler.c:			CERROR("%s: error replacing nids: rc = %d\n",
lustre-release/lustre/mgs/mgs_handler.c:			CERROR("%s: no device or fsname specified: rc = %d\n",
lustre-release/lustre/mgs/mgs_handler.c:			CERROR("%s: device or fsname is too long: rc = %d\n",
lustre-release/lustre/mgs/mgs_handler.c:			CERROR("%s: device or fsname is not NUL terminated: "
lustre-release/lustre/mgs/mgs_handler.c:			CERROR("%s: error clearing config log: rc = %d\n",
lustre-release/lustre/mgs/mgs_handler.c:		CERROR("%s: unknown command %#x\n",
lustre-release/lustre/mgs/mgs_handler.c:		CERROR("can't locate next device: %s\n", nextdev);
lustre-release/lustre/mgs/mgs_handler.c:		CERROR("cannot connect to next dev %s (%d)\n", nextdev, rc);
lustre-release/lustre/mgs/mgs_handler.c:		CERROR("%s: MGS filesystem method init failed: rc = %d\n",
lustre-release/lustre/mgs/mgs_handler.c:		CERROR("%s: cannot initialize proc entry: rc = %d\n",
lustre-release/lustre/mgs/mgs_handler.c:		CERROR("%s: %s fsdb and log setup failed: rc = %d\n",
lustre-release/lustre/mgs/mgs_handler.c:		CERROR("failed to start mgs service: %d\n", rc);
lustre-release/lustre/mdt/mdt_reint.c:                CERROR("No versions in request buffer\n");
lustre-release/lustre/mdt/mdt_reint.c:		CERROR("file attribute read error for "DFID": %d.\n",
lustre-release/lustre/mdt/mdt_reint.c:			CERROR("file attribute change error for "DFID": %d\n",
lustre-release/lustre/mdt/mdt_reint.c:		CERROR("%s: Unsupported mode %o\n",
lustre-release/lustre/mdt/mdt_reint.c:			CERROR("%s: can't lock FS for rename: rc = %d\n",
lustre-release/lustre/mdt/mdt_reint.c:			CERROR("%s: can't lock FS for rename: rc = %d\n",
lustre-release/lustre/mdt/mdt_lib.c:				CERROR("failed to alloc %d groups\n",
lustre-release/lustre/mdt/mdt_lib.c:		CERROR("No need in LOV EA upon unlink\n");
lustre-release/lustre/mdt/mdt_lib.c:			CERROR("%s: unable to fetch missing attributes of"
lustre-release/lustre/mdt/mdt_lib.c:		CERROR("%s: unable to add HSM remove request for "DFID
lustre-release/lustre/mdt/mdt_lib.c:                CERROR("Unexpected opcode %d\n", op);
lustre-release/lustre/mdt/mdt_hsm.c:		CERROR("%s: Unknown hsm action: %d on "DFID"\n",
lustre-release/lustre/mdt/mdt_hsm.c:		CERROR("Release action is not working in hsm1_coord\n");
lustre-release/lustre/mdt/mdt_hsm.c:		CERROR("Unknown hsm action: %d\n", hr->hr_action);
lustre-release/lustre/mdt/mdt_recovery.c:			CERROR("%s: Resent req xid %llu has mismatched opc: "
lustre-release/lustre/mdt/mdt_lproc.c:                CERROR("%s: "DFID" attr_get, rc = %d\n",
lustre-release/lustre/mdt/mdt_lproc.c:                CERROR("%s: "DFID" attr_get, rc = %d\n",
lustre-release/lustre/mdt/mdt_lproc.c:		CERROR("%s: identity upcall too long\n", mdt_obd_name(mdt));
lustre-release/lustre/mdt/mdt_lproc.c:		CERROR("%s: invalid data count = %lu, size = %d\n",
lustre-release/lustre/mdt/mdt_lproc.c:		CERROR("%s: bad identity data\n", mdt_obd_name(mdt));
lustre-release/lustre/mdt/mdt_lproc.c:			CERROR("%s: MDS identity downcall bad params\n",
lustre-release/lustre/mdt/mdt_lproc.c:			CERROR("%s: perm count %d more than maximum %d\n",
lustre-release/lustre/mdt/mdt_lproc.c:			CERROR("%s: group count %d more than maximum %d\n",
lustre-release/lustre/mdt/mdt_lproc.c:			CERROR("Failed to evict nid %s from OSTs: rc %d\n",
lustre-release/lustre/mdt/mdt_lproc.c:		CERROR("%s: cannot create proc entries: rc = %d\n",
lustre-release/lustre/mdt/mdt_lproc.c:		CERROR("%s: failed to init target tunables: rc = %d\n",
lustre-release/lustre/mdt/mdt_lproc.c:		CERROR("%s: cannot create hsm proc entries: rc = %d\n",
lustre-release/lustre/mdt/mdt_lproc.c:		CERROR("%s: MDT can not create rename stats rc = %d\n",
lustre-release/lustre/mdt/mdt_handler.c:                        CERROR("Not expected lock type (0x%x)\n",
lustre-release/lustre/mdt/mdt_handler.c:						CERROR("%s: unable to grow "
lustre-release/lustre/mdt/mdt_handler.c:			CERROR("%s: unable to read "DFID" ACL: rc = %d\n",
lustre-release/lustre/mdt/mdt_handler.c:			CERROR("%s: nodemap_map_acl unable to parse "DFID
lustre-release/lustre/mdt/mdt_handler.c:		CERROR("short LinkEA on "DFID": rc = %d\n",
lustre-release/lustre/mdt/mdt_handler.c:			CERROR("%s: readlink failed for "DFID": rc = %d\n",
lustre-release/lustre/mdt/mdt_handler.c:		CERROR("%s: parent "DFID" is on remote target\n",
lustre-release/lustre/mdt/mdt_handler.c:			CERROR("%s: bad changelog_clear setinfo size %d\n",
lustre-release/lustre/mdt/mdt_handler.c:		CERROR("Invalid hash: %#llx != %#llx\n",
lustre-release/lustre/mdt/mdt_handler.c:		CERROR("Can't unpack reint, rc %d\n", rc);
lustre-release/lustre/mdt/mdt_handler.c:		CERROR("Can't pack response, rc %d\n", rc);
lustre-release/lustre/mdt/mdt_handler.c:			CERROR("%s: Unsupported opcode '%ld' from client '%s':"
lustre-release/lustre/mdt/mdt_handler.c:		CERROR("Unsupported quotactl command: %d\n", oqctl->qc_cmd);
lustre-release/lustre/mdt/mdt_handler.c:		CERROR("Unsupported quotactl command: %d\n", oqctl->qc_cmd);
lustre-release/lustre/mdt/mdt_handler.c:                CERROR("Can't set mdt ctxt %d\n", rc);
lustre-release/lustre/mdt/mdt_handler.c:		CERROR("Invalid fid: "DFID"\n", PFID(&body->mbo_fid1));
lustre-release/lustre/mdt/mdt_handler.c:		CERROR("%s: unsupported intent %#x\n",
lustre-release/lustre/mdt/mdt_handler.c:		CERROR("%s: Unsupported layout intent opc %d\n",
lustre-release/lustre/mdt/mdt_handler.c:		CERROR("%s: Unknown layout intent opc %d\n",
lustre-release/lustre/mdt/mdt_handler.c:		CERROR("%s: unknown intent code %#x\n",
lustre-release/lustre/mdt/mdt_handler.c:		CERROR("%s: cannot init env: rc = %d\n", mdt_obd_name(mdt), rc);
lustre-release/lustre/mdt/mdt_handler.c:			CERROR("%s: cannot update controller: rc = %d\n",
lustre-release/lustre/mdt/mdt_handler.c:		CERROR("%s: can't locate next device: %s\n",
lustre-release/lustre/mdt/mdt_handler.c:		CERROR("%s: cannot connect to next dev %s (%d)\n",
lustre-release/lustre/mdt/mdt_handler.c:		CERROR("can't find the profile: %s\n",
lustre-release/lustre/mdt/mdt_handler.c:		CERROR("Can not find obd %s (%s in config)\n",
lustre-release/lustre/mdt/mdt_handler.c:		CERROR("Failure to refill session: '%d'\n", rc);
lustre-release/lustre/mdt/mdt_handler.c:		CERROR("can't find profile for %s\n",
lustre-release/lustre/mdt/mdt_handler.c:		CERROR("Can not find obd %s (%s in config)\n", qmtname,
lustre-release/lustre/mdt/mdt_handler.c:		CERROR("cannot connect to quota master device %s (%d)\n",
lustre-release/lustre/mdt/mdt_handler.c:		CERROR("Cannot get mount info for %s!\n", dev);
lustre-release/lustre/mdt/mdt_handler.c:		CERROR("%s: Can't init device stack, rc %d\n",
lustre-release/lustre/mdt/mdt_handler.c:		CERROR("%s: error initializing coordinator, rc %d\n",
lustre-release/lustre/mdt/mdt_handler.c:		CERROR("Can't init MDT lprocfs, rc %d\n", rc);
lustre-release/lustre/mdt/mdt_handler.c:			CERROR("param is empty\n");
lustre-release/lustre/mdt/mdt_handler.c:			CERROR("%s: cli %s/%p ocd_connect_flags: %#llx "
lustre-release/lustre/mdt/mdt_handler.c:			CERROR("%s: Connect with checksum support but no "
lustre-release/lustre/mdt/mdt_handler.c:	CERROR("%s: Failed to initialize export: rc = %d\n",
lustre-release/lustre/mdt/mdt_handler.c:		CERROR("nonlocal object "DFID"\n", PFID(fid));
lustre-release/lustre/mdt/mdt_handler.c:		CERROR("%s: Aborting recovery for device\n", mdt_obd_name(mdt));
lustre-release/lustre/mdt/mdt_handler.c:		CERROR("%s: Not supported cmd = %d, rc = %d\n",
lustre-release/lustre/mdt/mdt_identity.c:                CERROR("no upcall set\n");
lustre-release/lustre/mdt/mdt_identity.c:		CERROR("%s: error invoking upcall %s %s %s: rc %d; check /proc/fs/lustre/mdt/%s/identity_upcall, time %ldus\n",
lustre-release/lustre/mdt/mdt_identity.c:			CERROR("failed to alloc %d groups\n", data->idd_ngroups);
lustre-release/lustre/mdt/mdt_identity.c:			CERROR("failed to alloc %d permissions\n",
lustre-release/lustre/mdt/mdt_open.c:			CERROR("%s: replay trans %llu NID %s: rc = %d\n",
lustre-release/lustre/mdt/mdt_open.c:			CERROR("%s: Request lease for file:"DFID ", but open lock "
lustre-release/lustre/mdt/mdt_open.c:		CERROR("%s: "DFID" isn't on this server!: rc = %d\n",
lustre-release/lustre/mdt/mdt_open.c:			CERROR("%s: "DFID" doesn't exist!: rc = %d\n",
lustre-release/lustre/mdt/mdt_open.c:		CERROR("file join is not supported anymore.\n");
lustre-release/lustre/mdt/mdt_open.c:			CERROR("%s: name '"DNAME"' present, but FID "
lustre-release/lustre/mdt/mdt_open.c:			CERROR("%s: cannot open volatile file "DFID", orphan "
lustre-release/lustre/mdt/mdt_open.c:				CERROR("%s: "DFID" cleanup of open: rc = %d\n",
lustre-release/lustre/mdt/mdt_open.c:		CERROR("%s: cannot create volatile file "DFID": rc = %d\n",
lustre-release/lustre/mdt/mdt_open.c:		CERROR("%s: cannot open volatile file "DFID", orphan "
lustre-release/lustre/mdt/mdt_open.c:		CERROR("%s: cannot open orphan file "DFID": rc = %ld\n",
lustre-release/lustre/mdt/mdt_open.c:		CERROR("%s: error closing volatile file "DFID": rc = %d\n",
lustre-release/lustre/mdt/mdt_open.c:				CERROR(DFID": Setting i_blocks error: %d, "
lustre-release/lustre/mdt/mdt_coordinator.c:		CERROR("%s: cannot update agent log: rc = %d\n",
lustre-release/lustre/mdt/mdt_coordinator.c:				CERROR("Failed to resize request buffer, "
lustre-release/lustre/mdt/mdt_coordinator.c:			CERROR("%s: Cannot allocate memory (%d bytes) "
lustre-release/lustre/mdt/mdt_coordinator.c:				CERROR("%s: mdt_agent_record_update() failed, "
lustre-release/lustre/mdt/mdt_coordinator.c:		CERROR("%s: coordinator thread exiting, process=%d, rc=%d\n",
lustre-release/lustre/mdt/mdt_coordinator.c:		CERROR("%s: Coordinator already started or stopping\n",
lustre-release/lustre/mdt/mdt_coordinator.c:		CERROR("%s: cannot take the layout locks needed"
lustre-release/lustre/mdt/mdt_coordinator.c:		CERROR("%s: error starting coordinator thread: %d\n",
lustre-release/lustre/mdt/mdt_coordinator.c:				CERROR("%s: mdt_agent_record_update() failed, "
lustre-release/lustre/mdt/mdt_coordinator.c:		CERROR("%s: Copytool has closed volatile file "DFID"\n",
lustre-release/lustre/mdt/mdt_coordinator.c:			CERROR("%s: Request %#llx on "DFID
lustre-release/lustre/mdt/mdt_coordinator.c:			CERROR("%s: Failed request %#llx on "DFID
lustre-release/lustre/mdt/mdt_coordinator.c:			CERROR("%s: Failed request %#llx on "DFID
lustre-release/lustre/mdt/mdt_coordinator.c:			CERROR("%s: Successful request %#llx on "DFID" cannot be a CANCEL\n",
lustre-release/lustre/mdt/mdt_coordinator.c:			CERROR("%s: Successful request %#llx on "DFID" %d is an unknown action\n",
lustre-release/lustre/mdt/mdt_coordinator.c:		CERROR("%s: Cannot find running request for cookie %#llx"
lustre-release/lustre/mdt/mdt_coordinator.c:		CERROR("%s: Progress on "DFID" for cookie %#llx"
lustre-release/lustre/mdt/mdt_coordinator.c:		CERROR("%s: Progress on "DFID" for cookie %#llx action=%s"
lustre-release/lustre/mdt/mdt_coordinator.c:			CERROR("%s: mdt_agent_record_update() failed,"
lustre-release/lustre/mdt/mdt_coordinator.c:			CERROR("%s: Coordinator already stopped\n",
lustre-release/lustre/mdt/mdt_coordinator.c:			CERROR("%s: Coordinator is stopped\n",
lustre-release/lustre/mdt/mdt_coordinator.c:		CERROR("%s: Valid coordinator control commands are: "
lustre-release/lustre/mdt/mdt_coordinator.c:		CERROR("%s: Cannot create 'hsm' directory in mdt proc dir, rc = %d\n",
lustre-release/lustre/mdt/mdt_hsm_cdt_agent.c:				CERROR("%s: unable to add HSM remove request "
lustre-release/lustre/mdt/mdt_hsm_cdt_agent.c:				CERROR("%s: mdt_agent_record_update() "
lustre-release/lustre/mdt/mdt_hsm_cdt_agent.c:		CERROR("%s: Cannot find agent for archive %d: rc = %d\n",
lustre-release/lustre/mdt/mdt_hsm_cdt_agent.c:				CERROR("%s: mdt_agent_record_update() failed, "
lustre-release/lustre/mdt/mdt_hsm_cdt_agent.c:				CERROR("%s: mdt_agent_record_update() failed, "
lustre-release/lustre/mdt/mdt_hsm_cdt_agent.c:		CERROR("%s: agent uuid (%s) not found, unregistering:"
lustre-release/lustre/mdt/mdt_hsm_cdt_agent.c:		CERROR("%s: cannot send request to agent '%s': rc = %d\n",
lustre-release/lustre/mdt/mdt_io.c:		CERROR("%s: bad parameters %p/%i/%i\n",
lustre-release/lustre/mdt/mdt_io.c:		CERROR("%s: wrong cmd %d received!\n",
lustre-release/lustre/mdt/mdt_io.c:		CERROR("%s: Truncate on dir "DFID": rc = %d\n",
lustre-release/lustre/mdt/mdt_io.c:			CERROR("%s: client page bits are not saved on server\n",
lustre-release/lustre/mdt/mdt_mds.c:		CERROR("failed to start regular mdt service: %d\n", rc);
lustre-release/lustre/mdt/mdt_mds.c:		CERROR("failed to start readpage service: %d\n", rc);
lustre-release/lustre/mdt/mdt_mds.c:		CERROR("failed to start setattr service: %d\n", rc);
lustre-release/lustre/mdt/mdt_mds.c:		CERROR("failed to start out service: %d\n", rc);
lustre-release/lustre/mdt/mdt_mds.c:		CERROR("failed to start seq controller service: %d\n", rc);
lustre-release/lustre/mdt/mdt_mds.c:		CERROR("failed to start metadata seq server service: %d\n", rc);
lustre-release/lustre/mdt/mdt_mds.c:		CERROR("failed to start fld service: %d\n", rc);
lustre-release/lustre/mdt/mdt_mds.c:		CERROR("failed to start MDT I/O service: %d\n", rc);
lustre-release/lustre/mdt/mdt_xattr.c:			CERROR("%s: error geting EA size for '%s': rc = %d\n",
lustre-release/lustre/mdt/mdt_xattr.c:		CERROR("%s: "DFID" migrate mdt count mismatch %u != %u\n",
lustre-release/lustre/mdt/mdt_xattr.c:		CERROR("%s: "DFID" migrate mdt index mismatch %u != %u\n",
lustre-release/lustre/mdt/mdt_xattr.c:		CERROR("%s: "DFID" migrate mdt hash mismatch %u != %u\n",
lustre-release/lustre/mdt/mdt_xattr.c:			CERROR("%s: invalid xattr name: %s\n",
lustre-release/lustre/mdt/mdt_hsm_cdt_actions.c:		CERROR("%s: failed to process HSM_ACTIONS llog (rc=%d)\n",
lustre-release/lustre/mdt/mdt_hsm_cdt_actions.c:		CERROR("%s: mdt_agent_llog_update_rec() failed, rc = %d\n",
lustre-release/lustre/mdt/mdt_hsm_cdt_actions.c:		CERROR("%s: cdt_llog_process() failed, rc=%d, cannot update "
lustre-release/lustre/mdt/mdt_hsm_cdt_actions.c:		CERROR("llog_get_context() failed\n");
lustre-release/lustre/fid/fid_store.c:		CERROR("%s: Can't write space data, rc %d\n",
lustre-release/lustre/fid/fid_store.c:			CERROR("%s: Can't Update fld database, rc %d\n",
lustre-release/lustre/fid/fid_store.c:                CERROR("%s: Read only %d bytes of %d\n", seq->lss_name,
lustre-release/lustre/fid/fid_store.c:                CERROR("%s: Can't find \"%s\" obj %d\n",
lustre-release/lustre/fid/fid_request.c:		CERROR("%s: Invalid range received from server: "
lustre-release/lustre/fid/fid_request.c:		CERROR("%s: Range received from server is exhausted: "
lustre-release/lustre/fid/fid_request.c:				CERROR("%s: Can't allocate new meta-sequence,"
lustre-release/lustre/fid/fid_request.c:		CERROR("%s: Can't allocate new sequence: rc = %d\n",
lustre-release/lustre/fid/fid_request.c:				CERROR("%s: Can't allocate new sequence: "
lustre-release/lustre/fid/fid_request.c:		CERROR("%s: LdebugFS failed in seq-init\n", seq->lcs_name);
lustre-release/lustre/fid/fid_request.c:		CERROR("%s: Can't init sequence manager debugfs, rc %d\n",
lustre-release/lustre/fid/fid_handler.c:		CERROR("%s: Sequences space is exhausted\n",
lustre-release/lustre/fid/fid_handler.c:			CERROR("%s: No sequence controller is attached.\n",
lustre-release/lustre/fid/fid_handler.c:			CERROR("%s: Allocated super-sequence failed: rc = %d\n",
lustre-release/lustre/fid/fid_handler.c:		CERROR("%s: Allocated meta-sequence failed: rc = %d\n",
lustre-release/lustre/fid/fid_handler.c:			CERROR("Sequence server is not "
lustre-release/lustre/fid/fid_handler.c:			CERROR("Sequence controller is not "
lustre-release/lustre/fid/fid_handler.c:		CERROR("%s: Can't init sequence manager debugfs, rc %d\n",
lustre-release/lustre/fid/fid_handler.c:			CERROR("%s: Can't create fldb for sequence manager debugfs: rc = %d\n",
lustre-release/lustre/fid/fid_handler.c:                        CERROR("%s: Can't write space data, "
lustre-release/lustre/fid/fid_handler.c:                CERROR("%s: Can't read space data, rc %d\n",
lustre-release/lustre/fid/lproc_fid.c:		CERROR("%s: invalid FID sequence width: rc = %d\n",
lustre-release/lustre/fid/lproc_fid.c:		CERROR("%s: read record error: rc = %d\n",
lustre-release/lustre/ost/ost_handler.c:		CERROR("failed to start service: %d\n", rc);
lustre-release/lustre/ost/ost_handler.c:		CERROR("failed to start OST create service: %d\n", rc);
lustre-release/lustre/ost/ost_handler.c:		CERROR("failed to start OST I/O service: %d\n", rc);
lustre-release/lustre/ost/ost_handler.c:		CERROR("failed to start OST seq service: %d\n", rc);
lustre-release/lustre/ost/ost_handler.c:		CERROR("failed to start out service: %d\n", rc);
lustre-release/lustre/ptlrpc/sec_lproc.c:		CERROR("%s: invalid data count = %lu, size = %d\n",
lustre-release/lustre/ptlrpc/sec_lproc.c:		CERROR("%s: bad sepol data\n", dev->obd_name);
lustre-release/lustre/ptlrpc/sec_lproc.c:		CERROR("%s: sepol downcall bad params\n",
lustre-release/lustre/ptlrpc/sec_lproc.c:		CERROR("%s: invalid sepol data returned\n",
lustre-release/lustre/ptlrpc/sec_lproc.c:		CERROR("%s: bad sepol data\n", dev->obd_name);
lustre-release/lustre/ptlrpc/sec_lproc.c:		CERROR("can't register lproc for obd type %s\n",
lustre-release/lustre/ptlrpc/sec_lproc.c:		CERROR("create proc entry srpc_info for %s: %d\n",
lustre-release/lustre/ptlrpc/sec_lproc.c:		CERROR("create proc entry srpc_contexts for %s: %d\n",
lustre-release/lustre/ptlrpc/sec_lproc.c:		CERROR("create proc entry srpc_sepol for %s: %d\n",
lustre-release/lustre/ptlrpc/sec_null.c:		CERROR("Invalid rpc flavor 0x%x\n", req->rq_flvr.sf_rpc);
lustre-release/lustre/ptlrpc/sec_null.c:		CERROR("failed to register %s: %d\n", null_policy.sp_name, rc);
lustre-release/lustre/ptlrpc/sec_null.c:		CERROR("failed to unregister %s: %d\n", null_policy.sp_name,
lustre-release/lustre/ptlrpc/layout.c:			CERROR("%s: array field size mismatch "
lustre-release/lustre/ptlrpc/layout.c:			CERROR("%s: array field size mismatch "
lustre-release/lustre/ptlrpc/layout.c:			CERROR("%s: field size mismatch %u != %u (%d)\n",
lustre-release/lustre/ptlrpc/nodemap_handler.c:		CERROR("cannot create nodemap_hash table\n");
lustre-release/lustre/ptlrpc/nodemap_handler.c:		CERROR("cannot insert nodemap range into '%s': rc = %d\n",
lustre-release/lustre/ptlrpc/nodemap_handler.c:		CERROR("Config nodemap hash is NULL, unable to add %s\n", name);
lustre-release/lustre/ptlrpc/nodemap_handler.c:		CERROR("cannot allocate memory (%zu bytes)"
lustre-release/lustre/ptlrpc/nodemap_handler.c:	CERROR("cannot add nodemap: '%s': rc = %d\n", name, rc);
lustre-release/lustre/ptlrpc/gss/gss_krb5_mech.c:		CERROR("unsupported enctype %x\n", kctx->kc_enctype);
lustre-release/lustre/ptlrpc/gss/gss_krb5_mech.c:		CERROR("Invalid number of keys: %u\n", tmp_uint);
lustre-release/lustre/ptlrpc/gss/gss_krb5_mech.c:		CERROR("Fail to read version\n");
lustre-release/lustre/ptlrpc/gss/gss_krb5_mech.c:                CERROR("Invalid version %u\n", tmp_uint);
lustre-release/lustre/ptlrpc/gss/gss_krb5_mech.c:		CERROR("failed to alloc hash %s : rc = %d\n",
lustre-release/lustre/ptlrpc/gss/gss_krb5_mech.c:		CERROR("hash function for %s undefined\n",
lustre-release/lustre/ptlrpc/gss/gss_krb5_mech.c:                CERROR("bad token id\n");
lustre-release/lustre/ptlrpc/gss/gss_krb5_mech.c:                CERROR("bad direction flag\n");
lustre-release/lustre/ptlrpc/gss/gss_krb5_mech.c:                CERROR("missing confidential flag\n");
lustre-release/lustre/ptlrpc/gss/gss_krb5_mech.c:                CERROR("bad filler\n");
lustre-release/lustre/ptlrpc/gss/gss_krb5_mech.c:                CERROR("bad EC or RRC\n");
lustre-release/lustre/ptlrpc/gss/gss_krb5_mech.c:		CERROR("short signature: %u\n", token->len);
lustre-release/lustre/ptlrpc/gss/gss_krb5_mech.c:		CERROR("bad krb5 header\n");
lustre-release/lustre/ptlrpc/gss/gss_krb5_mech.c:		CERROR("short signature: %u, require %d\n",
lustre-release/lustre/ptlrpc/gss/gss_krb5_mech.c:		CERROR("checksum mismatch\n");
lustre-release/lustre/ptlrpc/gss/gss_krb5_mech.c:                CERROR("error to encrypt confounder: %d\n", rc);
lustre-release/lustre/ptlrpc/gss/gss_krb5_mech.c:                        CERROR("error to encrypt page: %d\n", rc);
lustre-release/lustre/ptlrpc/gss/gss_krb5_mech.c:                CERROR("error to encrypt krb5 header: %d\n", rc);
lustre-release/lustre/ptlrpc/gss/gss_krb5_mech.c:                CERROR("odd transferred nob: %d\n", desc->bd_nob_transferred);
lustre-release/lustre/ptlrpc/gss/gss_krb5_mech.c:                CERROR("error to decrypt confounder: %d\n", rc);
lustre-release/lustre/ptlrpc/gss/gss_krb5_mech.c:			CERROR("page %d: odd offset %u len %u, blocksize %d\n",
lustre-release/lustre/ptlrpc/gss/gss_krb5_mech.c:                        CERROR("error to decrypt page: %d\n", rc);
lustre-release/lustre/ptlrpc/gss/gss_krb5_mech.c:                CERROR("%d cipher text transferred but only %d decrypted\n",
lustre-release/lustre/ptlrpc/gss/gss_krb5_mech.c:                CERROR("%d plain text expected but only %d received\n",
lustre-release/lustre/ptlrpc/gss/gss_krb5_mech.c:                CERROR("error to decrypt tail: %d\n", rc);
lustre-release/lustre/ptlrpc/gss/gss_krb5_mech.c:                CERROR("krb5 header doesn't match\n");
lustre-release/lustre/ptlrpc/gss/gss_krb5_mech.c:			CERROR("failed to obtain arc4 enc key\n");
lustre-release/lustre/ptlrpc/gss/gss_krb5_mech.c:			CERROR("failed to alloc tfm arc4 in ECB mode\n");
lustre-release/lustre/ptlrpc/gss/gss_krb5_mech.c:			CERROR("failed to set arc4 key, len %d\n",
lustre-release/lustre/ptlrpc/gss/gss_krb5_mech.c:			CERROR("odd offset %d in page %d\n",
lustre-release/lustre/ptlrpc/gss/gss_krb5_mech.c:		CERROR("short signature: %u\n", token->len);
lustre-release/lustre/ptlrpc/gss/gss_krb5_mech.c:		CERROR("bad krb5 header\n");
lustre-release/lustre/ptlrpc/gss/gss_krb5_mech.c:		CERROR("odd bodysize %d\n", bodysize);
lustre-release/lustre/ptlrpc/gss/gss_krb5_mech.c:		CERROR("incomplete token: bodysize %d\n", bodysize);
lustre-release/lustre/ptlrpc/gss/gss_krb5_mech.c:		CERROR("buffer too small: %u, require %d\n",
lustre-release/lustre/ptlrpc/gss/gss_krb5_mech.c:			CERROR("failed to obtain arc4 enc key\n");
lustre-release/lustre/ptlrpc/gss/gss_krb5_mech.c:			CERROR("failed to alloc tfm arc4 in ECB mode\n");
lustre-release/lustre/ptlrpc/gss/gss_krb5_mech.c:			CERROR("failed to set arc4 key, len %d\n",
lustre-release/lustre/ptlrpc/gss/gss_krb5_mech.c:		CERROR("error decrypt\n");
lustre-release/lustre/ptlrpc/gss/gss_krb5_mech.c:		CERROR("decrypted krb5 header mismatch\n");
lustre-release/lustre/ptlrpc/gss/gss_krb5_mech.c:		CERROR("checksum mismatch\n");
lustre-release/lustre/ptlrpc/gss/gss_krb5_mech.c:		CERROR("short signature: %u\n", token->len);
lustre-release/lustre/ptlrpc/gss/gss_krb5_mech.c:		CERROR("bad krb5 header\n");
lustre-release/lustre/ptlrpc/gss/gss_krb5_mech.c:		CERROR("short token size: %u\n", token->len);
lustre-release/lustre/ptlrpc/gss/gss_krb5_mech.c:		CERROR("checksum mismatch\n");
lustre-release/lustre/ptlrpc/gss/gss_krb5_mech.c:		CERROR("Failed to register kerberos gss mechanism!\n");
lustre-release/lustre/ptlrpc/gss/gss_cli_upcall.c:		CERROR("can't copy token\n");
lustre-release/lustre/ptlrpc/gss/gss_cli_upcall.c:                CERROR("unexpected bufcount %u\n", msg->lm_bufcount);
lustre-release/lustre/ptlrpc/gss/gss_cli_upcall.c:                CERROR("unable to extract gss reply header\n");
lustre-release/lustre/ptlrpc/gss/gss_cli_upcall.c:                CERROR("invalid gss version %u\n", ghdr->gh_version);
lustre-release/lustre/ptlrpc/gss/gss_cli_upcall.c:                CERROR("output buffer size %ld too small\n", outlen);
lustre-release/lustre/ptlrpc/gss/gss_cli_upcall.c:                CERROR("ioctl size %lu, expect %lu, please check lgss_keyring "
lustre-release/lustre/ptlrpc/gss/gss_cli_upcall.c:                CERROR("failed copy data from lgssd\n");
lustre-release/lustre/ptlrpc/gss/gss_cli_upcall.c:                CERROR("gssd interface version %d (expect %d)\n",
lustre-release/lustre/ptlrpc/gss/gss_cli_upcall.c:                CERROR("Invalid obdname pointer\n");
lustre-release/lustre/ptlrpc/gss/gss_cli_upcall.c:                CERROR("no such obd %s\n", obdname);
lustre-release/lustre/ptlrpc/gss/gss_cli_upcall.c:                CERROR("obd %s not setup\n", obdname);
lustre-release/lustre/ptlrpc/gss/gss_cli_upcall.c:		CERROR("obd %s has stopped\n", obdname);
lustre-release/lustre/ptlrpc/gss/gss_cli_upcall.c:		CERROR("obd %s is not a client device\n", obdname);
lustre-release/lustre/ptlrpc/gss/gss_cli_upcall.c:		CERROR("obd %s: import has gone\n", obd->obd_name);
lustre-release/lustre/ptlrpc/gss/gss_cli_upcall.c:                CERROR("import has been deactivated\n");
lustre-release/lustre/ptlrpc/gss/gss_bulk.c:				CERROR("bulk write: failed to allocate "
lustre-release/lustre/ptlrpc/gss/gss_bulk.c:                CERROR("bulk security descriptor mismatch: "
lustre-release/lustre/ptlrpc/gss/gss_bulk.c:                        CERROR("server reported bulk i/o failure\n");
lustre-release/lustre/ptlrpc/gss/gss_bulk.c:                                CERROR("failed to verify bulk read: %x\n", maj);
lustre-release/lustre/ptlrpc/gss/gss_bulk.c:                                CERROR("failed to decrypt bulk read: %x\n",
lustre-release/lustre/ptlrpc/gss/gss_bulk.c:                CERROR("bulk read: failed to prepare encryption "
lustre-release/lustre/ptlrpc/gss/gss_bulk.c:                CERROR("bulk write: failed to prepare encryption "
lustre-release/lustre/ptlrpc/gss/gss_bulk.c:                        CERROR("failed to verify bulk signature: %x\n", maj);
lustre-release/lustre/ptlrpc/gss/gss_bulk.c:                        CERROR("prepared nob %d doesn't match the actual "
lustre-release/lustre/ptlrpc/gss/gss_bulk.c:                        CERROR("failed decrypt bulk data: %x\n", maj);
lustre-release/lustre/ptlrpc/gss/gss_bulk.c:                        CERROR("failed to sign bulk data: %x\n", maj);
lustre-release/lustre/ptlrpc/gss/gss_bulk.c:                        CERROR("bulk read: failed to allocate encryption "
lustre-release/lustre/ptlrpc/gss/gss_bulk.c:                        CERROR("failed to encrypt bulk data: %x\n", maj);
lustre-release/lustre/ptlrpc/gss/sec_gss.c:                CERROR("gss header has length %d, now %u received\n",
lustre-release/lustre/ptlrpc/gss/sec_gss.c:                CERROR("fail to generate MIC: %08x\n", major);
lustre-release/lustre/ptlrpc/gss/sec_gss.c:                CERROR("mic verify error: %08x\n", major);
lustre-release/lustre/ptlrpc/gss/sec_gss.c:                CERROR("invalid bufcount %d\n", msgbuf->lm_bufcount);
lustre-release/lustre/ptlrpc/gss/sec_gss.c:                CERROR("unwrap message error: %08x\n", major);
lustre-release/lustre/ptlrpc/gss/sec_gss.c:                CERROR("ctx %p(%u): unable to inquire, expire it now\n",
lustre-release/lustre/ptlrpc/gss/sec_gss.c:        CERROR("seq %u (%s %s window) is a replay: max %u, winsize %d\n",
lustre-release/lustre/ptlrpc/gss/sec_gss.c:                CERROR("unexpected bufcount %u\n", msg->lm_bufcount);
lustre-release/lustre/ptlrpc/gss/sec_gss.c:                CERROR("can't decode gss header\n");
lustre-release/lustre/ptlrpc/gss/sec_gss.c:                CERROR("gss version %u mismatch, expect %u\n",
lustre-release/lustre/ptlrpc/gss/sec_gss.c:                        CERROR("%s bulk flag in reply\n",
lustre-release/lustre/ptlrpc/gss/sec_gss.c:                        CERROR("seqnum %u mismatch, expect %u\n",
lustre-release/lustre/ptlrpc/gss/sec_gss.c:                        CERROR("svc %u mismatch, expect %u\n",
lustre-release/lustre/ptlrpc/gss/sec_gss.c:                        CERROR("failed to verify reply: %x\n", major);
lustre-release/lustre/ptlrpc/gss/sec_gss.c:                                CERROR("Invalid reply bufcount %u\n",
lustre-release/lustre/ptlrpc/gss/sec_gss.c:                                CERROR("unpack bulk desc: %d\n", rc);
lustre-release/lustre/ptlrpc/gss/sec_gss.c:                        CERROR("server return error with early reply\n");
lustre-release/lustre/ptlrpc/gss/sec_gss.c:                CERROR("unknown gss proc %d\n", ghdr->gh_proc);
lustre-release/lustre/ptlrpc/gss/sec_gss.c:                CERROR("priv: wrap message error: %08x\n", major);
lustre-release/lustre/ptlrpc/gss/sec_gss.c:                CERROR("can't decode gss header\n");
lustre-release/lustre/ptlrpc/gss/sec_gss.c:                CERROR("gss version %u mismatch, expect %u\n",
lustre-release/lustre/ptlrpc/gss/sec_gss.c:                        CERROR("%s bulk flag in reply\n",
lustre-release/lustre/ptlrpc/gss/sec_gss.c:                        CERROR("failed to unwrap reply: %x\n", major);
lustre-release/lustre/ptlrpc/gss/sec_gss.c:                        CERROR("Failed to unpack after decryption\n");
lustre-release/lustre/ptlrpc/gss/sec_gss.c:                        CERROR("Invalid reply buffer: empty\n");
lustre-release/lustre/ptlrpc/gss/sec_gss.c:                                CERROR("bufcount %u: missing bulk sec desc\n",
lustre-release/lustre/ptlrpc/gss/sec_gss.c:                        CERROR("server return error with early reply\n");
lustre-release/lustre/ptlrpc/gss/sec_gss.c:                CERROR("unexpected proc %d\n", ghdr->gh_proc);
lustre-release/lustre/ptlrpc/gss/sec_gss.c:                CERROR("gss backend 0x%x not found\n",
lustre-release/lustre/ptlrpc/gss/sec_gss.c:                CERROR("could not pack reply, err %d\n", rc);
lustre-release/lustre/ptlrpc/gss/sec_gss.c:                CERROR("unexpected bulk flag\n");
lustre-release/lustre/ptlrpc/gss/sec_gss.c:                CERROR("proc %u: invalid handle length %u\n",
lustre-release/lustre/ptlrpc/gss/sec_gss.c:                CERROR("Invalid bufcount %d\n", reqbuf->lm_bufcount);
lustre-release/lustre/ptlrpc/gss/sec_gss.c:                CERROR("sec size %d too small\n", seclen);
lustre-release/lustre/ptlrpc/gss/sec_gss.c:                CERROR("failed to extract target uuid\n");
lustre-release/lustre/ptlrpc/gss/sec_gss.c:                CERROR("target '%s' is not available for context init (%s)\n",
lustre-release/lustre/ptlrpc/gss/sec_gss.c:                CERROR("failed extract reverse handle\n");
lustre-release/lustre/ptlrpc/gss/sec_gss.c:                CERROR("can't extract token\n");
lustre-release/lustre/ptlrpc/gss/sec_gss.c:                        CERROR("missing user descriptor\n");
lustre-release/lustre/ptlrpc/gss/sec_gss.c:                        CERROR("Mal-formed user descriptor\n");
lustre-release/lustre/ptlrpc/gss/sec_gss.c:                CERROR("Too few segments (%u) in request\n", msg->lm_bufcount);
lustre-release/lustre/ptlrpc/gss/sec_gss.c:                CERROR("phase 0: discard replayed req: seq %u\n", gw->gw_seq);
lustre-release/lustre/ptlrpc/gss/sec_gss.c:                CERROR("failed to verify request: %x\n", *major);
lustre-release/lustre/ptlrpc/gss/sec_gss.c:                CERROR("phase 1+: discard replayed req: seq %u\n", gw->gw_seq);
lustre-release/lustre/ptlrpc/gss/sec_gss.c:                        CERROR("no user desc included\n");
lustre-release/lustre/ptlrpc/gss/sec_gss.c:                        CERROR("Mal-formed user descriptor\n");
lustre-release/lustre/ptlrpc/gss/sec_gss.c:                        CERROR("missing bulk sec descriptor\n");
lustre-release/lustre/ptlrpc/gss/sec_gss.c:                CERROR("phase 0: discard replayed req: seq %u\n", gw->gw_seq);
lustre-release/lustre/ptlrpc/gss/sec_gss.c:                CERROR("failed to unwrap request: %x\n", *major);
lustre-release/lustre/ptlrpc/gss/sec_gss.c:                CERROR("phase 1+: discard replayed req: seq %u\n", gw->gw_seq);
lustre-release/lustre/ptlrpc/gss/sec_gss.c:                CERROR("Failed to unpack after decryption\n");
lustre-release/lustre/ptlrpc/gss/sec_gss.c:                CERROR("Invalid buffer: is empty\n");
lustre-release/lustre/ptlrpc/gss/sec_gss.c:                        CERROR("no user descriptor included\n");
lustre-release/lustre/ptlrpc/gss/sec_gss.c:                        CERROR("Mal-formed user descriptor\n");
lustre-release/lustre/ptlrpc/gss/sec_gss.c:                        CERROR("no bulk checksum included\n");
lustre-release/lustre/ptlrpc/gss/sec_gss.c:                CERROR("unsupported gss service %d\n", gw->gw_svc);
lustre-release/lustre/ptlrpc/gss/sec_gss.c:	CERROR("svc %u failed: major 0x%08x: req xid %llu ctx %p idx "
lustre-release/lustre/ptlrpc/gss/sec_gss.c:                CERROR("svc %u is not supported in destroy.\n", gw->gw_svc);
lustre-release/lustre/ptlrpc/gss/sec_gss.c:                        CERROR("missing user descriptor, ignore it\n");
lustre-release/lustre/ptlrpc/gss/sec_gss.c:                        CERROR("Mal-formed user descriptor, ignore it\n");
lustre-release/lustre/ptlrpc/gss/sec_gss.c:                CERROR("buf count only %d\n", req->rq_reqbuf->lm_bufcount);
lustre-release/lustre/ptlrpc/gss/sec_gss.c:                CERROR("can't decode gss header\n");
lustre-release/lustre/ptlrpc/gss/sec_gss.c:                CERROR("gss version %u, expect %u\n", ghdr->gh_version,
lustre-release/lustre/ptlrpc/gss/sec_gss.c:                CERROR("unknown proc %u\n", gw->gw_proc);
lustre-release/lustre/ptlrpc/gss/sec_gss.c:                CERROR("client request bulk sec on non-bulk rpc\n");
lustre-release/lustre/ptlrpc/gss/sec_gss.c:                CERROR("wrap message error: %08x\n", major);
lustre-release/lustre/ptlrpc/gss/sec_gss.c:                CERROR("proc %d not support\n", gw->gw_proc);
lustre-release/lustre/ptlrpc/gss/sec_gss.c:                CERROR("Unknown service %d\n", gw->gw_svc);
lustre-release/lustre/ptlrpc/gss/sec_gss.c:		CERROR("failed to dup svc handle\n");
lustre-release/lustre/ptlrpc/gss/sec_gss.c:                CERROR("failed to copy mech context\n");
lustre-release/lustre/ptlrpc/gss/sec_gss.c:                CERROR("failed to dup reverse handle\n");
lustre-release/lustre/ptlrpc/gss/gss_crypto.c:		CERROR("failed to alloc tfm: %s, mode %d: rc = %d\n", alg_name,
lustre-release/lustre/ptlrpc/gss/gss_crypto.c:		CERROR("failed to set %s key, len %d, rc = %d\n", alg_name,
lustre-release/lustre/ptlrpc/gss/gss_crypto.c:		CERROR("output length %zu mismatch blocksize %d\n",
lustre-release/lustre/ptlrpc/gss/gss_crypto.c:		CERROR("iv size too large %d\n", crypto_blkcipher_ivsize(tfm));
lustre-release/lustre/ptlrpc/gss/gss_crypto.c:		CERROR("bufsize %u too small: datalen %u, padding %u\n",
lustre-release/lustre/ptlrpc/gss/gss_crypto.c:			CERROR("encrypt error %d\n", rc);
lustre-release/lustre/ptlrpc/gss/gss_pipefs.c:                CERROR("buflen %u < %u\n", *buflen, reslen);
lustre-release/lustre/ptlrpc/gss/gss_pipefs.c:                CERROR("failed copy user space data\n");
lustre-release/lustre/ptlrpc/gss/gss_pipefs.c:                CERROR("fail to get seq\n");
lustre-release/lustre/ptlrpc/gss/gss_pipefs.c:                CERROR("upcall %u has aborted earlier\n", seq);
lustre-release/lustre/ptlrpc/gss/gss_pipefs.c:                CERROR("refresh ctx %p(uid %d) failed: %d/0x%08x: %s\n",
lustre-release/lustre/ptlrpc/gss/gss_pipefs.c:	CERROR("failed msg %p (seq %u, uid %u, svc %u, nid %#llx, obd %.*s): "
lustre-release/lustre/ptlrpc/gss/gss_pipefs.c:                CERROR("failing remaining msg %p:seq %u, uid %u, svc %u, "
lustre-release/lustre/ptlrpc/gss/gss_pipefs.c:                CERROR("import has no connection set\n");
lustre-release/lustre/ptlrpc/gss/gss_pipefs.c:                CERROR("rpc_queue_upcall failed: %d\n", rc);
lustre-release/lustre/ptlrpc/gss/gss_pipefs.c:                CERROR("Failed to create gss pipe dir: %ld\n", PTR_ERR(de));
lustre-release/lustre/ptlrpc/gss/gss_pipefs.c:                CERROR("failed to make rpc_pipe %s: %ld\n",
lustre-release/lustre/ptlrpc/gss/gss_svc_upcall.c:		CERROR("rsi parse error %d\n", status);
lustre-release/lustre/ptlrpc/gss/gss_svc_upcall.c:                CERROR("fail to get remote flag\n");
lustre-release/lustre/ptlrpc/gss/gss_svc_upcall.c:		CERROR("fail to get root user flag\n");
lustre-release/lustre/ptlrpc/gss/gss_svc_upcall.c:                CERROR("fail to get mds user flag\n");
lustre-release/lustre/ptlrpc/gss/gss_svc_upcall.c:                CERROR("fail to get oss user flag\n");
lustre-release/lustre/ptlrpc/gss/gss_svc_upcall.c:                CERROR("fail to get mapped uid\n");
lustre-release/lustre/ptlrpc/gss/gss_svc_upcall.c:                CERROR("NOENT? set rsc entry negative\n");
lustre-release/lustre/ptlrpc/gss/gss_svc_upcall.c:			CERROR("unable to get expire time, drop it\n");
lustre-release/lustre/ptlrpc/gss/gss_svc_upcall.c:                CERROR("parse rsc error %d\n", status);
lustre-release/lustre/ptlrpc/gss/gss_svc_upcall.c:                CERROR("unable to get expire time, drop it\n");
lustre-release/lustre/ptlrpc/gss/gss_svc_upcall.c:		CERROR("create reverse svc ctx: idx %#llx, rc %d\n",
lustre-release/lustre/ptlrpc/gss/gss_svc_upcall.c:                CERROR("fail to dup context handle\n");
lustre-release/lustre/ptlrpc/gss/gss_svc_upcall.c:                CERROR("can't duplicate token\n");
lustre-release/lustre/ptlrpc/gss/gss_svc_upcall.c:                CERROR("error in rsi_lookup.\n");
lustre-release/lustre/ptlrpc/gss/gss_svc_upcall.c:                CERROR("authentication failed\n");
lustre-release/lustre/ptlrpc/gss/gss_svc_upcall.c:                CERROR("failed duplicate reverse handle\n");
lustre-release/lustre/ptlrpc/gss/gss_svc_upcall.c:                CERROR("handle size %u too large\n", rsip->out_handle.len);
lustre-release/lustre/ptlrpc/gss/gss_svc_upcall.c:                CERROR("failed to pack reply: %d\n", rc);
lustre-release/lustre/ptlrpc/gss/lproc_gss.c:	CERROR("failed to initialize gss lproc entries: %d\n", rc);
lustre-release/lustre/ptlrpc/gss/gss_rawobj.c:                CERROR("buflen %u <  %u\n", *buflen, 4 + len);
lustre-release/lustre/ptlrpc/gss/gss_rawobj.c:                CERROR("buflen %u\n", *buflen);
lustre-release/lustre/ptlrpc/gss/gss_rawobj.c:                CERROR("buflen %u < %u\n", *buflen, len);
lustre-release/lustre/ptlrpc/gss/gss_rawobj.c:                        CERROR("fail to alloc %u bytes\n", obj->len);
lustre-release/lustre/ptlrpc/gss/gss_rawobj.c:                CERROR("buflen %u < %u\n", *buflen, reslen);
lustre-release/lustre/ptlrpc/gss/gss_null_mech.c:		CERROR("Failed to register null gss mechanism!\n");
lustre-release/lustre/ptlrpc/gss/gss_keyring.c:		CERROR("obd %s is not a supported device\n",
lustre-release/lustre/ptlrpc/gss/gss_keyring.c:                CERROR("failed request key: %ld\n", PTR_ERR(key));
lustre-release/lustre/ptlrpc/gss/gss_keyring.c:                CERROR("failed copy reverse cli ctx: %d\n", rc);
lustre-release/lustre/ptlrpc/gss/gss_keyring.c:                CERROR("failed to alloc key: %ld\n", PTR_ERR(key));
lustre-release/lustre/ptlrpc/gss/gss_keyring.c:                CERROR("failed to instantiate key: %d\n", rc);
lustre-release/lustre/ptlrpc/gss/gss_keyring.c:                CERROR("failed copy reverse cli ctx: %d\n", rc);
lustre-release/lustre/ptlrpc/gss/gss_keyring.c:                CERROR("invalid: data %p, len %lu\n", data, (long)datalen);
lustre-release/lustre/ptlrpc/gss/gss_keyring.c:                CERROR("key already have payload\n");
lustre-release/lustre/ptlrpc/gss/gss_keyring.c:		CERROR("failed to link key %08x to keyring %08x: %d\n",
lustre-release/lustre/ptlrpc/gss/gss_keyring.c:                CERROR("failed extract seq_win\n");
lustre-release/lustre/ptlrpc/gss/gss_keyring.c:			CERROR("cannot extract RPC: rc = %d\n", rc);
lustre-release/lustre/ptlrpc/gss/gss_keyring.c:			CERROR("failed to extract gss rc = %d\n", rc);
lustre-release/lustre/ptlrpc/gss/gss_keyring.c:		CERROR("negotiation: rpc err %d, gss err %x\n",
lustre-release/lustre/ptlrpc/gss/gss_keyring.c:			CERROR("failed extract handle\n");
lustre-release/lustre/ptlrpc/gss/gss_keyring.c:			CERROR("failed extract mech\n");
lustre-release/lustre/ptlrpc/gss/gss_keyring.c:			CERROR("failed import context\n");
lustre-release/lustre/ptlrpc/gss/gss_keyring.c:                CERROR("failed to register keyring type: %d\n", rc);
lustre-release/lustre/ptlrpc/gss/gss_sk_mech.c:		CERROR("Counter looped, connection must be reset to avoid "
lustre-release/lustre/ptlrpc/gss/gss_sk_mech.c:		CERROR("Failed to read shared key interface version\n");
lustre-release/lustre/ptlrpc/gss/gss_sk_mech.c:		CERROR("Invalid shared key interface version: %d\n", tmp);
lustre-release/lustre/ptlrpc/gss/gss_sk_mech.c:		CERROR("Failed to read HMAC algorithm type\n");
lustre-release/lustre/ptlrpc/gss/gss_sk_mech.c:		CERROR("Invalid hmac type: %s\n", sk_hmac);
lustre-release/lustre/ptlrpc/gss/gss_sk_mech.c:		CERROR("Failed to read crypt algorithm type\n");
lustre-release/lustre/ptlrpc/gss/gss_sk_mech.c:		CERROR("Invalid crypt type: %s\n", sk_crypt);
lustre-release/lustre/ptlrpc/gss/gss_sk_mech.c:		CERROR("Failed to read context expiration time\n");
lustre-release/lustre/ptlrpc/gss/gss_sk_mech.c:		CERROR("Failed to read host random\n");
lustre-release/lustre/ptlrpc/gss/gss_sk_mech.c:		CERROR("Failed to read peer random\n");
lustre-release/lustre/ptlrpc/gss/gss_sk_mech.c:		CERROR("Failed to read HMAC key\n");
lustre-release/lustre/ptlrpc/gss/gss_sk_mech.c:		CERROR("HMAC key must key must be larger than %d bytes\n",
lustre-release/lustre/ptlrpc/gss/gss_sk_mech.c:		CERROR("Failed to read session key\n");
lustre-release/lustre/ptlrpc/gss/gss_sk_mech.c:		CERROR("checksum mismatch\n");
lustre-release/lustre/ptlrpc/gss/gss_sk_mech.c:			CERROR("offset %d not blocksize aligned\n",
lustre-release/lustre/ptlrpc/gss/gss_sk_mech.c:			CERROR("failed to encrypt page: %d\n", rc);
lustre-release/lustre/ptlrpc/gss/gss_sk_mech.c:		CERROR("Transfer not a multiple of block size: %d\n",
lustre-release/lustre/ptlrpc/gss/gss_sk_mech.c:			CERROR("Invalid bulk descriptor vector\n");
lustre-release/lustre/ptlrpc/gss/gss_sk_mech.c:				CERROR("Invalid decrypted length\n");
lustre-release/lustre/ptlrpc/gss/gss_sk_mech.c:			CERROR("Decryption failed for page: %d\n", rc);
lustre-release/lustre/ptlrpc/gss/gss_sk_mech.c:		CERROR("%d cipher text transferred but only %d decrypted\n",
lustre-release/lustre/ptlrpc/gss/gss_sk_mech.c:		CERROR("%d plain text expected but only %d received\n",
lustre-release/lustre/ptlrpc/gss/gss_sk_mech.c:		CERROR("Failed to register sk gss mechanism!\n");
lustre-release/lustre/ptlrpc/sec_bulk.c:		CERROR("Failed to allocate %d enc pages\n", npages);
lustre-release/lustre/ptlrpc/sec_bulk.c:		CERROR("Invalid bulk sec desc: size %d\n", size);
lustre-release/lustre/ptlrpc/sec_bulk.c:		CERROR("Unexpected version %u\n", bsd->bsd_version);
lustre-release/lustre/ptlrpc/sec_bulk.c:		CERROR("Invalid type %u\n", bsd->bsd_type);
lustre-release/lustre/ptlrpc/sec_bulk.c:		CERROR("Invalid svc %u\n", bsd->bsd_svc);
lustre-release/lustre/ptlrpc/sec_bulk.c:		CERROR("Unable to initialize checksum hash %s\n",
lustre-release/lustre/ptlrpc/nodemap_range.c:		CERROR("cannot allocate lu_nid_range of size %zu bytes\n",
lustre-release/lustre/ptlrpc/nodemap_idmap.c:		CERROR("cannot allocate lu_idmap of size %zu bytes\n",
lustre-release/lustre/ptlrpc/import.c:			CERROR("%s: rc = %d waiting for callback (%d != 0)\n",
lustre-release/lustre/ptlrpc/import.c:				CERROR("%s: Unregistering RPCs found (%d). "
lustre-release/lustre/ptlrpc/import.c:			CERROR("Interrupted, inval=%d\n",
lustre-release/lustre/ptlrpc/import.c:		CERROR("%s: no connections available\n",
lustre-release/lustre/ptlrpc/import.c:		CERROR("can't connect to a closed import\n");
lustre-release/lustre/ptlrpc/import.c:		CERROR("already connected\n");
lustre-release/lustre/ptlrpc/import.c:		CERROR("already connecting\n");
lustre-release/lustre/ptlrpc/import.c:		CERROR("%s: no connect data from server\n",
lustre-release/lustre/ptlrpc/import.c:		CERROR("%s: missing export after connect\n",
lustre-release/lustre/ptlrpc/import.c:		CERROR("%s: Server didn't grant requested subset of flags: "
lustre-release/lustre/ptlrpc/import.c:		CERROR("%s: Server didn't grant requested subset of flags2: "
lustre-release/lustre/ptlrpc/import.c:		CERROR("imp_replayable flag does not match server after reconnect. We should LBUG right here.\n");
lustre-release/lustre/ptlrpc/import.c:		CERROR("%s: went back in time (transno %lld was previously committed, server now claims %lld)!\n",
lustre-release/lustre/ptlrpc/import.c:			CERROR("For further information, see http://doc.lustre.org/lustre_manual.xhtml#went_back_in_time\n");
lustre-release/lustre/ptlrpc/import.c:                CERROR("dump the log upon eviction\n");
lustre-release/lustre/ptlrpc/import.c:			CERROR("error starting invalidate thread: %d\n", rc);
lustre-release/lustre/ptlrpc/import.c:		CERROR("%s: don't know how to disconnect from %s "
lustre-release/lustre/ptlrpc/sec_plain.c:		CERROR("bulk sec desc has short size %d\n",
lustre-release/lustre/ptlrpc/sec_plain.c:		CERROR("invalid bulk svc %u\n", bsd->bsd_svc);
lustre-release/lustre/ptlrpc/sec_plain.c:		CERROR("unexpected reply buf count %u\n", msg->lm_bufcount);
lustre-release/lustre/ptlrpc/sec_plain.c:		CERROR("missing plain header\n");
lustre-release/lustre/ptlrpc/sec_plain.c:		CERROR("Invalid header version\n");
lustre-release/lustre/ptlrpc/sec_plain.c:		CERROR("Unexpected udesc flag in reply\n");
lustre-release/lustre/ptlrpc/sec_plain.c:		CERROR("reply bulk flavor %u != %u\n", phdr->ph_bulk_hash_alg,
lustre-release/lustre/ptlrpc/sec_plain.c:			CERROR("%s bulk checksum in reply\n",
lustre-release/lustre/ptlrpc/sec_plain.c:		CERROR("bulk write: failed to compute checksum: %d\n", rc);
lustre-release/lustre/ptlrpc/sec_plain.c:		CERROR("bulk read: client verify failed: %d\n", rc);
lustre-release/lustre/ptlrpc/sec_plain.c:		CERROR("Invalid rpc flavor %x\n", req->rq_flvr.sf_rpc);
lustre-release/lustre/ptlrpc/sec_plain.c:		CERROR("unexpected request buf count %u\n", msg->lm_bufcount);
lustre-release/lustre/ptlrpc/sec_plain.c:		CERROR("missing plain header\n");
lustre-release/lustre/ptlrpc/sec_plain.c:		CERROR("Invalid header version\n");
lustre-release/lustre/ptlrpc/sec_plain.c:		CERROR("invalid hash algorithm: %u\n", phdr->ph_bulk_hash_alg);
lustre-release/lustre/ptlrpc/sec_plain.c:			CERROR("Mal-formed user descriptor\n");
lustre-release/lustre/ptlrpc/sec_plain.c:		CERROR("bulk write: server verify failed: %d\n", rc);
lustre-release/lustre/ptlrpc/sec_plain.c:		CERROR("bulk read: server failed to compute checksum: %d\n",
lustre-release/lustre/ptlrpc/sec_plain.c:		CERROR("failed to register: %d\n", rc);
lustre-release/lustre/ptlrpc/sec_plain.c:		CERROR("cannot unregister: %d\n", rc);
lustre-release/lustre/ptlrpc/nodemap_lproc.c:		CERROR("cannot find nodemap '%s': rc = %d\n",
lustre-release/lustre/ptlrpc/nodemap_lproc.c:		CERROR("cannot find nodemap '%s': rc = %d\n",
lustre-release/lustre/ptlrpc/nodemap_lproc.c:		CERROR("cannot find nodemap '%s': rc = %d\n",
lustre-release/lustre/ptlrpc/nodemap_lproc.c:		CERROR("cannot find nodemap '%s': rc = %d\n",
lustre-release/lustre/ptlrpc/nodemap_lproc.c:		CERROR("cannot find nodemap '%s': rc = %d\n",
lustre-release/lustre/ptlrpc/nodemap_lproc.c:		CERROR("cannot find nodemap '%s': rc = %d\n",
lustre-release/lustre/ptlrpc/nodemap_lproc.c:		CERROR("cannot find nodemap '%s': rc = %d\n",
lustre-release/lustre/ptlrpc/nodemap_lproc.c:		CERROR("cannot find nodemap '%s': rc = %d\n",
lustre-release/lustre/ptlrpc/nodemap_lproc.c:		CERROR("cannot find nodemap '%s': rc = %d\n",
lustre-release/lustre/ptlrpc/nodemap_lproc.c:		CERROR("cannot find nodemap '%s': rc = %d\n",
lustre-release/lustre/ptlrpc/nodemap_lproc.c:		CERROR("cannot find nodemap '%s': rc = %d\n",
lustre-release/lustre/ptlrpc/nodemap_lproc.c:		CERROR("cannot find nodemap '%s': rc = %d\n",
lustre-release/lustre/ptlrpc/nodemap_lproc.c:		CERROR("cannot find nodemap '%s': rc = %d\n",
lustre-release/lustre/ptlrpc/nodemap_lproc.c:		CERROR("cannot create 'nodemap' directory: rc = %d\n",
lustre-release/lustre/ptlrpc/nodemap_lproc.c:		CERROR("cannot create 'nodemap/%s': rc = %d\n",
lustre-release/lustre/ptlrpc/nodemap_storage.c:			CERROR("cannot destroy nodemap index: rc = %d\n",
lustre-release/lustre/ptlrpc/nodemap_storage.c:			CERROR("cannot load nodemap index from disk, creating "
lustre-release/lustre/ptlrpc/nodemap_storage.c:		CERROR("cannot add nodemap config to non-existing MGS.\n");
lustre-release/lustre/ptlrpc/nodemap_storage.c:		CERROR("cannot add nodemap config to non-existing MGS.\n");
lustre-release/lustre/ptlrpc/nodemap_storage.c:		CERROR("cannot add nodemap config to non-existing MGS.\n");
lustre-release/lustre/ptlrpc/nodemap_storage.c:		CERROR("cannot add nodemap config to non-existing MGS.\n");
lustre-release/lustre/ptlrpc/nodemap_storage.c:		CERROR("cannot add nodemap config to non-existing MGS.\n");
lustre-release/lustre/ptlrpc/nodemap_storage.c:		CERROR("cannot add nodemap config to non-existing MGS.\n");
lustre-release/lustre/ptlrpc/nodemap_storage.c:		CERROR("cannot add nodemap config to non-existing MGS.\n");
lustre-release/lustre/ptlrpc/nodemap_storage.c:		CERROR("cannot add nodemap config to non-existing MGS.\n");
lustre-release/lustre/ptlrpc/nodemap_storage.c:		CERROR("got keyrec pair for unknown type %d\n", type);
lustre-release/lustre/ptlrpc/sec_config.c:        CERROR("unknown target %p(%s)\n", obd, type);
lustre-release/lustre/ptlrpc/sec_config.c:        CERROR("invalid flavor string: %s\n", str);
lustre-release/lustre/ptlrpc/sec_config.c:                CERROR("invalid param, no '='\n");
lustre-release/lustre/ptlrpc/sec_config.c:                        CERROR("invalid network name: %s\n", param);
lustre-release/lustre/ptlrpc/sec_config.c:                        CERROR("invalid rule dir segment: %s\n", dir);
lustre-release/lustre/ptlrpc/sec_config.c:                                CERROR("can't merge: %d\n", rc);
lustre-release/lustre/ptlrpc/sec_config.c:                        CERROR("out of memory, can't merge rule!\n");
lustre-release/lustre/ptlrpc/sec_config.c:			CERROR("can't find conf\n");
lustre-release/lustre/ptlrpc/sec_config.c:		CERROR("missing target name\n");
lustre-release/lustre/ptlrpc/sec_config.c:		CERROR("missing parameter\n");
lustre-release/lustre/ptlrpc/sec_config.c:		CERROR("Invalid sptlrpc parameter: %s\n", param);
lustre-release/lustre/ptlrpc/sec_config.c:                CERROR("%s is not a sptlrpc config log\n", logname);
lustre-release/lustre/ptlrpc/sec_config.c:		CERROR("unexpected obd type %s\n", obd->obd_type->typ_name);
lustre-release/lustre/ptlrpc/sec_config.c:		CERROR("missing sptlrpc config log\n");
lustre-release/lustre/ptlrpc/nrs_tbf.c:			CERROR("jobids {%s} illegal\n", rule->tr_jobids_str);
lustre-release/lustre/ptlrpc/nrs_tbf.c:			CERROR("nids {%s} illegal\n",
lustre-release/lustre/ptlrpc/nrs_tbf.c:			CERROR("%ss {%s} illegal\n",
lustre-release/lustre/ptlrpc/client.c:		CERROR("request allocation out of memory\n");
lustre-release/lustre/ptlrpc/client.c:		CERROR("cannot allocate ptlrpc set: rc = %d\n", -ENOMEM);
lustre-release/lustre/ptlrpc/client.c:		CERROR("Transno is 0 during replay!\n");
lustre-release/lustre/ptlrpc/client.c:		CERROR("ptlrpc: run out of memory!\n");
lustre-release/lustre/ptlrpc/llog_client.c:		CERROR("ctxt->loc_imp == NULL for context idx %d."    \
lustre-release/lustre/ptlrpc/llog_client.c:		CERROR("bad log header magic: %#x (expecting %#x)\n",
lustre-release/lustre/ptlrpc/llog_client.c:		CERROR("incorrectly sized log header: %#x, expecting %#x (power of two > 8192)\n",
lustre-release/lustre/ptlrpc/llog_client.c:		CERROR("you may need to re-run lconf --write_conf.\n");
lustre-release/lustre/ptlrpc/nrs.c:		CERROR("NRS: cannot get module for policy %s; is it alive?\n",
lustre-release/lustre/ptlrpc/nrs.c:			CERROR("NRS: arg '%s' is too long\n", arg);
lustre-release/lustre/ptlrpc/nrs.c:		CERROR("Can't find NRS policy %s\n", name);
lustre-release/lustre/ptlrpc/nrs.c:		CERROR("Policy %s is busy with %d references\n", name,
lustre-release/lustre/ptlrpc/nrs.c:		CERROR("NRS policy %s has been registered, can't register it "
lustre-release/lustre/ptlrpc/nrs.c:				CERROR("Failed to register NRS policy %s for "
lustre-release/lustre/ptlrpc/nrs.c:				CERROR("Failed to unregister NRS policy %s for "
lustre-release/lustre/ptlrpc/nrs.c:		CERROR("NRS: failing to register policy %s. Please check "
lustre-release/lustre/ptlrpc/nrs.c:		CERROR("NRS: failing to register policy %s which has already "
lustre-release/lustre/ptlrpc/nrs.c:				CERROR("Failed to register NRS policy %s for "
lustre-release/lustre/ptlrpc/nrs.c:		CERROR("Unable to unregister a fallback policy, unless the "
lustre-release/lustre/ptlrpc/nrs.c:		CERROR("Failing to unregister NRS policy %s which has "
lustre-release/lustre/ptlrpc/nrs.c:			CERROR("Please first stop policy %s on all service "
lustre-release/lustre/ptlrpc/sec.c:		CERROR("%s: already unregistered\n", policy->sp_name);
lustre-release/lustre/ptlrpc/sec.c:				CERROR("Unable to load module ptlrpc_gss\n");
lustre-release/lustre/ptlrpc/sec.c:	CERROR("invalid wire flavor 0x%x\n", flvr);
lustre-release/lustre/ptlrpc/sec.c:		CERROR("import %p (%s) with no sec\n",
lustre-release/lustre/ptlrpc/sec.c:		CERROR("attempt to use dying sec %p\n", sec);
lustre-release/lustre/ptlrpc/sec.c:		CERROR("req %p: fail to get context\n", req);
lustre-release/lustre/ptlrpc/sec.c:			CERROR("req %p: failed to replace dead ctx %p: %d\n",
lustre-release/lustre/ptlrpc/sec.c:		CERROR("failed unpack reply: x%llu\n", req->rq_xid);
lustre-release/lustre/ptlrpc/sec.c:		CERROR("replied data length %d too small\n",
lustre-release/lustre/ptlrpc/sec.c:		CERROR("reply policy %u doesn't match request policy %u\n",
lustre-release/lustre/ptlrpc/sec.c:		CERROR("real reply with offset 0\n");
lustre-release/lustre/ptlrpc/sec.c:		CERROR("reply at odd offset %u\n", req->rq_reply_off);
lustre-release/lustre/ptlrpc/sec.c:		CERROR("early reply with offset %u\n", req->rq_reply_off);
lustre-release/lustre/ptlrpc/sec.c:		CERROR("data size has changed from %u to %u\n",
lustre-release/lustre/ptlrpc/sec.c:		CERROR("early reply length %d too small\n",
lustre-release/lustre/ptlrpc/sec.c:			CERROR("invalid flavor 0x%x\n", sf->sf_rpc);
lustre-release/lustre/ptlrpc/sec.c:		CERROR("import %s->%s: failed to create new sec\n",
lustre-release/lustre/ptlrpc/sec.c:		CERROR("error unpacking request from %s x%llu\n",
lustre-release/lustre/ptlrpc/sec.c:		CERROR("unsupported rpc flavor %x\n", req->rq_flvr.sf_rpc);
lustre-release/lustre/ptlrpc/sec.c:			CERROR("size of message is too big (%zd), %d allowed\n",
lustre-release/lustre/ptlrpc/sec.c:		CERROR("nob %d doesn't match transferred nob %d\n",
lustre-release/lustre/ptlrpc/sec.c:			CERROR("error unwrap bulk: %d\n", rc);
lustre-release/lustre/ptlrpc/sec.c:		CERROR("%u groups is too large\n", pud->pud_ngroups);
lustre-release/lustre/ptlrpc/sec.c:		CERROR("%u groups are claimed but bufsize only %u\n",
lustre-release/lustre/ptlrpc/service.c:			CERROR("%s: Can't allocate request buffer\n",
lustre-release/lustre/ptlrpc/service.c:		CERROR("%s: Invalid cpu bind value %d, only 1 or 0 allowed\n",
lustre-release/lustre/ptlrpc/service.c:				CERROR("%s: invalid CPT pattern string: %s",
lustre-release/lustre/ptlrpc/service.c:				CERROR("%s: failed to parse CPT array %s: %d\n",
lustre-release/lustre/ptlrpc/service.c:		CERROR("Failed to start threads for service %s: %d\n",
lustre-release/lustre/ptlrpc/service.c:			CERROR("error unpacking request: ptl %d from %s x%llu\n",
lustre-release/lustre/ptlrpc/service.c:		CERROR("error unpacking ptlrpc body: ptl %d from %s x %llu\n",
lustre-release/lustre/ptlrpc/service.c:		CERROR("drop incoming rpc opc %u, x%llu\n",
lustre-release/lustre/ptlrpc/service.c:		CERROR("wrong packet type received (type=%u) from %s\n",
lustre-release/lustre/ptlrpc/service.c:			CERROR("%s: failure to initialize session: rc = %d\n",
lustre-release/lustre/ptlrpc/service.c:		CERROR("Failed to post rqbd for %s on CPT %d: %d\n",
lustre-release/lustre/ptlrpc/service.c:			CERROR("cannot start reply handler thread %d:%d: rc = %d\n",
lustre-release/lustre/ptlrpc/service.c:	CERROR("cannot start %s thread #%d_%d: rc %d\n",
lustre-release/lustre/ptlrpc/service.c:		CERROR("cannot start thread '%s': rc = %d\n",
lustre-release/lustre/ptlrpc/service.c:		CERROR("%s: unhealthy - request has been waiting %llds\n",
lustre-release/lustre/ptlrpc/recover.c:			CERROR("recovery replay error %d for req "
lustre-release/lustre/ptlrpc/pinger.c:		CERROR("OOM trying to ping %s->%s\n",
lustre-release/lustre/ptlrpc/pinger.c:		CERROR("cannot start pinger workqueue\n");
lustre-release/lustre/ptlrpc/pinger.c:		CERROR("Cannot start ping evictor thread: %ld\n",
lustre-release/lustre/ptlrpc/lproc_ptlrpc.c:			CERROR("config: wrong instance # %s\n", ptr);
lustre-release/lustre/ptlrpc/events.c:                        CERROR("Can't allocate incoming request descriptor: "
lustre-release/lustre/ptlrpc/events.c:        CERROR ("Failed to allocate event queue: %d\n", rc);
lustre-release/lustre/ptlrpc/events.c:                CERROR("network initialisation failed\n");
lustre-release/lustre/ptlrpc/events.c:        CERROR("rpcd initialisation failed\n");
lustre-release/lustre/ptlrpc/niobuf.c:		CERROR ("LNetMDBind failed: %d\n", rc);
lustre-release/lustre/ptlrpc/niobuf.c:		CERROR("LNetPut(%s, %d, %lld) failed: %d\n",
lustre-release/lustre/ptlrpc/niobuf.c:			CERROR("%s: LNetMDBind failed for MD %u: rc = %d\n",
lustre-release/lustre/ptlrpc/niobuf.c:			CERROR("%s: failed bulk transfer with %s:%u x%llu: "
lustre-release/lustre/ptlrpc/niobuf.c:			CERROR("%s: LNetMEAttach failed x%llu/%d: rc = %d\n",
lustre-release/lustre/ptlrpc/niobuf.c:			CERROR("%s: LNetMDAttach failed x%llu/%d: rc = %d\n",
lustre-release/lustre/ptlrpc/niobuf.c:                CERROR("not replying on NULL connection\n"); /* bug 9635 */
lustre-release/lustre/ptlrpc/niobuf.c:			CERROR("LNetMEAttach failed: %d\n", rc);
lustre-release/lustre/ptlrpc/niobuf.c:			CERROR("LNetMDAttach failed: %d\n", rc);
lustre-release/lustre/ptlrpc/niobuf.c:		CERROR("LNetMEAttach failed: %ld\n", PTR_ERR(me));
lustre-release/lustre/ptlrpc/niobuf.c:	CERROR("LNetMDAttach failed: %d;\n", rc);
lustre-release/lustre/ptlrpc/ptlrpcd.c:		CERROR("Failure to refill session: %d\n", rc2);
lustre-release/lustre/ptlrpc/ptlrpcd.c:			CERROR("%s: invalid CPT pattern string: %s",
lustre-release/lustre/ptlrpc/ptlrpcd.c:			CERROR("%s: failed to parse CPT array %s: %d\n",
lustre-release/lustre/ptlrpc/pack_generic.c:		CERROR("msg v1 not supported - please upgrade you system\n");
lustre-release/lustre/ptlrpc/pack_generic.c:		CERROR("incorrect message magic: %08x\n", msg->lm_magic);
lustre-release/lustre/ptlrpc/pack_generic.c:		CERROR("incorrect message magic: %08x\n", msg->lm_magic);
lustre-release/lustre/ptlrpc/pack_generic.c:		CERROR("lustre_pack_reply failed: rc=%d size=%d\n", rc,
lustre-release/lustre/ptlrpc/pack_generic.c:		CERROR("msg %p buffer[%d] size %d too small "
lustre-release/lustre/ptlrpc/pack_generic.c:		CERROR("message length %d too small for lustre_msg\n", len);
lustre-release/lustre/ptlrpc/pack_generic.c:		CERROR("message bufcount %d is not valid\n", m->lm_bufcount);
lustre-release/lustre/ptlrpc/pack_generic.c:		CERROR("message length %d too small for %d buflens\n",
lustre-release/lustre/ptlrpc/pack_generic.c:			CERROR("buffer %d length %d is not valid\n", i, buflen);
lustre-release/lustre/ptlrpc/pack_generic.c:		CERROR("len: %d, required_len %d, bufcount: %d\n",
lustre-release/lustre/ptlrpc/pack_generic.c:			CERROR("buffer %d length %d\n", i, m->lm_buflens[i]);
lustre-release/lustre/ptlrpc/pack_generic.c:		CERROR("message length %d too small for magic/version check\n",
lustre-release/lustre/ptlrpc/pack_generic.c:		CERROR("error unpacking ptlrpc body\n");
lustre-release/lustre/ptlrpc/pack_generic.c:		CERROR("wrong lustre_msg version %08x\n", pb->pb_version);
lustre-release/lustre/ptlrpc/pack_generic.c:		CERROR("bad lustre msg magic: %08x\n",
lustre-release/lustre/ptlrpc/pack_generic.c:		CERROR("bad lustre msg magic: %08x\n",
lustre-release/lustre/ptlrpc/pack_generic.c:		CERROR("incorrect message magic: %08x\n", m->lm_magic);
lustre-release/lustre/ptlrpc/pack_generic.c:		CERROR("incorrect message magic: %08x\n", m->lm_magic);
lustre-release/lustre/ptlrpc/pack_generic.c:		CERROR("can't unpack string in msg %p buffer[%d]\n", m, index);
lustre-release/lustre/ptlrpc/pack_generic.c:		CERROR("can't unpack non-NULL terminated string in msg %p buffer[%d] len %d\n",
lustre-release/lustre/ptlrpc/pack_generic.c:		CERROR("buffer length of msg %p buffer[%d] is invalid(%d)\n",
lustre-release/lustre/ptlrpc/pack_generic.c:			CERROR("can't unpack short string in msg %p buffer[%d] len %d: strlen %d\n",
lustre-release/lustre/ptlrpc/pack_generic.c:		CERROR("can't unpack oversized string in msg %p buffer[%d] len %d strlen %d: max %d expected\n",
lustre-release/lustre/ptlrpc/pack_generic.c:		CERROR("incorrect message magic: %08x\n", msg->lm_magic);
lustre-release/lustre/ptlrpc/pack_generic.c:		CERROR("incorrect message magic: %08x\n", msg->lm_magic);
lustre-release/lustre/ptlrpc/pack_generic.c:		CERROR("invalid msg %p: no ptlrpc body!\n", msg);
lustre-release/lustre/ptlrpc/pack_generic.c:		CERROR("invalid msg %p: no ptlrpc body!\n", msg);
lustre-release/lustre/ptlrpc/pack_generic.c:			CERROR("invalid msg %p: no ptlrpc body!\n", msg);
lustre-release/lustre/ptlrpc/pack_generic.c:		CERROR("incorrect message magic: %08x\n", msg->lm_magic);
lustre-release/lustre/ptlrpc/pack_generic.c:			CERROR("invalid msg %p: no ptlrpc body!\n", msg);
lustre-release/lustre/ptlrpc/pack_generic.c:		CERROR("incorrect message magic: %08x\n", msg->lm_magic);
lustre-release/lustre/ptlrpc/pack_generic.c:			CERROR("invalid msg %p: no ptlrpc body!\n", msg);
lustre-release/lustre/ptlrpc/pack_generic.c:		CERROR("incorrect message magic: %08x\n", msg->lm_magic);
lustre-release/lustre/ptlrpc/pack_generic.c:			CERROR("invalid msg %p: no ptlrpc body!\n", msg);
lustre-release/lustre/ptlrpc/pack_generic.c:		CERROR("incorrect message magic: %08x (msg:%p)\n",
lustre-release/lustre/ptlrpc/pack_generic.c:			CERROR("invalid msg %p: no ptlrpc body!\n", msg);
lustre-release/lustre/ptlrpc/pack_generic.c:		CERROR("incorrect message magic: %08x\n", msg->lm_magic);
lustre-release/lustre/ptlrpc/pack_generic.c:			CERROR("invalid msg %p: no ptlrpc body!\n", msg);
lustre-release/lustre/ptlrpc/pack_generic.c:		CERROR("incorrect message magic: %08x\n", msg->lm_magic);
lustre-release/lustre/ptlrpc/pack_generic.c:			CERROR("invalid msg %p: no ptlrpc body!\n", msg);
lustre-release/lustre/ptlrpc/pack_generic.c:		CERROR("incorrect message magic: %08x\n", msg->lm_magic);
lustre-release/lustre/ptlrpc/pack_generic.c:			CERROR("invalid msg %p: no ptlrpc body!\n", msg);
lustre-release/lustre/ptlrpc/pack_generic.c:		CERROR("incorrect message magic: %08x\n", msg->lm_magic);
lustre-release/lustre/ptlrpc/pack_generic.c:			CERROR("invalid msg %p: no ptlrpc body!\n", msg);
lustre-release/lustre/ptlrpc/pack_generic.c:		CERROR("incorrect message magic: %08x\n", msg->lm_magic);
lustre-release/lustre/ptlrpc/pack_generic.c:		CERROR("invalid msg %p: no ptlrpc body!\n", msg);
lustre-release/lustre/ptlrpc/pack_generic.c:			CERROR("invalid msg %p: no ptlrpc body!\n", msg);
lustre-release/lustre/ptlrpc/pack_generic.c:		CERROR("invalid msg magic %08x\n", msg->lm_magic);
lustre-release/lustre/ptlrpc/pack_generic.c:			CERROR("invalid msg %p: no ptlrpc body!\n", msg);
lustre-release/lustre/ptlrpc/pack_generic.c:		CERROR("invalid msg magic %x\n", msg->lm_magic);
lustre-release/lustre/ptlrpc/pack_generic.c:			CERROR("invalid msg %p: no ptlrpc body!\n", msg);
lustre-release/lustre/ptlrpc/pack_generic.c:		CERROR("invalid msg magic %x\n", msg->lm_magic);
lustre-release/lustre/ptlrpc/pack_generic.c:			CERROR("invalid msg %p: no ptlrpc body!\n", msg);
lustre-release/lustre/ptlrpc/pack_generic.c:		CERROR("invalid msg magic %08x\n", msg->lm_magic);
lustre-release/lustre/ptlrpc/pack_generic.c:			CERROR("invalid msg %p: no ptlrpc body!\n", msg);
lustre-release/lustre/ptlrpc/pack_generic.c:		CERROR("incorrect message magic: %08x\n", msg->lm_magic);
lustre-release/lustre/ptlrpc/pack_generic.c:		CERROR("incorrect message magic: %08x\n", msg->lm_magic);
lustre-release/lustre/ptlrpc/pack_generic.c:			CERROR("invalid msg %p: no ptlrpc body!\n", msg);
lustre-release/lustre/ptlrpc/pack_generic.c:		CERROR("incorrect message magic: %08x\n", msg->lm_magic);
lustre-release/lustre/ptlrpc/pack_generic.c:			CERROR("invalid msg %p: no ptlrpc body!\n", msg);
lustre-release/lustre/ptlrpc/pack_generic.c:		CERROR("incorrect message magic: %08x\n", msg->lm_magic);
lustre-release/lustre/ptlrpc/pack_generic.c:		CERROR("incorrect message magic: %08x\n", msg->lm_magic);
lustre-release/lustre/ptlrpc/pack_generic.c:		CERROR("incorrect message magic: %08x\n", msg->lm_magic);
lustre-release/lustre/ptlrpc/pack_generic.c:			CERROR("invalid msg %p: no ptlrpc body!\n", msg);
lustre-release/lustre/ptlrpc/pack_generic.c:		CERROR("incorrect message magic: %08x\n", msg->lm_magic);
lustre-release/lustre/ptlrpc/pack_generic.c:		CERROR("incorrect message magic: %08x\n", msg->lm_magic);
lustre-release/lustre/ptlrpc/pack_generic.c:			CERROR("Invalid magic %#x\n", v1->lmm_magic);
lustre-release/lustre/ptlrpc/pack_generic.c:		CERROR("bad lustre msg magic: %#08X\n",
lustre-release/lustre/quota/qmt_dev.c:		CERROR("%s: can't locate backend osd device: %s\n",
lustre-release/lustre/quota/qmt_dev.c:		CERROR("%s: cannot connect to osd dev %s (%d)\n",
lustre-release/lustre/quota/qmt_dev.c:			CERROR("%s: failed to start rebalance thread (%d)\n",
lustre-release/lustre/quota/qmt_dev.c:		CERROR("%s: failed to create qmt proc entry (%d)\n",
lustre-release/lustre/quota/qmt_dev.c:		CERROR("%s: failed to create master quota directory (%d)\n",
lustre-release/lustre/quota/qsd_lock.c:		CERROR("Can't pack response, rc %d\n", rc);
lustre-release/lustre/quota/qsd_lock.c:		CERROR("%s: invalid global index version %llu\n",
lustre-release/lustre/quota/qsd_lib.c:		CERROR("%s: can't open global index copy "DFID" %ld\n",
lustre-release/lustre/quota/qsd_lib.c:		CERROR("%s: can't open slave index copy "DFID" %ld\n",
lustre-release/lustre/quota/qsd_lib.c:		CERROR("%s: can't allocate site "DFID" %ld\n", qsd->qsd_svname,
lustre-release/lustre/quota/qsd_lib.c:		CERROR("%s: can't add procfs entry for accounting file %d\n",
lustre-release/lustre/quota/qsd_lib.c:		CERROR("%s: can't add procfs entry for global index copy %d\n",
lustre-release/lustre/quota/qsd_lib.c:		CERROR("%s: fail to extract filesystem name\n", svname);
lustre-release/lustre/quota/qsd_lib.c:		CERROR("%s: failed to locate filesystem information\n", svname);
lustre-release/lustre/quota/qsd_lib.c:		CERROR("%s: fail to create quota slave proc entry (%d)\n",
lustre-release/lustre/quota/qsd_lib.c:		CERROR("%s: qsd instance already prepared\n", qsd->qsd_svname);
lustre-release/lustre/quota/qsd_lib.c:		CERROR("%s: failed to create quota slave root dir (%d)\n",
lustre-release/lustre/quota/qsd_lib.c:			CERROR("%s: failed to start reint thread for type %s: rc = %d\n",
lustre-release/lustre/quota/qsd_lib.c:		CERROR("%s: failed to start writeback thread (%d)\n",
lustre-release/lustre/quota/qsd_lib.c:		CERROR("%s: failed to generate ospname (%d)\n",
lustre-release/lustre/quota/qsd_lib.c:		CERROR("%s: fail to get connection to master (%d)\n",
lustre-release/lustre/quota/qsd_lib.c:		CERROR("%s: can't start qsd instance since it wasn't properly "
lustre-release/lustre/quota/qsd_lib.c:		CERROR("%s: qsd instance already started\n", qsd->qsd_svname);
lustre-release/lustre/quota/qmt_lock.c:		CERROR("Can't pack response, rc %d\n", rc);
lustre-release/lustre/quota/qmt_lock.c:		CERROR("%s: invalid intent opcode: %llu\n", qmt->qmt_svname,
lustre-release/lustre/quota/qmt_lock.c:		CERROR("can't extract glb index information from FID "DFID"\n",
lustre-release/lustre/quota/qmt_lock.c:		CERROR("%s: failed to extract lvb from request\n",
lustre-release/lustre/quota/qmt_lock.c:		CERROR("%s: failed to get lock from request!\n",
lustre-release/lustre/quota/qmt_lock.c:		CERROR("%s: failed to get export from lock!\n",
lustre-release/lustre/quota/qmt_lock.c:		CERROR("%s: failed to allocate glimpse lock array (%d)\n",
lustre-release/lustre/quota/qmt_lock.c:			CERROR("%s: failed to notify a lock.\n",
lustre-release/lustre/quota/qmt_lock.c:		CERROR("%s: failed to notify %s of new quota settings\n",
lustre-release/lustre/quota/qmt_lock.c:		CERROR("%s: failed to init env.", qmt->qmt_svname);
lustre-release/lustre/quota/qmt_lock.c:		CERROR("%s: failed to start rebalance thread (%ld)\n",
lustre-release/lustre/quota/lquota_lib.c:			CERROR("%s: failed to set up indexing operations for %s"
lustre-release/lustre/quota/lquota_lib.c:			CERROR("%s: failed to set up indexing operations for %s"
lustre-release/lustre/quota/lquota_lib.c:		CERROR("%s: Unsupported quotactl command: %x\n",
lustre-release/lustre/quota/qsd_writeback.c:			CERROR("%s: discard slv update, ver:%llu local ver:"
lustre-release/lustre/quota/qsd_writeback.c:		CERROR("%s: cannot init env: rc = %d\n", qsd->qsd_svname, rc);
lustre-release/lustre/quota/qsd_writeback.c:		CERROR("fail to start quota update thread: rc = %ld\n",
lustre-release/lustre/quota/qmt_pool.c:		CERROR("%s: failed to create proc entry for pool %s (%d)\n",
lustre-release/lustre/quota/qmt_pool.c:				CERROR("%s: failed to create glb index copy for %s type: rc = %d\n",
lustre-release/lustre/quota/qmt_pool.c:					CERROR("%s: failed to set default grace time for %s type: rc = %d\n",
lustre-release/lustre/quota/qmt_pool.c:					CERROR("%s: failed to set initial version for %s type: rc = %d\n",
lustre-release/lustre/quota/qmt_pool.c:				CERROR("%s: failed to create site for %s type: rc = %d\n",
lustre-release/lustre/quota/qmt_pool.c:				CERROR("%s: failed to scan & count slave indexes for %s type: rc = %d\n",
lustre-release/lustre/quota/qmt_pool.c:		CERROR("%s: failed to create quota slave index file for %s (%d)"
lustre-release/lustre/quota/qsd_handler.c:			CERROR("%s: more than %d qids enforced for a "
lustre-release/lustre/quota/qsd_handler.c:		CERROR("%s: fail to locate lqe for id:%llu, type:%d\n",
lustre-release/lustre/quota/lproc_quota.c:		CERROR("%s: seq_next failed: rc = %d\n",
lustre-release/lustre/quota/lproc_quota.c:		CERROR("%s: failed to get key: rc = %ld\n",
lustre-release/lustre/quota/lproc_quota.c:		CERROR("%s: failed to get rec: rc = %d\n",
lustre-release/lustre/quota/lproc_quota.c:		CERROR("%s: error initializing procfs quota env: rc = %d\n",
lustre-release/lustre/quota/lproc_quota.c:		CERROR("%s: failed to initialize iterator: rc = %ld\n",
lustre-release/lustre/quota/qmt_handler.c:		CERROR("%s: unsupported quotactl command: %d\n",
lustre-release/lustre/quota/qmt_handler.c:		CERROR("%s: malformed quota request with conflicting flags set "
lustre-release/lustre/quota/qsd_config.c:		CERROR("failed to find quota filesystem information for %s\n",
lustre-release/lustre/quota/lquota_disk.c:			CERROR("Failed to extract extract filesystem "
lustre-release/lustre/quota/lquota_disk.c:		CERROR("%s: failed to look-up/create idx file "DFID" rc:%ld "
lustre-release/lustre/quota/lquota_disk.c:			CERROR("%s: failed to setup index operations for "DFID
lustre-release/lustre/quota/lquota_disk.c:			CERROR("%s: failed to setup slave index operations for "
lustre-release/lustre/quota/lquota_disk.c:			CERROR("%s: failed to setup index operations for "DFID
lustre-release/lustre/quota/qsd_entry.c:		CERROR("%s: failed to update %s index copy for id %llu, : rc = %d\n",
lustre-release/lustre/quota/qsd_reint.c:		CERROR("%s: invalid record size (%d) for %s index\n",
lustre-release/lustre/quota/qsd_reint.c:				CERROR("%s: invalid magic (%x != %x) for page "
lustre-release/lustre/quota/qsd_reint.c:		CERROR("%s: invalid magic in index transfer %x != %x\n",
lustre-release/lustre/quota/qsd_reint.c:		CERROR("%s: invalid key size reported on index transfer for "
lustre-release/lustre/quota/qsd_reint.c:		CERROR("%s: master returned more pages than expected, %u > %u"
lustre-release/lustre/quota/qsd_reint.c:			CERROR("%s: write version %llu to "DFID" failed : rc = %d\n",
lustre-release/lustre/quota/qsd_reint.c:		CERROR("%s: Delaying reintegration for qtype:%d until pending "
lustre-release/lustre/quota/lquota_entry.c:	CERROR("Should not have any item left!\n");
lustre-release/lustre/quota/lquota_entry.c:		CERROR("Fail to allocate lqe for id:%llu, "
lustre-release/lustre/obdecho/echo_client.c:		CERROR("Cannot initialize site for echo client(%d)\n", rc);
lustre-release/lustre/obdecho/echo_client.c:			CERROR("%s: create md echo root fid failed: rc = %d\n",
lustre-release/lustre/obdecho/echo_client.c:		CERROR("Can not find tgt device %s\n",
lustre-release/lustre/obdecho/echo_client.c:			CERROR("%s is not lu device type!\n",
lustre-release/lustre/obdecho/echo_client.c:			CERROR("%s no type name for echo %s setup\n",
lustre-release/lustre/obdecho/echo_client.c:			CERROR("%s is not lu device type!\n",
lustre-release/lustre/obdecho/echo_client.c:			CERROR("echo fid init error %d\n", rc);
lustre-release/lustre/obdecho/echo_client.c:			CERROR("%s: get root error: rc = %d\n",
lustre-release/lustre/obdecho/echo_client.c:		CERROR(
lustre-release/lustre/obdecho/echo_client.c:			CERROR("Cleanup obd device %s error(%d)\n",
lustre-release/lustre/obdecho/echo_client.c:		CERROR(
lustre-release/lustre/obdecho/echo_client.c:		CERROR("Can not find the child "DFID": rc = %ld\n", PFID(fid),
lustre-release/lustre/obdecho/echo_client.c:		CERROR("Can not locate the child "DFID"\n", PFID(fid));
lustre-release/lustre/obdecho/echo_client.c:		CERROR("Can not create child "DFID": rc = %d\n", PFID(fid), rc);
lustre-release/lustre/obdecho/echo_client.c:		CERROR("Can not getattr child "DFID": rc = %d\n",
lustre-release/lustre/obdecho/echo_client.c:		CERROR("Invalid mds md magic %x "DFID": rc = %d\n",
lustre-release/lustre/obdecho/echo_client.c:		CERROR("Can not find the parent "DFID": rc = %d\n",
lustre-release/lustre/obdecho/echo_client.c:			CERROR("Can not create child %s: rc = %d\n", tmp_name,
lustre-release/lustre/obdecho/echo_client.c:		CERROR("lookup %s: rc = %d\n", lname->ln_name, rc);
lustre-release/lustre/obdecho/echo_client.c:			CERROR("Can't find child %s: rc = %d\n",
lustre-release/lustre/obdecho/echo_client.c:			CERROR("Can not locate the child %s\n", lname->ln_name);
lustre-release/lustre/obdecho/echo_client.c:			CERROR("Can not setattr child "DFID": rc = %d\n",
lustre-release/lustre/obdecho/echo_client.c:			CERROR("Can't find child %s: rc = %ld\n",
lustre-release/lustre/obdecho/echo_client.c:			CERROR("Can not locate the child %s\n", lname->ln_name);
lustre-release/lustre/obdecho/echo_client.c:			CERROR("Can not getattr child "DFID": rc = %d\n",
lustre-release/lustre/obdecho/echo_client.c:			CERROR("Can not lookup child %s: rc = %d\n", name, rc);
lustre-release/lustre/obdecho/echo_client.c:		CERROR("Can't find child %s: rc = %ld\n", lname->ln_name,
lustre-release/lustre/obdecho/echo_client.c:		CERROR("Can not locate the child %s\n", lname->ln_name);
lustre-release/lustre/obdecho/echo_client.c:		CERROR("Can not destroy remote object %s: rc = %d\n",
lustre-release/lustre/obdecho/echo_client.c:		CERROR("Can not unlink child %s: rc = %d\n",
lustre-release/lustre/obdecho/echo_client.c:			CERROR("Can not unlink child %s: rc = %d\n", name, rc);
lustre-release/lustre/obdecho/echo_client.c:		CERROR("Can not find the parent "DFID": rc = %ld\n",
lustre-release/lustre/obdecho/echo_client.c:			CERROR("lookup %s under parent "DFID": rc = %d\n",
lustre-release/lustre/obdecho/echo_client.c:		CERROR("MD echo client is not being initialized properly\n");
lustre-release/lustre/obdecho/echo_client.c:		CERROR("Only support MDD layer right now!\n");
lustre-release/lustre/obdecho/echo_client.c:		CERROR("Can not resolve the path %s: rc = %ld\n", path,
lustre-release/lustre/obdecho/echo_client.c:		CERROR("unknown command %d\n", command);
lustre-release/lustre/obdecho/echo_client.c:		CERROR("invalid oid "DOSTID"\n", POSTID(&oa->o_oi));
lustre-release/lustre/obdecho/echo_client.c:		CERROR("Cannot create objects: rc = %d\n", rc);
lustre-release/lustre/obdecho/echo_client.c:		CERROR("create object failed with: rc = %d\n", rc);
lustre-release/lustre/obdecho/echo_client.c:		CERROR("invalid oid "DOSTID"\n", POSTID(&oa->o_oi));
lustre-release/lustre/obdecho/echo_client.c:		CERROR("%s: echo client drop an object failed: rc = %d\n",
lustre-release/lustre/obdecho/echo_client.c:			CERROR("Error in echo object %#llx\n", id);
lustre-release/lustre/obdecho/echo_client.c:			CERROR("%s: Can not alloc seq: rc = %d\n",
lustre-release/lustre/obdecho/echo_client.c:		CERROR("echo_ioctl(): unrecognised ioctl %#x\n", cmd);
lustre-release/lustre/obdecho/echo_client.c:		CERROR("requires a TARGET OBD name\n");
lustre-release/lustre/obdecho/echo_client.c:		CERROR("device not attached or not set up (%s)\n",
lustre-release/lustre/obdecho/echo_client.c:		CERROR(
lustre-release/lustre/obdecho/echo_client.c:		CERROR("Can't alloc ocd connecting to %s\n",
lustre-release/lustre/obdecho/echo_client.c:		CERROR("fail to connect to device %s\n",
lustre-release/lustre/obdecho/echo_client.c:		CERROR(
lustre-release/lustre/obdecho/echo_client.c:		CERROR("still has clients!\n");
lustre-release/lustre/obdecho/echo_client.c:		CERROR("fail to disconnect device: %d\n", rc);
lustre-release/lustre/obdecho/echo.c:		CERROR("can't connect %d\n", rc);
lustre-release/lustre/obdecho/echo.c:		CERROR("Unexpected block size %d\n", len);
lustre-release/lustre/obdecho/echo.c:		CERROR("Unexpected block size %d\n", len);
lustre-release/lustre/obdecho/echo.c:				CERROR("can't get page for id " DOSTID"\n",
lustre-release/lustre/obdecho/echo.c:			CERROR("null page objid %llu:%p, buf %d/%d\n",
lustre-release/lustre/obdecho/echo.c:	CERROR("cleaning up %u pages (%d obdos)\n", *pages, objcount);
lustre-release/lustre/obdecho/echo.c:		CERROR("NULL res niobuf with niocount %d\n", niocount);
lustre-release/lustre/obdecho/echo.c:	CERROR("cleaning up %d pages (%d obdos)\n",
lustre-release/lustre/obdecho/echo.c:		CERROR("%s: no type is set in obdo!\n",
lustre-release/lustre/obdecho/echo.c:		CERROR("%s: invalid o_valid in obdo: %#llx\n",
lustre-release/lustre/obdecho/echo.c:		CERROR("%s: invalid seq %#llx\n",
lustre-release/lustre/obdecho/echo.c:		CERROR("%s: obdo missing FLID valid flag: %#llx\n",
lustre-release/lustre/obdecho/echo.c:		CERROR("%s: bad objid to destroy: "DOSTID"\n",
lustre-release/lustre/obdecho/echo.c:		CERROR("%s: obdo missing FLID valid flag: %#llx\n",
lustre-release/lustre/obdecho/echo.c:		CERROR("%s: obdo missing FLID valid flag: %#llx\n",
lustre-release/lustre/obdecho/echo.c:		CERROR("Cannot find obd with name %s\n", dev);
lustre-release/lustre/obdecho/echo.c:		CERROR("%d prep/commitrw pages leaked\n", leaked);
lustre-release/lustre/lmv/lmv_obd.c:                CERROR("unexpected notification of %s %s!\n",
lustre-release/lustre/lmv/lmv_obd.c:                        CERROR("%sactivation of %s failed: %d\n",
lustre-release/lustre/lmv/lmv_obd.c:		CERROR("class_connection() returned %d\n", rc);
lustre-release/lustre/lmv/lmv_obd.c:		CERROR("%s: cannot create /sys/fs/lustre/%s/%s/target_obds\n",
lustre-release/lustre/lmv/lmv_obd.c:			CERROR("%s: obd_init_ea_size() failed on MDT target %d:"
lustre-release/lustre/lmv/lmv_obd.c:		CERROR("target %s not attached\n", tgt->ltd_uuid.uuid);
lustre-release/lustre/lmv/lmv_obd.c:		CERROR("target %s is not set up\n", tgt->ltd_uuid.uuid);
lustre-release/lustre/lmv/lmv_obd.c:                CERROR("target %s connect error %d\n", tgt->ltd_uuid.uuid, rc);
lustre-release/lustre/lmv/lmv_obd.c:		CERROR("target %s register_observer error %d\n",
lustre-release/lustre/lmv/lmv_obd.c:		CERROR("%s: Target %s not attached: rc = %d\n",
lustre-release/lustre/lmv/lmv_obd.c:		CERROR("%s: no targets configured: rc = -EINVAL\n",
lustre-release/lustre/lmv/lmv_obd.c:		CERROR("%s: no target configured for index 0: rc = -EINVAL.\n",
lustre-release/lustre/lmv/lmv_obd.c:		CERROR("Can't finanize fids factory\n");
lustre-release/lustre/lmv/lmv_obd.c:                        CERROR("Target %s disconnect error %d\n",
lustre-release/lustre/lmv/lmv_obd.c:		CERROR("%s: invalid FID "DFID": rc = %d\n",
lustre-release/lustre/lmv/lmv_obd.c:				CERROR("%s: iocontrol MDC %s on MDT"
lustre-release/lustre/lmv/lmv_obd.c:					CERROR("error: iocontrol MDC %s on MDT"
lustre-release/lustre/lmv/lmv_obd.c:		CERROR("LMV setup requires a descriptor\n");
lustre-release/lustre/lmv/lmv_obd.c:		CERROR("Lmv descriptor size wrong: %d > %d\n",
lustre-release/lustre/lmv/lmv_obd.c:		CERROR("Can't init FLD, err %d\n", rc);
lustre-release/lustre/lmv/lmv_obd.c:		CERROR("Unknown command: %d\n", lcfg->lcfg_command);
lustre-release/lustre/lmv/lmv_obd.c:			CERROR("%s: can't stat MDS #%d: rc = %d\n",
lustre-release/lustre/lmv/lmv_obd.c:		CERROR("%s: invalid lmv magic %x: rc = %d\n",
lustre-release/lustre/lmv/lmv_obd.c:		CERROR("%s: unrecognized magic %x\n", exp->exp_obd->obd_name,
lustre-release/lustre/lmv/lmv_obd.c:		CERROR("master lmv inactive\n");
lustre-release/lustre/lmv/lmv_obd.c:			CERROR("getquota on mdt %d failed. %d\n",
lustre-release/lustre/lmv/lmv_fld.c:		CERROR("%s: invalid FID "DFID": rc = %d\n", obd->obd_name,
lustre-release/lustre/lmv/lmv_fld.c:		CERROR("%s: Error while looking for mds number. Seq %#llx: rc = %d\n",
lustre-release/lustre/lmv/lmv_fld.c:		CERROR("%s: FLD lookup got invalid mds #%x (max: %x) for fid="DFID": rc = %d\n",
lustre-release/lustre/obdclass/lu_object.c:		CERROR("failed to create lu_site hash with bits: %lu\n", bits);
lustre-release/lustre/obdclass/lu_object.c:                        CERROR("[%d]: %p %x (%p,%p,%p) %d %d \"%s\"@%p\n",
lustre-release/lustre/obdclass/upcall_cache.c:				CERROR("fail to alloc entry\n");
lustre-release/lustre/obdclass/upcall_cache.c:			CERROR("acquire for key %llu: error %d\n",
lustre-release/lustre/obdclass/upcall_cache.c:		CERROR("%s: found a stale entry %p (key %llu) in ioctl\n",
lustre-release/lustre/obdclass/llog_obd.c:		CERROR("Error %d while cleaning up ctxt %p\n",
lustre-release/lustre/obdclass/llog_obd.c:		CERROR("%s: ctxt %d lop_setup=%p failed: rc = %d\n",
lustre-release/lustre/obdclass/obd_config.c:			CERROR("Unbalanced quota in parameters: \"%s\"\n",
lustre-release/lustre/obdclass/obd_config.c:		CERROR("No type passed!\n");
lustre-release/lustre/obdclass/obd_config.c:		CERROR("No name passed!\n");
lustre-release/lustre/obdclass/obd_config.c:		CERROR("No UUID passed!\n");
lustre-release/lustre/obdclass/obd_config.c:		CERROR("%s: uuid must be < %d bytes long\n",
lustre-release/lustre/obdclass/obd_config.c:		CERROR("Cannot create device %s of type %s : %d\n",
lustre-release/lustre/obdclass/obd_config.c:		CERROR("Device %d not attached\n", obd->obd_minor);
lustre-release/lustre/obdclass/obd_config.c:		CERROR("Device %d already setup (type %s)\n",
lustre-release/lustre/obdclass/obd_config.c:		CERROR("Device %d setup in progress (type %s)\n",
lustre-release/lustre/obdclass/obd_config.c:	CERROR("setup %s failed (%d)\n", obd->obd_name, err);
lustre-release/lustre/obdclass/obd_config.c:		CERROR("OBD device %d still set up\n", obd->obd_minor);
lustre-release/lustre/obdclass/obd_config.c:		CERROR("OBD device %d not attached\n", obd->obd_minor);
lustre-release/lustre/obdclass/obd_config.c:		CERROR("Device %d not setup\n", obd->obd_minor);
lustre-release/lustre/obdclass/obd_config.c:		CERROR("OBD %d already stopping\n", obd->obd_minor);
lustre-release/lustre/obdclass/obd_config.c:				CERROR("Unrecognised flag '%c'\n", *flag);
lustre-release/lustre/obdclass/obd_config.c:		CERROR("Precleanup %s returned %d\n",
lustre-release/lustre/obdclass/obd_config.c:		CERROR("invalid conn_uuid\n");
lustre-release/lustre/obdclass/obd_config.c:		CERROR("can't add connection on non-client dev\n");
lustre-release/lustre/obdclass/obd_config.c:		CERROR("try to add conn on immature client dev\n");
lustre-release/lustre/obdclass/obd_config.c:		CERROR("invalid conn_uuid\n");
lustre-release/lustre/obdclass/obd_config.c:		CERROR("can't del connection on non-client dev\n");
lustre-release/lustre/obdclass/obd_config.c:		CERROR("try to del conn on immature client dev\n");
lustre-release/lustre/obdclass/obd_config.c:		CERROR("Unsupported upcall %s\n", upcall);
lustre-release/lustre/obdclass/obd_config.c:		CERROR("lctl: error invoking upcall %s %s %s: rc = %d; "
lustre-release/lustre/obdclass/obd_config.c:			CERROR("this lcfg command requires a device name\n");
lustre-release/lustre/obdclass/obd_config.c:			CERROR("no device for: %s\n",
lustre-release/lustre/obdclass/obd_config.c:			CERROR("%s: Cannot find LOV by %s name, rc = %d\n",
lustre-release/lustre/obdclass/obd_config.c:		CERROR("Unknown command: %d\n", lcfg->lcfg_command);
lustre-release/lustre/obdclass/obd_config.c:			CERROR("%s: can't parse param '%s' (missing '=')\n",
lustre-release/lustre/obdclass/obd_config.c:				CERROR("%s: failed to send uevent %s\n",
lustre-release/lustre/obdclass/obd_config.c:		CERROR("Unknown llog record type %#x encountered\n",
lustre-release/lustre/obdclass/obd_config.c:		CERROR("%s: cfg command failed: rc = %d\n",
lustre-release/lustre/obdclass/obd_config.c:		CERROR("empty cleanup\n");
lustre-release/lustre/obdclass/obd_config.c:		CERROR("cleanup failed %d: %s\n", rc, obd->obd_name);
lustre-release/lustre/obdclass/obd_config.c:		CERROR("detach failed %d: %s\n", rc, obd->obd_name);
lustre-release/lustre/obdclass/class_obd.c:                CERROR("No name passed,!\n");
lustre-release/lustre/obdclass/class_obd.c:                CERROR("Name not nul terminated!\n");
lustre-release/lustre/obdclass/class_obd.c:		CERROR("OBD ioctl: ioc_len larger than 1<<30\n");
lustre-release/lustre/obdclass/class_obd.c:		CERROR("OBD ioctl: ioc_inllen1 larger than 1<<30\n");
lustre-release/lustre/obdclass/class_obd.c:		CERROR("OBD ioctl: ioc_inllen2 larger than 1<<30\n");
lustre-release/lustre/obdclass/class_obd.c:		CERROR("OBD ioctl: ioc_inllen3 larger than 1<<30\n");
lustre-release/lustre/obdclass/class_obd.c:		CERROR("OBD ioctl: ioc_inllen4 larger than 1<<30\n");
lustre-release/lustre/obdclass/class_obd.c:		CERROR("OBD ioctl: inlbuf1 pointer but 0 length\n");
lustre-release/lustre/obdclass/class_obd.c:		CERROR("OBD ioctl: inlbuf2 pointer but 0 length\n");
lustre-release/lustre/obdclass/class_obd.c:		CERROR("OBD ioctl: inlbuf3 pointer but 0 length\n");
lustre-release/lustre/obdclass/class_obd.c:		CERROR("OBD ioctl: inlbuf4 pointer but 0 length\n");
lustre-release/lustre/obdclass/class_obd.c:		CERROR("OBD ioctl: pbuf1 pointer but 0 length\n");
lustre-release/lustre/obdclass/class_obd.c:		CERROR("OBD ioctl: pbuf2 pointer but 0 length\n");
lustre-release/lustre/obdclass/class_obd.c:		CERROR("OBD ioctl: plen1 set but NULL pointer\n");
lustre-release/lustre/obdclass/class_obd.c:		CERROR("OBD ioctl: plen2 set but NULL pointer\n");
lustre-release/lustre/obdclass/class_obd.c:		CERROR("OBD ioctl: packlen exceeds ioc_len (%d > %d)\n",
lustre-release/lustre/obdclass/class_obd.c:		CERROR("Version mismatch kernel (%x) vs application (%x)\n",
lustre-release/lustre/obdclass/class_obd.c:		CERROR("User buffer len %d exceeds %d max buffer\n",
lustre-release/lustre/obdclass/class_obd.c:		CERROR("User buffer too small for ioctl (%d)\n", hdr.ioc_len);
lustre-release/lustre/obdclass/class_obd.c:		CERROR("Cannot allocate control buffer of len %d\n",
lustre-release/lustre/obdclass/class_obd.c:		CERROR("ioctl not correctly formatted\n");
lustre-release/lustre/obdclass/class_obd.c:		CERROR("OBD ioctl: data error\n");
lustre-release/lustre/obdclass/class_obd.c:                        CERROR("No config buffer passed!\n");
lustre-release/lustre/obdclass/class_obd.c:			CERROR("No buffer passed in ioctl\n");
lustre-release/lustre/obdclass/class_obd.c:			CERROR("ioctl buffer too small to hold version\n");
lustre-release/lustre/obdclass/class_obd.c:                        CERROR("No UUID passed!\n");
lustre-release/lustre/obdclass/class_obd.c:                        CERROR("UUID not NUL terminated!\n");
lustre-release/lustre/obdclass/class_obd.c:                        CERROR("No buffer passed in ioctl\n");
lustre-release/lustre/obdclass/class_obd.c:                        CERROR("ioctl buffer too small to hold version\n");
lustre-release/lustre/obdclass/class_obd.c:                CERROR("OBD ioctl: No device\n");
lustre-release/lustre/obdclass/class_obd.c:                CERROR("OBD ioctl : No Device %d\n", data->ioc_dev);
lustre-release/lustre/obdclass/class_obd.c:                CERROR("OBD ioctl: device not setup %d \n", data->ioc_dev);
lustre-release/lustre/obdclass/class_obd.c:                        CERROR("Device %d not attached\n", obd->obd_minor);
lustre-release/lustre/obdclass/class_obd.c:			CERROR("string_helper: size %llu != result %llu\n",\
lustre-release/lustre/obdclass/class_obd.c:		CERROR("__u64 %#llx(%d) != 0xffffffffffffffff\n",
lustre-release/lustre/obdclass/class_obd.c:		CERROR("__u64 %#llx(%d) != 0xffffffffffffffff\n",
lustre-release/lustre/obdclass/class_obd.c:		CERROR("__u64 %#llx(%d) != 0xffffffffffffffff\n",
lustre-release/lustre/obdclass/class_obd.c:		CERROR("do_div(%#llx,256) != %llu\n", u64val, u64val & 255);
lustre-release/lustre/obdclass/class_obd.c:		CERROR("do_div(%#llx,256) %llu != %llu\n",
lustre-release/lustre/obdclass/class_obd.c:		CERROR("string_helpers: format should be number then units\n");
lustre-release/lustre/obdclass/class_obd.c:		CERROR("string_helpers: invalid units should be rejected\n");
lustre-release/lustre/obdclass/class_obd.c:		CERROR("string_helpers: number string with 'B' and '.' should be invalid\n");
lustre-release/lustre/obdclass/class_obd.c:		CERROR("string_helpers: Failed to detect overflow\n");
lustre-release/lustre/obdclass/class_obd.c:		CERROR("string_helpers: Failed to detect overflow\n");
lustre-release/lustre/obdclass/class_obd.c:		CERROR("kmalloc of 'obd_memory' failed\n");
lustre-release/lustre/obdclass/class_obd.c:		CERROR("cannot register OBD miscdevice: err = %d\n", err);
lustre-release/lustre/obdclass/genops.c:                CERROR("obd %p: namespace %p was not properly cleaned up (obd_force=%d)!\n",
lustre-release/lustre/obdclass/genops.c:			CERROR("%s: can't create compat proc entry: %d\n",
lustre-release/lustre/obdclass/genops.c:                CERROR("unknown obd type\n");
lustre-release/lustre/obdclass/genops.c:		CERROR("type %s has refcount (%d)\n", name,
lustre-release/lustre/obdclass/genops.c:                CERROR("name/uuid must be < %u bytes long\n", MAX_OBD_NAME);
lustre-release/lustre/obdclass/genops.c:                CERROR("OBD: unknown type: %s\n", type_name);
lustre-release/lustre/obdclass/genops.c:			CERROR("Cleanup %s returned %d\n",
lustre-release/lustre/obdclass/genops.c:			CERROR("%s: already exists, won't add\n",
lustre-release/lustre/obdclass/genops.c:			CERROR("%s: all %u/%u devices used, increase "
lustre-release/lustre/obdclass/genops.c:                CERROR("disconnecting export %p failed: %d\n", exp, rc);
lustre-release/lustre/obdclass/genops.c:                CERROR("%s: can't evict myself\n", obd->obd_name);
lustre-release/lustre/obdclass/genops.c:                CERROR("%s: can't disconnect %s: no exports found\n",
lustre-release/lustre/obdclass/genops.c:			CERROR("%s: cannot set max_rpcs_in_flight to 1 "
lustre-release/lustre/obdclass/genops.c:		CERROR("%s: can't set max_mod_rpcs_in_flight to a value (%hu) "
lustre-release/lustre/obdclass/genops.c:		CERROR("%s: can't set max_mod_rpcs_in_flight to a value (%hu) "
lustre-release/lustre/obdclass/cl_io.c:        CERROR("Canceling ongoing page trasmission\n");
lustre-release/lustre/obdclass/cl_io.c:		CERROR("IO failed: %d, still wait for %d remaining entries\n",
lustre-release/lustre/obdclass/integrity.c:			CERROR("%s: unexpected used guard number of DIF %u/%u, "
lustre-release/lustre/obdclass/integrity.c:		CERROR("%s: unable to initialize checksum hash %s: rc = %d\n",
lustre-release/lustre/obdclass/lustre_handles.c:		CERROR("removing an already-removed handle (%#llx)\n",
lustre-release/lustre/obdclass/lustre_handles.c:			CERROR("force clean handle %#llx addr %p owner %p\n",
lustre-release/lustre/obdclass/lustre_handles.c:		CERROR("handle_count at cleanup: %d\n", count);
lustre-release/lustre/obdclass/lu_ref.c:	CERROR("lu_ref: %p %d %d %s:%d\n",
lustre-release/lustre/obdclass/lu_ref.c:		CERROR("     link: %s %p\n", link->ll_scope, link->ll_source);
lustre-release/lustre/obdclass/kernelcomm.c:		CERROR("KernelComm: bad magic %x\n", kuch->kuc_magic);
lustre-release/lustre/obdclass/llog_osd.c:		CERROR("%s: error writing padding record: rc = %d\n",
lustre-release/lustre/obdclass/llog_osd.c:		CERROR("%s: error reading "DFID" log header size %d: rc = %d\n",
lustre-release/lustre/obdclass/llog_osd.c:		CERROR("%s: bad log %s "DFID" header magic: %#x "
lustre-release/lustre/obdclass/llog_osd.c:		CERROR("%s: incorrectly sized log %s "DFID" header: "
lustre-release/lustre/obdclass/llog_osd.c:		CERROR("%s: incorrectly sized log %s "DFID" tailer: "
lustre-release/lustre/obdclass/llog_osd.c:			CERROR("%s: modify unset record %u\n",
lustre-release/lustre/obdclass/llog_osd.c:			CERROR("%s: modify index mismatch %d %u\n",
lustre-release/lustre/obdclass/llog_osd.c:				CERROR("%s: modify index mismatch %d %d\n",
lustre-release/lustre/obdclass/llog_osd.c:			CERROR("%s: can't get record offset, idx:%d, "
lustre-release/lustre/obdclass/llog_osd.c:		CERROR("%s: index %u already set in log bitmap\n",
lustre-release/lustre/obdclass/llog_osd.c:			CERROR("%s: can't read llog block from log "DFID
lustre-release/lustre/obdclass/llog_osd.c:			CERROR("%s: invalid llog block at log id "DFID":%x "
lustre-release/lustre/obdclass/llog_osd.c:			CERROR("%s: invalid llog tail at log id "DFID":%x "
lustre-release/lustre/obdclass/llog_osd.c:			CERROR("%s: invalid llog tail at log id "DFID":%x "
lustre-release/lustre/obdclass/llog_osd.c:			CERROR("%s: missed desired record? %u > %u\n",
lustre-release/lustre/obdclass/llog_osd.c:			CERROR("%s: can't read llog block from log "DFID
lustre-release/lustre/obdclass/llog_osd.c:			CERROR("%s: invalid llog block at log id "DFID":%x "
lustre-release/lustre/obdclass/llog_osd.c:			CERROR("%s: invalid llog tail at log id "DFID":%x "
lustre-release/lustre/obdclass/llog_osd.c:			CERROR("%s: missed desired record? %u > %u\n",
lustre-release/lustre/obdclass/llog_osd.c:			CERROR("%s: can't declare named llog %s: rc = %d\n",
lustre-release/lustre/obdclass/llog_osd.c:			CERROR("%s: can't create named llog %s: rc = %d\n",
lustre-release/lustre/obdclass/llog_osd.c:			CERROR("%s: can't remove llog %s: rc = %d\n",
lustre-release/lustre/obdclass/llog_osd.c:		CERROR("%s: CATALOGS is not a regular file!: mode = %o\n",
lustre-release/lustre/obdclass/llog_osd.c:		CERROR("%s: error reading CATALOGS: rc = %d\n",
lustre-release/lustre/obdclass/llog_osd.c:		CERROR("%s: CATALOGS is not a regular file!: mode = %o\n",
lustre-release/lustre/obdclass/lprocfs_status_server.c:		CERROR("LdebugFS: Could not create symbolic link from %s to %s\n",
lustre-release/lustre/obdclass/lprocfs_status_server.c:		CERROR("%s: cannot create proc entry for export %s: rc = %d\n",
lustre-release/lustre/obdclass/lprocfs_jobstats.c:	CERROR("should not have any items\n");
lustre-release/lustre/obdclass/lprocfs_jobstats.c:		CERROR("Invalid jobid size (%lu), expect(%d)\n",
lustre-release/lustre/obdclass/lprocfs_jobstats.c:		CERROR("%s: invalid device type %s for job stats: rc = %d\n",
lustre-release/lustre/obdclass/llog_cat.c:		CERROR("%s: can't create new plain llog in catalog: rc = %d\n",
lustre-release/lustre/obdclass/llog_cat.c:		CERROR("%s: error opening log id "DFID":%x: rc = %d\n",
lustre-release/lustre/obdclass/llog_cat.c:				CERROR("%s: failure destroying log during "
lustre-release/lustre/obdclass/llog_cat.c:		CERROR("%s: next log does not exist!\n",
lustre-release/lustre/obdclass/llog_cat.c:		CERROR("%s: error on 2nd llog: rc = %d\n",
lustre-release/lustre/obdclass/llog_cat.c:			CERROR("%s: fail to cancel catalog record: rc = %d\n",
lustre-release/lustre/obdclass/llog_cat.c:		CERROR("%s: fail to cancel %d llog-records: rc = %d\n",
lustre-release/lustre/obdclass/llog_cat.c:		CERROR("%s: fail to cancel %d of %d llog-records: rc = %d\n",
lustre-release/lustre/obdclass/local_storage.c:		CERROR("%s: wrong content of seq-%#llx-lastid file, magic %x\n",
lustre-release/lustre/obdclass/local_storage.c:		CERROR("%s: failed to read seq-%#llx-lastid: rc = %d\n",
lustre-release/lustre/obdclass/local_storage.c:			CERROR("%s: bad oid %llu is read from LAST_ID\n",
lustre-release/lustre/obdclass/obd_mount_server.c:		CERROR("Already registered %s\n", name);
lustre-release/lustre/obdclass/obd_mount_server.c:		CERROR("%s not registered\n", name);
lustre-release/lustre/obdclass/obd_mount_server.c:		CERROR("Can't find mount for %s\n", name);
lustre-release/lustre/obdclass/obd_mount_server.c:		CERROR("Can't find mount for %s\n", name);
lustre-release/lustre/obdclass/obd_mount_server.c:		CERROR("can't set_fs %d\n", rc);
lustre-release/lustre/obdclass/obd_mount_server.c:		CERROR("%s: failed to get fsname from tgt_name: rc = %d\n",
lustre-release/lustre/obdclass/obd_mount_server.c:		CERROR("%s: invalid tgt_name name!\n", tgt_name);
lustre-release/lustre/obdclass/obd_mount_server.c:		CERROR("%s is not an OST or MDT target!\n", tgt_name);
lustre-release/lustre/obdclass/obd_mount_server.c:		CERROR("%s: failed to get fsname: rc = %d\n",
lustre-release/lustre/obdclass/obd_mount_server.c:		CERROR("%s: Too long lwp name %s, max_size is %d\n",
lustre-release/lustre/obdclass/obd_mount_server.c:		CERROR("%s: connect failed: rc = %d\n", lwp->obd_name, rc);
lustre-release/lustre/obdclass/obd_mount_server.c:		CERROR("%s: Can't add uuid: rc =%d\n", lsi->lsi_svname, rc);
lustre-release/lustre/obdclass/obd_mount_server.c:		CERROR("%s: failed to generate lwp name: rc = %d\n",
lustre-release/lustre/obdclass/obd_mount_server.c:		CERROR("%s: setup up failed: rc %d\n", lwpname, rc);
lustre-release/lustre/obdclass/obd_mount_server.c:		CERROR("%s: connect failed: rc = %d\n", lwpname, rc);
lustre-release/lustre/obdclass/obd_mount_server.c:		CERROR("%s: failed to generate lwp name: rc = %d\n",
lustre-release/lustre/obdclass/obd_mount_server.c:		CERROR("%s: can't find lwp device.\n", lsi->lsi_svname);
lustre-release/lustre/obdclass/obd_mount_server.c:		CERROR("%s: can't add conn: rc = %d\n", lwpname, rc);
lustre-release/lustre/obdclass/obd_mount_server.c:		CERROR("Unknown llog record type %#x encountered\n",
lustre-release/lustre/obdclass/obd_mount_server.c:				CERROR("%s: Fail to add uuid, rc:%d\n",
lustre-release/lustre/obdclass/obd_mount_server.c:			CERROR("%s: failed to get fsname from svname: "
lustre-release/lustre/obdclass/obd_mount_server.c:			CERROR("%s: fail to disconnect LWP: rc = %d\n",
lustre-release/lustre/obdclass/obd_mount_server.c:			CERROR("%s: fail to stop LWP: rc = %d\n",
lustre-release/lustre/obdclass/obd_mount_server.c:		CERROR("%s: failed to get fsname from svname: rc = %d\n",
lustre-release/lustre/obdclass/obd_mount_server.c:		CERROR("Failed to get NID for server %s, please check whether "
lustre-release/lustre/obdclass/obd_mount_server.c:			CERROR("failed to start %s: %d\n",
lustre-release/lustre/obdclass/obd_mount_server.c:		CERROR("failed to start server %s: %d\n",
lustre-release/lustre/obdclass/obd_mount_server.c:		CERROR("no server named %s was started\n", lsi->lsi_svname);
lustre-release/lustre/obdclass/obd_mount_server.c:			CERROR("%s: failed to start LWP: %d\n",
lustre-release/lustre/obdclass/obd_mount_server.c:			CERROR("no obd %s\n", lsi->lsi_svname);
lustre-release/lustre/obdclass/obd_mount_server.c:			CERROR("%s: failed to stop lwp!\n", tmpname);
lustre-release/lustre/obdclass/obd_mount_server.c:		CERROR("Can't make root inode\n");
lustre-release/lustre/obdclass/obd_mount_server.c:		CERROR("%s: can't make root dentry\n", sb->s_id);
lustre-release/lustre/obdclass/obd_mount_server.c:		CERROR("Unable to start osd on %s: %d\n",
lustre-release/lustre/obdclass/obd_mount_server.c:			CERROR("Unable to start targets: %d\n", rc);
lustre-release/lustre/obdclass/obd_mount.c:		CERROR("%s attach error %d\n", obdname, rc);
lustre-release/lustre/obdclass/obd_mount.c:		CERROR("%s setup error %d\n", obdname, rc);
lustre-release/lustre/obdclass/obd_mount.c:		CERROR("No valid MGS NIDs found.\n");
lustre-release/lustre/obdclass/obd_mount.c:				CERROR("No MGS NIDs given.\n");
lustre-release/lustre/obdclass/obd_mount.c:		CERROR("No valid MGS NIDs found.\n");
lustre-release/lustre/obdclass/obd_mount.c:		CERROR("Can't find mgcobd %s\n", mgcname);
lustre-release/lustre/obdclass/obd_mount.c:		CERROR("connect failed %d\n", rc);
lustre-release/lustre/obdclass/obd_mount.c:			CERROR("del MDC UUID %s failed: rc = %d\n",
lustre-release/lustre/obdclass/obd_mount.c:			CERROR("Can't stop MGC: %d\n", rc);
lustre-release/lustre/obdclass/obd_mount.c:			CERROR("Can't parse server name '%s': rc = %d\n",
lustre-release/lustre/obdclass/obd_mount.c:				CERROR("LNet Dynamic Peer Discovery is enabled "
lustre-release/lustre/obdclass/obd_mount.c:			CERROR(
lustre-release/lustre/obdclass/obd_mount.c:	CERROR("Bad mount options %s\n", options);
lustre-release/lustre/obdclass/obd_mount.c:		CERROR("client-side-only module, cannot handle server mount\n");
lustre-release/lustre/obdclass/obd_mount.c:		CERROR("Unable to mount %s (%d)\n",
lustre-release/lustre/obdclass/obd_mount.c:		CERROR("obdclass: register fstype '%s' failed: rc = %d\n",  \
lustre-release/lustre/obdclass/cl_object.c:                        CERROR("can't init device '%s', %d\n", typename, rc);
lustre-release/lustre/obdclass/cl_object.c:                CERROR("Cannot allocate device: '%s'\n", typename);
lustre-release/lustre/obdclass/obd_sysfs.c:		CERROR("cannot create '/proc/fs/lustre': rc = %d\n", rc);
lustre-release/lustre/obdclass/llog_swab.c:		CERROR("Unknown llog rec type %#x swabbing rec %p\n",
lustre-release/lustre/obdclass/llog_swab.c:		CERROR("not swabbing lustre_cfg version %#x (expecting %#x)\n",
lustre-release/lustre/obdclass/lprocfs_status.c:		CERROR("LprocFS: No memory to create <debugfs> entry %s", name);
lustre-release/lustre/obdclass/lprocfs_status.c:		CERROR("LprocFS: No memory to create /proc entry %s\n",
lustre-release/lustre/obdclass/lprocfs_status.c:		CERROR("LprocFS: Could not create symbolic link from "
lustre-release/lustre/obdclass/lprocfs_status.c:		CERROR("error %d setting up debugfs for %s\n",
lustre-release/lustre/obdclass/lprocfs_status.c:		CERROR("error %d setting up lprocfs for %s\n",rc,obd->obd_name);
lustre-release/lustre/obdclass/lprocfs_status.c:			CERROR("Missing md_stat initializer md_op operation at offset %d. Aborting.\n",
lustre-release/lustre/obdclass/llog.c:			CERROR("Can't cancel index 0 which is header\n");
lustre-release/lustre/obdclass/llog.c:			CERROR("%s: can't destroy empty llog "DFID": rc = %d\n",
lustre-release/lustre/obdclass/llog.c:			CERROR("%s: llog type is %s but initializing %s\n",
lustre-release/lustre/obdclass/llog.c:			CERROR("llog type is not specified!\n");
lustre-release/lustre/obdclass/llog.c:			CERROR("%s: llog uuid mismatch: %s/%s\n",
lustre-release/lustre/obdclass/llog.c:		CERROR("%s: unknown flags: %#x (expected %#x or %#x)\n",
lustre-release/lustre/obdclass/llog.c:				CERROR("%s: "DFID" Invalid record: index %u"
lustre-release/lustre/obdclass/llog.c:			CERROR("%s retry remote llog process\n",
lustre-release/lustre/obdclass/llog.c:			CERROR("%s: Local llog found corrupted #"DOSTID":%x"
lustre-release/lustre/obdclass/llog.c:		CERROR("cannot alloc pointer\n");
lustre-release/lustre/obdclass/llog.c:			CERROR("%s: cannot start thread: rc = %d\n",
lustre-release/lustre/obdclass/llog.c:		CERROR("loghandle is missed\n");
lustre-release/lustre/obdclass/llog.c:		CERROR("loghandle %p with NULL object\n",
lustre-release/lustre/obdclass/llog.c:		CERROR("%s: missed transaction handle\n",
lustre-release/lustre/obdclass/llog.c:		CERROR("%s: loghandle %p with no header\n",
lustre-release/lustre/obdclass/llog.c:			CERROR("%s: failed to open log %s: rc = %d\n",
lustre-release/lustre/obdclass/llog.c:		CERROR("%s: failed to open backup logfile %s: rc = %d\n",
lustre-release/lustre/obdclass/llog.c:		CERROR("%s: backup llog %s to itself (%s), objects %p/%p\n",
lustre-release/lustre/obdclass/llog.c:		CERROR("%s: failed to backup log %s: rc = %d\n",
lustre-release/lustre/obdclass/llog.c:		CERROR("%s: attr_get failed for "DFID": rc = %d\n",
lustre-release/lustre/obdclass/scrub.c:		CERROR("%s: fail to load scrub file: rc = %d\n",
lustre-release/lustre/obdclass/scrub.c:		CERROR("%s: store scrub file: rc = %d\n",
lustre-release/lustre/obdclass/scrub.c:		CERROR("%s: cannot start iteration thread: rc = %d\n",
lustre-release/lustre/obdclass/scrub.c:			CERROR("%s: failed to locate backup dir: rc = %ld\n",
lustre-release/lustre/obdclass/scrub.c:			CERROR("%s: failed to init local storage: rc = %d\n",
lustre-release/lustre/obdclass/llog_ioctl.c:			CERROR("%s: no space to print log records\n",
lustre-release/lustre/obdclass/llog_ioctl.c:			CERROR("invalid record in catalog\n");
lustre-release/lustre/obdclass/llog_ioctl.c:		CERROR("not enough space for print log records\n");
lustre-release/lustre/obdclass/llog_ioctl.c:			CERROR("%s: not enough space for log header info\n",
lustre-release/lustre/obdclass/llog_ioctl.c:		CERROR("%s: Unknown ioctl cmd %#x\n",
lustre-release/lustre/obdclass/llog_test.c:		CERROR("%s: handle->count is %d, but there are %d recs found\n",
lustre-release/lustre/obdclass/llog_test.c:		CERROR("%s: lgh_last_idx is %d (%d in the header), last found %d\n",
lustre-release/lustre/obdclass/llog_test.c:		CERROR("%s: expected %d active recs after write, found %d\n",
lustre-release/lustre/obdclass/llog_test.c:		CERROR("1a: llog_create with name %s failed: %d\n", name, rc);
lustre-release/lustre/obdclass/llog_test.c:		CERROR("1a: can't init llog handle: %d\n", rc);
lustre-release/lustre/obdclass/llog_test.c:		CERROR("1b: close log %s failed: %d\n", name, rc2);
lustre-release/lustre/obdclass/llog_test.c:		CERROR("2a: re-open log with name %s failed: %d\n", name, rc);
lustre-release/lustre/obdclass/llog_test.c:		CERROR("2a: can't init llog handle: %d\n", rc);
lustre-release/lustre/obdclass/llog_test.c:		CERROR("2b: create log failed\n");
lustre-release/lustre/obdclass/llog_test.c:		CERROR("2b: can't init llog handle: %d\n", rc);
lustre-release/lustre/obdclass/llog_test.c:		CERROR("2c: re-open log by LOGID failed\n");
lustre-release/lustre/obdclass/llog_test.c:		CERROR("2c: can't init llog handle: %d\n", rc);
lustre-release/lustre/obdclass/llog_test.c:		CERROR("2c: re-open log by LOGID failed\n");
lustre-release/lustre/obdclass/llog_test.c:		CERROR("2c: can't init llog handle: %d\n", rc);
lustre-release/lustre/obdclass/llog_test.c:		CERROR("2d: destroy log failed\n");
lustre-release/lustre/obdclass/llog_test.c:			CERROR("Wrong record offset in cur_off: %llu, should be %u\n",
lustre-release/lustre/obdclass/llog_test.c:				CERROR("Wrong record offset in cur_off: %llu"
lustre-release/lustre/obdclass/llog_test.c:		CERROR("Record with wrong index was read: %u, expected %u\n",
lustre-release/lustre/obdclass/llog_test.c:		CERROR("cb_test_3: cannot modify record while processing\n");
lustre-release/lustre/obdclass/llog_test.c:			CERROR("cb_test_3: cannot add new record while "
lustre-release/lustre/obdclass/llog_test.c:		CERROR("cb_test_3: record %u is not modified\n",
lustre-release/lustre/obdclass/llog_test.c:			CERROR("3a: write 1023 records failed at #%d: %d\n",
lustre-release/lustre/obdclass/llog_test.c:		CERROR("3a: process total %d records but expect %d\n",
lustre-release/lustre/obdclass/llog_test.c:		CERROR("3a: process total %d records but expect %d\n",
lustre-release/lustre/obdclass/llog_test.c:			CERROR("3b: write 566 records failed at #%d: %d\n",
lustre-release/lustre/obdclass/llog_test.c:		CERROR("3b: process total %d records but expect %d\n",
lustre-release/lustre/obdclass/llog_test.c:		CERROR("3b: process total %d records but expect %d\n",
lustre-release/lustre/obdclass/llog_test.c:			CERROR("3c: write recs failed at #%d: %d\n",
lustre-release/lustre/obdclass/llog_test.c:		CERROR("4a: llog_create with name %s failed: %d\n", name, rc);
lustre-release/lustre/obdclass/llog_test.c:		CERROR("4a: can't init llog handle: %d\n", rc);
lustre-release/lustre/obdclass/llog_test.c:		CERROR("4b: write 1 catalog record failed at: %d\n", rc);
lustre-release/lustre/obdclass/llog_test.c:		CERROR("4c: cancel 1 catalog based record failed: %d\n", rc);
lustre-release/lustre/obdclass/llog_test.c:			CERROR("4d: write %d records failed at #%d: %d\n",
lustre-release/lustre/obdclass/llog_test.c:			CERROR("4e: write 5 records failed at #%d: %d\n",
lustre-release/lustre/obdclass/llog_test.c:		CERROR("4: close log %s failed: %d\n", name, rc2);
lustre-release/lustre/obdclass/llog_test.c:		CERROR("invalid record in catalog\n");
lustre-release/lustre/obdclass/llog_test.c:		CERROR("log is not plain\n");
lustre-release/lustre/obdclass/llog_test.c:		CERROR("log is not plain\n");
lustre-release/lustre/obdclass/llog_test.c:		CERROR("5a: llog_create with logid failed: %d\n", rc);
lustre-release/lustre/obdclass/llog_test.c:		CERROR("5a: can't init llog handle: %d\n", rc);
lustre-release/lustre/obdclass/llog_test.c:		CERROR("5b: process with cat_print_cb failed: %d\n", rc);
lustre-release/lustre/obdclass/llog_test.c:		CERROR("5b: %d entries in catalog\n", cat_counter);
lustre-release/lustre/obdclass/llog_test.c:		CERROR("5c: process with llog_cancel_rec_cb failed: %d\n", rc);
lustre-release/lustre/obdclass/llog_test.c:		CERROR("5c: process with cat_print_cb failed: %d\n", rc);
lustre-release/lustre/obdclass/llog_test.c:		CERROR("5c: %d entries in catalog\n", cat_counter);
lustre-release/lustre/obdclass/llog_test.c:		CERROR("5d: add record to the log with many canceled empty "
lustre-release/lustre/obdclass/llog_test.c:		CERROR("5e: process with plain_print_cb failed: %d\n", rc);
lustre-release/lustre/obdclass/llog_test.c:		CERROR("5e: found %d records\n", plain_counter);
lustre-release/lustre/obdclass/llog_test.c:		CERROR("5f: reversely process with plain_print_cb failed: "
lustre-release/lustre/obdclass/llog_test.c:		CERROR("5f: found %d records\n", plain_counter);
lustre-release/lustre/obdclass/llog_test.c:		CERROR("5g: close log %s failed: %d\n", name, rc2);
lustre-release/lustre/obdclass/llog_test.c:		CERROR("6a: no MGC devices connected to %s found.\n",
lustre-release/lustre/obdclass/llog_test.c:		CERROR("6a: connect on connected MGC (%s) failed to return"
lustre-release/lustre/obdclass/llog_test.c:		CERROR("6a: llog_open failed %d\n", rc);
lustre-release/lustre/obdclass/llog_test.c:		CERROR("6a: llog_init_handle failed %d\n", rc);
lustre-release/lustre/obdclass/llog_test.c:		CERROR("6b: llog_process failed %d\n", rc);
lustre-release/lustre/obdclass/llog_test.c:		CERROR("6c: llog_reverse_process failed %d\n", rc);
lustre-release/lustre/obdclass/llog_test.c:		CERROR("6: llog_close failed: rc = %d\n", rc2);
lustre-release/lustre/obdclass/llog_test.c:		CERROR("7_sub: create log failed\n");
lustre-release/lustre/obdclass/llog_test.c:		CERROR("7_sub: can't init llog handle: %d\n", rc);
lustre-release/lustre/obdclass/llog_test.c:			CERROR("7_sub: write recs failed at #%d: %d\n",
lustre-release/lustre/obdclass/llog_test.c:		CERROR("7_sub: verify handle failed: %d\n", rc);
lustre-release/lustre/obdclass/llog_test.c:		CERROR("7_sub: llog process failed: %d\n", rc);
lustre-release/lustre/obdclass/llog_test.c:		CERROR("7_sub: processed %d records from %d total\n",
lustre-release/lustre/obdclass/llog_test.c:		CERROR("7_sub: reverse llog process failed: %d\n", rc);
lustre-release/lustre/obdclass/llog_test.c:		CERROR("7_sub: Reverse/direct processing found different"
lustre-release/lustre/obdclass/llog_test.c:		CERROR("7_sub: llog exists but should be zapped\n");
lustre-release/lustre/obdclass/llog_test.c:		CERROR("7a: llog_logid_rec test failed\n");
lustre-release/lustre/obdclass/llog_test.c:		CERROR("7b: llog_unlink_rec test failed\n");
lustre-release/lustre/obdclass/llog_test.c:		CERROR("7c: llog_setattr64_rec test failed\n");
lustre-release/lustre/obdclass/llog_test.c:		CERROR("7d: llog_size_change_rec test failed\n");
lustre-release/lustre/obdclass/llog_test.c:		CERROR("7e: llog_changelog_rec test failed\n");
lustre-release/lustre/obdclass/llog_test.c:		CERROR("7f: llog_changelog_user_rec test failed\n");
lustre-release/lustre/obdclass/llog_test.c:		CERROR("7g: llog_size_change_rec test failed\n");
lustre-release/lustre/obdclass/llog_test.c:		CERROR("7h: llog_setattr64_rec_v2 test failed\n");
lustre-release/lustre/obdclass/llog_test.c:		CERROR("8a: llog_create with logid failed: %d\n", rc);
lustre-release/lustre/obdclass/llog_test.c:		CERROR("8a: can't init llog handle: %d\n", rc);
lustre-release/lustre/obdclass/llog_test.c:		CERROR("5a: process with test_8_cb failed: %d\n", rc);
lustre-release/lustre/obdclass/llog_test.c:			CERROR("5a: add record failed\n");
lustre-release/lustre/obdclass/llog_test.c:		CERROR("8a: close log %s failed: %d\n", name, rc2);
lustre-release/lustre/obdclass/llog_test.c:		CERROR("8b: llog_create with logid failed: %d\n", rc);
lustre-release/lustre/obdclass/llog_test.c:		CERROR("8b: can't init llog handle: %d\n", rc);
lustre-release/lustre/obdclass/llog_test.c:			CERROR("8b: add record failed\n");
lustre-release/lustre/obdclass/llog_test.c:		CERROR("8b: close log %s failed: %d\n", name, rc2);
lustre-release/lustre/obdclass/llog_test.c:		CERROR("8d: llog_create with logid failed: %d\n", rc);
lustre-release/lustre/obdclass/llog_test.c:		CERROR("8d: can't init llog handle: %d\n", rc);
lustre-release/lustre/obdclass/llog_test.c:		CERROR("8d: process with test_8_cb failed: %d\n", rc);
lustre-release/lustre/obdclass/llog_test.c:		CERROR("found %d records (expected %d)\n", plain_counter,
lustre-release/lustre/obdclass/llog_test.c:		CERROR("8d: close log %s failed: %d\n", name, rc2);
lustre-release/lustre/obdclass/llog_test.c:		CERROR("9_sub: create log failed\n");
lustre-release/lustre/obdclass/llog_test.c:		CERROR("9_sub: can't init llog handle: %d\n", rc);
lustre-release/lustre/obdclass/llog_test.c:		CERROR("9_sub: write recs failed at #1: %d\n", rc);
lustre-release/lustre/obdclass/llog_test.c:		CERROR("9a: llog_logid_rec test failed\n");
lustre-release/lustre/obdclass/llog_test.c:		CERROR("9b: llog_obd_cfg_rec test failed\n");
lustre-release/lustre/obdclass/llog_test.c:		CERROR("9c: llog_changelog_rec test failed\n");
lustre-release/lustre/obdclass/llog_test.c:		CERROR("9d: llog_changelog_user_rec test failed\n");
lustre-release/lustre/obdclass/llog_test.c:		CERROR("invalid record in catalog\n");
lustre-release/lustre/obdclass/llog_test.c:		CERROR("10a: llog_create with name %s failed: %d\n", name, rc);
lustre-release/lustre/obdclass/llog_test.c:		CERROR("10a: can't init llog handle: %d\n", rc);
lustre-release/lustre/obdclass/llog_test.c:		CERROR("10c: sync failed: %d\n", rc);
lustre-release/lustre/obdclass/llog_test.c:			CERROR("10b: write %d records failed at #%d: %d\n",
lustre-release/lustre/obdclass/llog_test.c:		CERROR("10b: sync failed: %d\n", rc);
lustre-release/lustre/obdclass/llog_test.c:			CERROR("10c: write %d records failed at #%d: %d\n",
lustre-release/lustre/obdclass/llog_test.c:		CERROR("10c: sync failed: %d\n", rc);
lustre-release/lustre/obdclass/llog_test.c:			CERROR("10c: write %d records failed at #%d: %d\n",
lustre-release/lustre/obdclass/llog_test.c:		CERROR("10c: all last records adds should have failed with"
lustre-release/lustre/obdclass/llog_test.c:		CERROR("10c: failed to get catalog attrs: %d\n", rc);
lustre-release/lustre/obdclass/llog_test.c:		CERROR("10d: process with llog_cancel_rec_cb failed: %d\n", rc);
lustre-release/lustre/obdclass/llog_test.c:		CERROR("10d: process with cat_print_cb failed: %d\n", rc);
lustre-release/lustre/obdclass/llog_test.c:		CERROR("10d: %d entries in catalog\n", cat_counter);
lustre-release/lustre/obdclass/llog_test.c:		CERROR("10d: sync failed: %d\n", rc);
lustre-release/lustre/obdclass/llog_test.c:			CERROR("10e: write %d records failed at #%d: %d\n",
lustre-release/lustre/obdclass/llog_test.c:		CERROR("10e: all last records adds should have failed with"
lustre-release/lustre/obdclass/llog_test.c:		CERROR("10e: process with cat_print_cb failed: %d\n", rc);
lustre-release/lustre/obdclass/llog_test.c:		CERROR("10e: %d entries in catalog\n", cat_counter);
lustre-release/lustre/obdclass/llog_test.c:		CERROR("10e: catalog failed to wrap around\n");
lustre-release/lustre/obdclass/llog_test.c:		CERROR("10e: failed to get catalog attrs: %d\n", rc);
lustre-release/lustre/obdclass/llog_test.c:		CERROR("10e: catalog size has changed after it has wrap around,"
lustre-release/lustre/obdclass/llog_test.c:		CERROR("10e: sync failed: %d\n", rc);
lustre-release/lustre/obdclass/llog_test.c:		CERROR("10f: process with llog_cancel_rec_cb failed: %d\n", rc);
lustre-release/lustre/obdclass/llog_test.c:		CERROR("10f: process with cat_print_cb failed: %d\n", rc);
lustre-release/lustre/obdclass/llog_test.c:		CERROR("10f: %d entries in catalog\n", cat_counter);
lustre-release/lustre/obdclass/llog_test.c:		CERROR("10f: sync failed: %d\n", rc);
lustre-release/lustre/obdclass/llog_test.c:			CERROR("10f: write %d records failed at #%d: %d\n",
lustre-release/lustre/obdclass/llog_test.c:		CERROR("10f: all last records adds should have failed with"
lustre-release/lustre/obdclass/llog_test.c:		CERROR("10f: lgh_last_idx = %d vs 2, llh_cat_idx = %d vs 2\n",
lustre-release/lustre/obdclass/llog_test.c:		CERROR("10f: failed to get catalog attrs: %d\n", rc);
lustre-release/lustre/obdclass/llog_test.c:		CERROR("10f: catalog size has changed after it has wrap around,"
lustre-release/lustre/obdclass/llog_test.c:		CERROR("10f: sync failed: %d\n", rc);
lustre-release/lustre/obdclass/llog_test.c:		CERROR("10g: process with llog_cancel_rec_cb failed: %d\n", rc);
lustre-release/lustre/obdclass/llog_test.c:		CERROR("10g: process with cat_print_cb failed: %d\n", rc);
lustre-release/lustre/obdclass/llog_test.c:		CERROR("10g: %d entries in catalog\n", cat_counter);
lustre-release/lustre/obdclass/llog_test.c:		CERROR("10g: sync failed: %d\n", rc);
lustre-release/lustre/obdclass/llog_test.c:		CERROR("10g: process with llog_cancel_rec_cb failed: %d\n", rc);
lustre-release/lustre/obdclass/llog_test.c:		CERROR("10g: process with cat_print_cb failed: %d\n", rc);
lustre-release/lustre/obdclass/llog_test.c:		CERROR("10g: %d entries in catalog\n", cat_counter);
lustre-release/lustre/obdclass/llog_test.c:		CERROR("10g: lgh_last_idx = %d vs 2, llh_cat_idx = %d vs 0\n",
lustre-release/lustre/obdclass/llog_test.c:		CERROR("10g: sync failed: %d\n", rc);
lustre-release/lustre/obdclass/llog_test.c:		CERROR("10g: process with llog_cancel_rec_cb failed: %d\n", rc);
lustre-release/lustre/obdclass/llog_test.c:		CERROR("10g: process with cat_print_cb failed: %d\n", rc);
lustre-release/lustre/obdclass/llog_test.c:		CERROR("10g: %d entries in catalog\n", cat_counter);
lustre-release/lustre/obdclass/llog_test.c:		CERROR("10g: lgh_last_idx = %d vs 2, llh_cat_idx = %d vs 1\n",
lustre-release/lustre/obdclass/llog_test.c:			CERROR("10h: write %d records failed at #%d: %d\n",
lustre-release/lustre/obdclass/llog_test.c:		CERROR("10h: all last records adds should have failed with"
lustre-release/lustre/obdclass/llog_test.c:		CERROR("10h: race happened, old record was processed\n");
lustre-release/lustre/obdclass/llog_test.c:		CERROR("10: close log %s failed: %d\n", name, rc2);
lustre-release/lustre/obdclass/llog_test.c:		CERROR("cleanup: llog_destroy failed: %d\n", err);
lustre-release/lustre/obdclass/llog_test.c:		CERROR("failed to llog_test_llog_finish: %d\n", rc);
lustre-release/lustre/obdclass/llog_test.c:		CERROR("requires a TARGET OBD name\n");
lustre-release/lustre/obdclass/llog_test.c:		CERROR("requires a TARGET OBD name\n");
lustre-release/lustre/obdclass/llog_test.c:		CERROR("target device not attached or not set up (%s)\n",
lustre-release/lustre/obdclass/dt_object.c:				CERROR("keysize mismatch %hu != %hu.\n",
lustre-release/lustre/obdclass/dt_object.c:		CERROR("%s: error %d setting up debugfs\n",
lustre-release/lustre/osd-ldiskfs/osd_compat.c:		CERROR("%s: bad inode returned %lu/%u: rc = -ENOENT\n",
lustre-release/lustre/osd-ldiskfs/osd_compat.c:			CERROR("found %s (%lu/%u) is mode %o\n", name,
lustre-release/lustre/osd-ldiskfs/osd_compat.c:		CERROR("Can't read last_rcvd file, rc = %d\n", rc);
lustre-release/lustre/osd-ldiskfs/osd_compat.c:		CERROR("%s: the FID "DFID" is used by two objects: "
lustre-release/lustre/osd-ldiskfs/osd_compat.c:					CERROR("%s: the FID "DFID" is used by "
lustre-release/lustre/osd-ldiskfs/osd_compat.c:					CERROR("%s: the FID "DFID" is used by "
lustre-release/lustre/osd-ldiskfs/osd_iam_lvar.c:	CERROR("        %p %8.8x \"%*.*s\"\n", ent, e_hash(ent),
lustre-release/lustre/osd-ldiskfs/osd_iam_lvar.c:	CERROR("used: %d\n", h_used(n_head(l)));
lustre-release/lustre/osd-ldiskfs/osd_iam_lvar.c:			CERROR("%#x < %#x\n", nexthash, starthash);
lustre-release/lustre/osd-ldiskfs/osd_iam_lvar.c:		CERROR(
lustre-release/lustre/osd-ldiskfs/osd_iam.c:		CERROR("%s: cannot load idle blocks, blk = %u, err = %ld\n",
lustre-release/lustre/osd-ldiskfs/osd_iam.c:		CERROR("%s: invalid idle block head, blk = %u, magic = %d\n",
lustre-release/lustre/osd-ldiskfs/osd_iam.c:					CERROR("cannot find cursor : %u\n",
lustre-release/lustre/osd-ldiskfs/osd_quota_fmt.c:		CERROR("Can't read quota tree block %u.\n", blk);
lustre-release/lustre/osd-ldiskfs/osd_quota_fmt.c:		CERROR("Can't read quota tree block %u.\n", blk);
lustre-release/lustre/osd-ldiskfs/osd_quota_fmt.c:		CERROR("Can't read quota tree block %u.\n", blk);
lustre-release/lustre/osd-ldiskfs/osd_quota_fmt.c:		CERROR("Can't read quota tree block %u.\n", blk);
lustre-release/lustre/osd-ldiskfs/osd_quota.c:	CERROR("%s: Error while trying to read quota information, "    \
lustre-release/lustre/osd-ldiskfs/osd_quota.c:			CERROR("Too many(%d) trans qids!\n", i + 1);
lustre-release/lustre/osd-ldiskfs/osd_integrity.c:			CERROR("%s: ref tag error on sector %lu (rcvd %u)\n",
lustre-release/lustre/osd-ldiskfs/osd_integrity.c:			CERROR("%s: guard tag error on sector %lu " \
lustre-release/lustre/osd-ldiskfs/osd_integrity.c:			CERROR("%s: guard tag error on sector %lu " \
lustre-release/lustre/osd-ldiskfs/osd_io.c:		CERROR("***** bio->bi_private is NULL!  This should never "
lustre-release/lustre/osd-ldiskfs/osd_io.c:		CERROR("bi_next: %p, bi_flags: %lx, " __stringify(bi_opf)
lustre-release/lustre/osd-ldiskfs/osd_io.c:			CERROR("unexpected guard tags on sector %d "
lustre-release/lustre/osd-ldiskfs/osd_io.c:                                CERROR("Can't allocate bio %u*%u = %u pages\n",
lustre-release/lustre/osd-ldiskfs/osd_io.c:			CERROR("%s: can't read %u@%llu on ino %lu: "
lustre-release/lustre/osd-ldiskfs/osd_io.c:			CERROR("%s: error reading offset %llu (block %lu, "
lustre-release/lustre/osd-ldiskfs/osd_io.c:                        CERROR("journal_get_write_access() returned error %d\n",
lustre-release/lustre/osd-ldiskfs/osd_iam_lfix.c:		CERROR(
lustre-release/lustre/osd-ldiskfs/osd_lproc.c:		CERROR("%s: cannot setup sysfs / debugfs entry: %d\n",
lustre-release/lustre/osd-ldiskfs/osd_lproc.c:		CERROR("Error %d setting up lprocfs for %s\n",
lustre-release/lustre/osd-ldiskfs/osd_handler.c:		CERROR("%s: FID "DFID" add id map cache failed: %ld\n",
lustre-release/lustre/osd-ldiskfs/osd_handler.c:			CERROR("can't lookup: rc = %d\n", rc);
lustre-release/lustre/osd-ldiskfs/osd_handler.c:		CERROR("%s: FID "DFID" add id map cache failed: %ld\n",
lustre-release/lustre/osd-ldiskfs/osd_handler.c:		CERROR("transaction @0x%p commit error: %d\n", th, error);
lustre-release/lustre/osd-ldiskfs/osd_handler.c:		CERROR("%s: someone try to start transaction under "
lustre-release/lustre/osd-ldiskfs/osd_handler.c:			CERROR("%s: can't lookup FLD sequence %#llx: rc = %d\n",
lustre-release/lustre/osd-ldiskfs/osd_handler.c:			CERROR("%s: failed in transaction hook: rc = %d\n",
lustre-release/lustre/osd-ldiskfs/osd_handler.c:			CERROR("%s: failed to stop transaction: rc = %d\n",
lustre-release/lustre/osd-ldiskfs/osd_handler.c:				CERROR("%s: unsupported T10PI sector size %u\n",
lustre-release/lustre/osd-ldiskfs/osd_handler.c:				CERROR("%s: unsupported T10PI type %s\n",
lustre-release/lustre/osd-ldiskfs/osd_handler.c:				CERROR("%s: unsupported checksum type of "
lustre-release/lustre/osd-ldiskfs/osd_handler.c:			CERROR("%s: unsupported T10PI type '%s'",
lustre-release/lustre/osd-ldiskfs/osd_handler.c:		CERROR("*** setting %s read-only ***\n",
lustre-release/lustre/osd-ldiskfs/osd_handler.c:		CERROR("%s: %lx CANNOT BE SET READONLY: rc = %d\n",
lustre-release/lustre/osd-ldiskfs/osd_handler.c:			CERROR("%s: quota transfer failed: rc = %d. Is quota "
lustre-release/lustre/osd-ldiskfs/osd_handler.c:			CERROR("%s: quota transfer failed: rc = %d. Is project "
lustre-release/lustre/osd-ldiskfs/osd_handler.c:			CERROR("%s: remove agent entry "DFID": rc = %d\n",
lustre-release/lustre/osd-ldiskfs/osd_handler.c:		CERROR("%s: create local error %d\n", osd_name(osd),
lustre-release/lustre/osd-ldiskfs/osd_handler.c:			CERROR("%s: quota transfer failed: rc = %d. Is project "
lustre-release/lustre/osd-ldiskfs/osd_handler.c:		CERROR("%s: set LMA for "DFID" remote inode failed: rc = %d\n",
lustre-release/lustre/osd-ldiskfs/osd_handler.c:		CERROR("%s: "DFID" add dot dotdot error: rc = %d\n",
lustre-release/lustre/osd-ldiskfs/osd_handler.c:			CERROR("%s: failed to remove agent entry for "DFID
lustre-release/lustre/osd-ldiskfs/osd_handler.c:			CERROR("%s: failed to create agent entry for "DFID
lustre-release/lustre/osd-ldiskfs/osd_handler.c:		CERROR("%s: can't get FID: rc = %d\n", osd_name(osd), rc);
lustre-release/lustre/osd-ldiskfs/osd_handler.c:			CERROR("%s: "DFID" wasn't declared for insert\n",
lustre-release/lustre/osd-ldiskfs/osd_handler.c:			CERROR("%s: OIC for "DFID" isn't filled\n",
lustre-release/lustre/osd-ldiskfs/osd_handler.c:		CERROR("ldiskfs return invalid namelen %d\n", namelen);
lustre-release/lustre/osd-ldiskfs/osd_handler.c:		CERROR("%s: device %s extents feature is not guaranteed to "
lustre-release/lustre/osd-ldiskfs/osd_handler.c:		CERROR("%s: cannot find ldiskfs module\n", name);
lustre-release/lustre/osd-ldiskfs/osd_handler.c:		CERROR("%s: can't mount %s: %d\n", name, dev, rc);
lustre-release/lustre/osd-ldiskfs/osd_handler.c:		CERROR("%s: device %s LDISKFS does not support filesystems "
lustre-release/lustre/osd-ldiskfs/osd_handler.c:		CERROR("%s: underlying device %s is marked as "
lustre-release/lustre/osd-ldiskfs/osd_handler.c:		CERROR("%s: device %s is mounted w/o journal\n", name, dev);
lustre-release/lustre/osd-ldiskfs/osd_handler.c:		CERROR("%s: failed to set lma on %s root inode\n", name, dev);
lustre-release/lustre/osd-ldiskfs/osd_handler.c:		CERROR("%s: can't initialize procfs: rc = %d\n",
lustre-release/lustre/osd-ldiskfs/osd_scrub.c:		CERROR("%s: scan the same object multiple times at the pos: "
lustre-release/lustre/osd-ldiskfs/osd_scrub.c:			CERROR("%s: fail to read bitmap for %u, "
lustre-release/lustre/osd-ldiskfs/osd_scrub.c:			CERROR("%s: not enough RAM for rebuild index\n",
lustre-release/lustre/osd-ldiskfs/osd_oi.c:		CERROR("%s: can't open %s: rc = %d\n",
lustre-release/lustre/osd-ldiskfs/osd_oi.c:			CERROR("%s: expect to open total %d OI files.\n",
lustre-release/lustre/osd-ldiskfs/osd_oi.c:			CERROR("%s: fail to remove the stale OI file %s: "
lustre-release/lustre/osd-ldiskfs/osd_oi.c:		CERROR("%s: fail to remove the stale OI file %s: rc = %d\n",
lustre-release/lustre/osd-ldiskfs/osd_oi.c:		CERROR("%s: can't open %s: rc = %d\n",
lustre-release/lustre/osd-ldiskfs/osd_oi.c:			CERROR("%s: lookup FLD "DFID": rc = %d\n",
lustre-release/lustre/osd-ldiskfs/osd_oi.c:			CERROR("%s: the FID "DFID" is used by two objects: "
lustre-release/lnet/klnds/socklnd/socklnd_cb.c:                CERROR("Can't allocate noop tx desc\n");
lustre-release/lnet/klnds/socklnd/socklnd_cb.c:                        CERROR("Refusing to create a connection to "
lustre-release/lnet/klnds/socklnd/socklnd_cb.c:                        CERROR("Can't find peer_ni %s\n", libcfs_id2str(id));
lustre-release/lnet/klnds/socklnd/socklnd_cb.c:                        CERROR("Can't add peer_ni %s: %d\n",
lustre-release/lnet/klnds/socklnd/socklnd_cb.c:                CERROR("Can't allocate tx desc type %d size %d\n",
lustre-release/lnet/klnds/socklnd/socklnd_cb.c:				CERROR("[%p] Error %d on read from %s "
lustre-release/lnet/klnds/socklnd/socklnd_cb.c:                        CERROR("%s: Unknown message type: %x\n",
lustre-release/lnet/klnds/socklnd/socklnd_cb.c:                        CERROR("%s: Checksum error, wire:0x%08X data:0x%08X\n",
lustre-release/lnet/klnds/socklnd/socklnd_cb.c:				CERROR("%s: Unknown ZC-ACK cookie: %llu, %llu\n",
lustre-release/lnet/klnds/socklnd/socklnd_cb.c:                        CERROR("%s: Checksum error, wire:0x%08X data:0x%08X\n",
lustre-release/lnet/klnds/socklnd/socklnd_cb.c:		CERROR("Unable to allocate scratch pages\n");
lustre-release/lnet/klnds/socklnd/socklnd_cb.c:		CERROR("Unable to allocate scratch iov\n");
lustre-release/lnet/klnds/socklnd/socklnd_cb.c:		CERROR("Error %d reading HELLO from %pI4h\n",
lustre-release/lnet/klnds/socklnd/socklnd_cb.c:                CERROR ("Bad magic(1) %#08x (%#08x expected) from "
lustre-release/lnet/klnds/socklnd/socklnd_cb.c:		CERROR("Error %d reading HELLO from %pI4h\n",
lustre-release/lnet/klnds/socklnd/socklnd_cb.c:		CERROR("Unknown protocol version (%d.x expected) from %pI4h\n",
lustre-release/lnet/klnds/socklnd/socklnd_cb.c:		CERROR("Error %d reading or checking hello from from %pI4h\n",
lustre-release/lnet/klnds/socklnd/socklnd_cb.c:                CERROR("Expecting a HELLO hdr with a NID, but got LNET_NID_ANY"
lustre-release/lnet/klnds/socklnd/socklnd_cb.c:			CERROR("Unexpected type %d from %s ip %pI4h\n",
lustre-release/lnet/klnds/socklnd/socklnd_cb.c:		CERROR("Mismatched types: me %d, %s ip %pI4h %d\n",
lustre-release/lnet/klnds/socklnd/socklnd_cb.c:		CERROR("Total %d stale ZC_REQs for peer_ni %s detected; the "
lustre-release/lnet/klnds/socklnd/socklnd_lib.c:                CERROR ("Error %d getting sock peer_ni IP\n", rc);
lustre-release/lnet/klnds/socklnd/socklnd_lib.c:                CERROR ("Error %d getting sock local IP\n", rc);
lustre-release/lnet/klnds/socklnd/socklnd_lib.c:                CERROR ("Can't set SO_LINGER: %d\n", rc);
lustre-release/lnet/klnds/socklnd/socklnd_lib.c:                CERROR ("Can't set SO_LINGER2: %d\n", rc);
lustre-release/lnet/klnds/socklnd/socklnd_lib.c:                        CERROR ("Can't disable nagle: %d\n", rc);
lustre-release/lnet/klnds/socklnd/socklnd_lib.c:                CERROR ("Can't set buffer tx %d, rx %d buffers: %d\n",
lustre-release/lnet/klnds/socklnd/socklnd_lib.c:                        CERROR ("Can't set initial tcp backoff %d: %d\n",
lustre-release/lnet/klnds/socklnd/socklnd_lib.c:                        CERROR ("Can't set maximum tcp backoff %d: %d\n",
lustre-release/lnet/klnds/socklnd/socklnd_lib.c:                CERROR ("Can't set SO_KEEPALIVE: %d\n", rc);
lustre-release/lnet/klnds/socklnd/socklnd_lib.c:                CERROR ("Can't set TCP_KEEPIDLE: %d\n", rc);
lustre-release/lnet/klnds/socklnd/socklnd_lib.c:                CERROR ("Can't set TCP_KEEPINTVL: %d\n", rc);
lustre-release/lnet/klnds/socklnd/socklnd_lib.c:                CERROR ("Can't set TCP_KEEPCNT: %d\n", rc);
lustre-release/lnet/klnds/socklnd/socklnd_proto.c:                CERROR("ksnc_type bad: %u\n", conn->ksnc_type);
lustre-release/lnet/klnds/socklnd/socklnd_proto.c:                CERROR("ksnc_type bad: %u\n", conn->ksnc_type);
lustre-release/lnet/klnds/socklnd/socklnd_proto.c:		CERROR("Can't allocate struct lnet_hdr\n");
lustre-release/lnet/klnds/socklnd/socklnd_proto.c:		CERROR("Can't allocate struct lnet_hdr\n");
lustre-release/lnet/klnds/socklnd/socklnd_proto.c:		CERROR("Error %d reading rest of HELLO hdr from %pI4h\n",
lustre-release/lnet/klnds/socklnd/socklnd_proto.c:                CERROR ("Expecting a HELLO hdr,"
lustre-release/lnet/klnds/socklnd/socklnd_proto.c:		CERROR("Bad nips %d from ip %pI4h\n",
lustre-release/lnet/klnds/socklnd/socklnd_proto.c:		CERROR("Error %d reading IPs from ip %pI4h\n",
lustre-release/lnet/klnds/socklnd/socklnd_proto.c:			CERROR("Zero IP[%d] from ip %pI4h\n",
lustre-release/lnet/klnds/socklnd/socklnd_proto.c:		CERROR("Error %d reading HELLO from %pI4h\n",
lustre-release/lnet/klnds/socklnd/socklnd_proto.c:		CERROR("Bad nips %d from ip %pI4h\n",
lustre-release/lnet/klnds/socklnd/socklnd_proto.c:		CERROR("Error %d reading IPs from ip %pI4h\n",
lustre-release/lnet/klnds/socklnd/socklnd_proto.c:			CERROR("Zero IP[%d] from ip %pI4h\n",
lustre-release/lnet/klnds/socklnd/socklnd.c:		CERROR("Can't create peer_ni: network shutdown\n");
lustre-release/lnet/klnds/socklnd/socklnd.c:			CERROR("Duplicate route %s %pI4h\n",
lustre-release/lnet/klnds/socklnd/socklnd.c:		CERROR("Route %s %pI4h connected to %pI4h\n",
lustre-release/lnet/klnds/socklnd/socklnd.c:		CERROR("no schedulers available. node is unhealthy\n");
lustre-release/lnet/klnds/socklnd/socklnd.c:                        CERROR("Not creating conn %s type %d: %s\n",
lustre-release/lnet/klnds/socklnd/socklnd.c:		CERROR("Completing partial receive from %s[%d], "
lustre-release/lnet/klnds/socklnd/socklnd.c:			CERROR("Incomplete receive of lnet header from %s, "
lustre-release/lnet/klnds/socklnd/socklnd.c:			CERROR("Incomplete receive of ksock message from %s, "
lustre-release/lnet/klnds/socklnd/socklnd.c:			CERROR("Incomplete receive of slops from %s, "
lustre-release/lnet/klnds/socklnd/socklnd.c:                CERROR("obsolete IOC_LIBCFS_REGISTER_MYNID: %s(%s)\n",
lustre-release/lnet/klnds/socklnd/socklnd.c:                        CERROR("Can't spawn socknal connd: %d\n", rc);
lustre-release/lnet/klnds/socklnd/socklnd.c:                CERROR ("Can't spawn socknal reaper: %d\n", rc);
lustre-release/lnet/klnds/socklnd/socklnd.c:		CERROR("Can't spawn thread %d for scheduler[%d]: %d\n",
lustre-release/lnet/klnds/socklnd/socklnd.c:					CERROR("ksocklnd: found duplicate %s at %d and %d, rc = %d\n",
lustre-release/lnet/klnds/socklnd/socklnd.c:			CERROR("ksocklnd: requested %d but only %d interfaces found\n",
lustre-release/lnet/klnds/o2iblnd/o2iblnd.c:                CERROR("Bad nfrags: %d, should be 0 < n <= %d\n",
lustre-release/lnet/klnds/o2iblnd/o2iblnd.c:                CERROR("Short %s: %d(%d)\n",
lustre-release/lnet/klnds/o2iblnd/o2iblnd.c:                CERROR("Short message: %d\n", nob);
lustre-release/lnet/klnds/o2iblnd/o2iblnd.c:                CERROR("Bad magic: %08x\n", msg->ibm_magic);
lustre-release/lnet/klnds/o2iblnd/o2iblnd.c:                CERROR("Bad version: %x\n", version);
lustre-release/lnet/klnds/o2iblnd/o2iblnd.c:                CERROR("Short message: %d\n", nob);
lustre-release/lnet/klnds/o2iblnd/o2iblnd.c:                CERROR("Short message: got %d, wanted %d\n", nob, msg_nob);
lustre-release/lnet/klnds/o2iblnd/o2iblnd.c:                CERROR("Bad checksum\n");
lustre-release/lnet/klnds/o2iblnd/o2iblnd.c:                CERROR("Bad src nid: %s\n", libcfs_nid2str(msg->ibm_srcnid));
lustre-release/lnet/klnds/o2iblnd/o2iblnd.c:                CERROR("Short %s: %d(%d)\n", kiblnd_msgtype2str(msg->ibm_type),
lustre-release/lnet/klnds/o2iblnd/o2iblnd.c:                CERROR("Unknown message type %x\n", msg->ibm_type);
lustre-release/lnet/klnds/o2iblnd/o2iblnd.c:                CERROR("Cannot allocate peer_ni\n");
lustre-release/lnet/klnds/o2iblnd/o2iblnd.c:		CERROR("no schedulers available. node is unhealthy\n");
lustre-release/lnet/klnds/o2iblnd/o2iblnd.c:		CERROR("Can't allocate qp_attr for %s\n",
lustre-release/lnet/klnds/o2iblnd/o2iblnd.c:		CERROR("Can't allocate connection for %s\n",
lustre-release/lnet/klnds/o2iblnd/o2iblnd.c:		CERROR("Can't allocate in-progress connection state\n");
lustre-release/lnet/klnds/o2iblnd/o2iblnd.c:		CERROR("%s: failover in progress\n", dev->ibd_ifname);
lustre-release/lnet/klnds/o2iblnd/o2iblnd.c:		CERROR("cmid HCA(%s), kib_dev(%s) need failover\n",
lustre-release/lnet/klnds/o2iblnd/o2iblnd.c:		CERROR("Failed to create CQ with %d CQEs: %ld\n",
lustre-release/lnet/klnds/o2iblnd/o2iblnd.c:		CERROR("Can't request completion notification: %d\n", rc);
lustre-release/lnet/klnds/o2iblnd/o2iblnd.c:		CERROR("Can't create QP: %d, send_wr: %d, recv_wr: %d, "
lustre-release/lnet/klnds/o2iblnd/o2iblnd.c:		CERROR("Cannot allocate RX buffers\n");
lustre-release/lnet/klnds/o2iblnd/o2iblnd.c:			CERROR("Can't post rxmsg: %d\n", rc);
lustre-release/lnet/klnds/o2iblnd/o2iblnd.c:                CERROR("Can't allocate descriptor for %d pages\n", npages);
lustre-release/lnet/klnds/o2iblnd/o2iblnd.c:                        CERROR("Can't allocate page %d of %d\n", i, npages);
lustre-release/lnet/klnds/o2iblnd/o2iblnd.c:			CERROR("FastReg pool still has %d regions registered\n",
lustre-release/lnet/klnds/o2iblnd/o2iblnd.c:			CERROR("Failed to create FMR pool: %d\n", rc);
lustre-release/lnet/klnds/o2iblnd/o2iblnd.c:			CERROR("FMRs are not supported\n");
lustre-release/lnet/klnds/o2iblnd/o2iblnd.c:			CERROR("Failed to allocate a new fast_reg descriptor\n");
lustre-release/lnet/klnds/o2iblnd/o2iblnd.c:			CERROR("Failed to allocate ib_fast_reg_page_list: %d\n",
lustre-release/lnet/klnds/o2iblnd/o2iblnd.c:			CERROR("Failed to allocate ib_fast_reg_mr: %d\n", rc);
lustre-release/lnet/klnds/o2iblnd/o2iblnd.c:					CERROR("Failed to map mr %d/%d "
lustre-release/lnet/klnds/o2iblnd/o2iblnd.c:		CERROR("Failed to create the first pool for %s\n", ps->ps_name);
lustre-release/lnet/klnds/o2iblnd/o2iblnd.c:		CERROR("Can't allocate new %s pool because out of memory\n",
lustre-release/lnet/klnds/o2iblnd/o2iblnd.c:                CERROR("Failed to allocate TX pool\n");
lustre-release/lnet/klnds/o2iblnd/o2iblnd.c:		CERROR("Can't allocate tx pages: %d\n", npg);
lustre-release/lnet/klnds/o2iblnd/o2iblnd.c:                CERROR("Can't allocate %d tx descriptors\n", size);
lustre-release/lnet/klnds/o2iblnd/o2iblnd.c:		CERROR("Can't set fmr pool size (%d) < ntx / 4(%d)\n",
lustre-release/lnet/klnds/o2iblnd/o2iblnd.c:		CERROR("Failed to allocate FMR pool array\n");
lustre-release/lnet/klnds/o2iblnd/o2iblnd.c:			CERROR("Can't initialize FMR pool for CPT %d: %d\n",
lustre-release/lnet/klnds/o2iblnd/o2iblnd.c:		CERROR("Failed to allocate tx pool array\n");
lustre-release/lnet/klnds/o2iblnd/o2iblnd.c:			CERROR("Can't initialize TX pool for CPT %d: %d\n",
lustre-release/lnet/klnds/o2iblnd/o2iblnd.c:		CERROR("Out of memory\n");
lustre-release/lnet/klnds/o2iblnd/o2iblnd.c:		CERROR("Failed to query IB device: %d\n", rc);
lustre-release/lnet/klnds/o2iblnd/o2iblnd.c:		CERROR("IB device does not support FMRs nor FastRegs, can't "
lustre-release/lnet/klnds/o2iblnd/o2iblnd.c:		CERROR("Invalid mr size: %#llx\n", hdev->ibh_mr_size);
lustre-release/lnet/klnds/o2iblnd/o2iblnd.c:		CERROR("Failed ib_get_dma_mr: %ld\n", PTR_ERR(mr));
lustre-release/lnet/klnds/o2iblnd/o2iblnd.c:                CERROR("Failed to create cmid for failover: %d\n", rc);
lustre-release/lnet/klnds/o2iblnd/o2iblnd.c:		CERROR("Failed to bind %s:%pI4h to device(%p): %d\n",
lustre-release/lnet/klnds/o2iblnd/o2iblnd.c:                CERROR("Failed to create cmid for failover: %d\n", rc);
lustre-release/lnet/klnds/o2iblnd/o2iblnd.c:		CERROR("Failed to bind %s:%pI4h to device(%p): %d\n",
lustre-release/lnet/klnds/o2iblnd/o2iblnd.c:                CERROR("Failed to allocate kib_hca_dev\n");
lustre-release/lnet/klnds/o2iblnd/o2iblnd.c:		CERROR("Can't allocate PD: %d\n", rc);
lustre-release/lnet/klnds/o2iblnd/o2iblnd.c:                CERROR("Can't start new listener: %d\n", rc);
lustre-release/lnet/klnds/o2iblnd/o2iblnd.c:		CERROR("Can't get device attributes: %d\n", rc);
lustre-release/lnet/klnds/o2iblnd/o2iblnd.c:		CERROR("Can't setup device: %d\n", rc);
lustre-release/lnet/klnds/o2iblnd/o2iblnd.c:                CERROR("Can't spawn o2iblnd connd: %d\n", rc);
lustre-release/lnet/klnds/o2iblnd/o2iblnd.c:                CERROR("Can't spawn o2iblnd failover thread: %d\n", rc);
lustre-release/lnet/klnds/o2iblnd/o2iblnd.c:		CERROR("Can't spawn thread %d for scheduler[%d]: %d\n",
lustre-release/lnet/klnds/o2iblnd/o2iblnd.c:			CERROR("Failed to start scheduler threads for %s\n",
lustre-release/lnet/klnds/o2iblnd/o2iblnd.c:			CERROR("ko2iblnd: Multiple interfaces not supported\n");
lustre-release/lnet/klnds/o2iblnd/o2iblnd.c:		CERROR("IPoIB interface name too long: %s\n", ifname);
lustre-release/lnet/klnds/o2iblnd/o2iblnd.c:		CERROR("ko2iblnd: No matching interfaces\n");
lustre-release/lnet/klnds/o2iblnd/o2iblnd.c:			CERROR("ko2iblnd: Can't initialize device: rc = %d\n",
lustre-release/lnet/klnds/o2iblnd/o2iblnd.c:		CERROR("Failed to initialize NI pools: %d\n", rc);
lustre-release/lnet/klnds/o2iblnd/o2iblnd_cb.c:		CERROR("Can't post rx for %s: %d, bad_wrq: %p\n",
lustre-release/lnet/klnds/o2iblnd/o2iblnd_cb.c:                CERROR("Can't get tx for completion %x for %s\n",
lustre-release/lnet/klnds/o2iblnd/o2iblnd_cb.c:			CERROR("Bad credits from %s: %d + %d > %d\n",
lustre-release/lnet/klnds/o2iblnd/o2iblnd_cb.c:                CERROR("Bad IBLND message type %x from %s\n",
lustre-release/lnet/klnds/o2iblnd/o2iblnd_cb.c:                        CERROR("Unmatched PUT_ACK from %s\n",
lustre-release/lnet/klnds/o2iblnd/o2iblnd_cb.c:                        CERROR("Can't setup rdma for PUT to %s: %d\n",
lustre-release/lnet/klnds/o2iblnd/o2iblnd_cb.c:                CERROR ("Error %d unpacking rx from %s\n",
lustre-release/lnet/klnds/o2iblnd/o2iblnd_cb.c:                CERROR ("Stale rx from %s\n",
lustre-release/lnet/klnds/o2iblnd/o2iblnd_cb.c:		CERROR("Using FastReg with no GAPS support, but tx has gaps. "
lustre-release/lnet/klnds/o2iblnd/o2iblnd_cb.c:			CERROR("TX number of frags (%d) is <= than connection"
lustre-release/lnet/klnds/o2iblnd/o2iblnd_cb.c:		CERROR("Can't map %u pages: %d\n", nob, rc);
lustre-release/lnet/klnds/o2iblnd/o2iblnd_cb.c:			CERROR("Can't find page\n");
lustre-release/lnet/klnds/o2iblnd/o2iblnd_cb.c:			CERROR("lacking enough sg entries to map tx\n");
lustre-release/lnet/klnds/o2iblnd/o2iblnd_cb.c:			CERROR("lacking enough sg entries to map tx\n");
lustre-release/lnet/klnds/o2iblnd/o2iblnd_cb.c:                CERROR("Error %d posting transmit to %s\n",
lustre-release/lnet/klnds/o2iblnd/o2iblnd_cb.c:			CERROR("Src buffer exhausted: %d frags\n", srcidx);
lustre-release/lnet/klnds/o2iblnd/o2iblnd_cb.c:			CERROR("Dst buffer exhausted: %d frags\n", dstidx);
lustre-release/lnet/klnds/o2iblnd/o2iblnd_cb.c:			CERROR("RDMA has too many fragments for peer_ni %s (%d), "
lustre-release/lnet/klnds/o2iblnd/o2iblnd_cb.c:                CERROR("Unable to set reuse on cmid: %d\n", rc);
lustre-release/lnet/klnds/o2iblnd/o2iblnd_cb.c:        CERROR("Failed to bind to a free privileged port\n");
lustre-release/lnet/klnds/o2iblnd/o2iblnd_cb.c:                CERROR("Can't create CMID for %s: %ld\n",
lustre-release/lnet/klnds/o2iblnd/o2iblnd_cb.c:		CERROR("Can't resolve addr for %s: %d\n",
lustre-release/lnet/klnds/o2iblnd/o2iblnd_cb.c:		CERROR("Can't create peer_ni %s\n", libcfs_nid2str(nid));
lustre-release/lnet/klnds/o2iblnd/o2iblnd_cb.c:			CERROR("Can't allocate txd for GET to %s\n",
lustre-release/lnet/klnds/o2iblnd/o2iblnd_cb.c:			CERROR("Can't setup GET sink for %s: %d\n",
lustre-release/lnet/klnds/o2iblnd/o2iblnd_cb.c:			CERROR("Can't create reply for GET -> %s\n",
lustre-release/lnet/klnds/o2iblnd/o2iblnd_cb.c:                        CERROR("Can't allocate %s txd for %s\n",
lustre-release/lnet/klnds/o2iblnd/o2iblnd_cb.c:			CERROR("Can't setup PUT src for %s: %d\n",
lustre-release/lnet/klnds/o2iblnd/o2iblnd_cb.c:                CERROR ("Can't send %d to %s: tx descs exhausted\n",
lustre-release/lnet/klnds/o2iblnd/o2iblnd_cb.c:                CERROR("Can't get tx for REPLY to %s\n",
lustre-release/lnet/klnds/o2iblnd/o2iblnd_cb.c:                CERROR("Can't setup GET src for %s: %d\n",
lustre-release/lnet/klnds/o2iblnd/o2iblnd_cb.c:                CERROR("Can't setup rdma for GET from %s: %d\n",
lustre-release/lnet/klnds/o2iblnd/o2iblnd_cb.c:                        CERROR ("Immediate message from %s too big: %d(%d)\n",
lustre-release/lnet/klnds/o2iblnd/o2iblnd_cb.c:                        CERROR("Can't allocate tx for %s\n",
lustre-release/lnet/klnds/o2iblnd/o2iblnd_cb.c:			CERROR("Can't setup PUT sink for %s: %d\n",
lustre-release/lnet/klnds/o2iblnd/o2iblnd_cb.c:		CERROR("peer_ni's port (%pI4h:%hu) is not privileged\n",
lustre-release/lnet/klnds/o2iblnd/o2iblnd_cb.c:		CERROR("Short connection request\n");
lustre-release/lnet/klnds/o2iblnd/o2iblnd_cb.c:		CERROR("Can't parse connection request: %d\n", rc);
lustre-release/lnet/klnds/o2iblnd/o2iblnd_cb.c:		CERROR("Can't accept conn from %s on %s (%s:%d:%pI4h): "
lustre-release/lnet/klnds/o2iblnd/o2iblnd_cb.c:		CERROR("Unexpected connreq msg type: %x from %s\n",
lustre-release/lnet/klnds/o2iblnd/o2iblnd_cb.c:		CERROR("Can't accept conn from %s, queue depth too large: "
lustre-release/lnet/klnds/o2iblnd/o2iblnd_cb.c:                CERROR("Can't accept %s: message size %d too big (%d max)\n",
lustre-release/lnet/klnds/o2iblnd/o2iblnd_cb.c:		CERROR("Can't create peer_ni for %s\n", libcfs_nid2str(nid));
lustre-release/lnet/klnds/o2iblnd/o2iblnd_cb.c:                CERROR("Can't accept %s: %d\n", libcfs_nid2str(nid), rc);
lustre-release/lnet/klnds/o2iblnd/o2iblnd_cb.c:                                CERROR("%s rejected: consumer defined fatal error\n",
lustre-release/lnet/klnds/o2iblnd/o2iblnd_cb.c:                                CERROR("%s rejected: o2iblnd version %x error\n",
lustre-release/lnet/klnds/o2iblnd/o2iblnd_cb.c:                                CERROR("%s rejected: o2iblnd no resources\n",
lustre-release/lnet/klnds/o2iblnd/o2iblnd_cb.c:                                CERROR("%s rejected: o2iblnd fatal error\n",
lustre-release/lnet/klnds/o2iblnd/o2iblnd_cb.c:                                CERROR("%s rejected: o2iblnd reason %d\n",
lustre-release/lnet/klnds/o2iblnd/o2iblnd_cb.c:                CERROR("Can't unpack connack from %s: %d\n",
lustre-release/lnet/klnds/o2iblnd/o2iblnd_cb.c:                CERROR("Unexpected message %d from %s\n",
lustre-release/lnet/klnds/o2iblnd/o2iblnd_cb.c:                CERROR("%s replied version %x is different with "
lustre-release/lnet/klnds/o2iblnd/o2iblnd_cb.c:		CERROR("%s has incompatible queue depth %d (<=%d wanted)\n",
lustre-release/lnet/klnds/o2iblnd/o2iblnd_cb.c:		CERROR("%s has incompatible max_frags %d (<=%d wanted)\n",
lustre-release/lnet/klnds/o2iblnd/o2iblnd_cb.c:                CERROR("%s max message size %d too big (%d max)\n",
lustre-release/lnet/klnds/o2iblnd/o2iblnd_cb.c:                CERROR("Bad connection reply from %s, rc = %d, "
lustre-release/lnet/klnds/o2iblnd/o2iblnd_cb.c:                CERROR("Can't connect to %s: %d\n",
lustre-release/lnet/klnds/o2iblnd/o2iblnd_cb.c:                CERROR("Unexpected event: %d, status: %d\n",
lustre-release/lnet/klnds/o2iblnd/o2iblnd_cb.c:                        CERROR("Can't resolve route for %s: %d\n",
lustre-release/lnet/klnds/o2iblnd/o2iblnd_cb.c:                        CERROR ("%s: REJECTED %d\n",
lustre-release/lnet/klnds/o2iblnd/o2iblnd_cb.c:                        CERROR("%s DISCONNECTED\n",
lustre-release/lnet/klnds/o2iblnd/o2iblnd_cb.c:			CERROR("Timed out tx: %s, %lld seconds\n",
lustre-release/lnet/klnds/o2iblnd/o2iblnd_cb.c:				CERROR("Timed out RDMA with %s (%lld): "
lustre-release/lnet/klnds/o2iblnd/o2iblnd_cb.c:		CERROR("Fatal device error for NI %s\n",
lustre-release/lnet/klnds/o2iblnd/o2iblnd_cb.c:		CERROR("Port reactivated for NI %s\n",
lustre-release/lnet/klnds/o2iblnd/o2iblnd_cb.c:		CERROR("%s: Async QP event type %d\n",
lustre-release/lnet/klnds/o2iblnd/o2iblnd_cb.c:        CERROR("%s: async CQ event type %d\n",
lustre-release/lnet/klnds/o2iblnd/o2iblnd_modparams.c:		CERROR("Invalid ib_mtu %d, expected 256/512/1024/2048/4096\n",
lustre-release/lnet/klnds/gnilnd/gnilnd_conn.c:				CERROR("FATAL:fmablk registration has failed "
lustre-release/lnet/klnds/gnilnd/gnilnd_conn.c:		CERROR("LBUGs in your future: forcibly marking fma_blk %p "
lustre-release/lnet/klnds/gnilnd/gnilnd_conn.c:			CERROR("failed phys mbox allocation, stopping at %d, rc %d\n",
lustre-release/lnet/klnds/gnilnd/gnilnd_conn.c:			CERROR("Failed to setup FMA mailbox (%d)\n", err);
lustre-release/lnet/klnds/gnilnd/gnilnd_conn.c:		CERROR("Unexpected magic %08x\n",
lustre-release/lnet/klnds/gnilnd/gnilnd_conn.c:			CERROR("matched datagram 0x%p with srcnid %s "
lustre-release/lnet/klnds/gnilnd/gnilnd_conn.c:			CERROR("Looking up network: device is in shutdown");
lustre-release/lnet/klnds/gnilnd/gnilnd_conn.c:			CERROR("Connection data from %s: she sent "
lustre-release/lnet/klnds/gnilnd/gnilnd_conn.c:			CERROR("Bad connection data from %s: she sent "
lustre-release/lnet/klnds/gnilnd/gnilnd_conn.c:		CERROR("Unexpected version %d\n", connreq->gncr_version);
lustre-release/lnet/klnds/gnilnd/gnilnd_conn.c:		CERROR("unknown connreq packet type %d\n", connreq->gncr_type);
lustre-release/lnet/klnds/gnilnd/gnilnd_conn.c:		CERROR("Recived bad timestamps peer %llu conn %llu\n",
lustre-release/lnet/klnds/gnilnd/gnilnd_conn.c:		CERROR("Received timeout %d < MIN %d\n",
lustre-release/lnet/klnds/gnilnd/gnilnd_conn.c:		CERROR("dgram 0x%p with bad post_state %d\n", dgram, post_state);
lustre-release/lnet/klnds/gnilnd/gnilnd_conn.c:		CERROR("unknown connreq type %d\n", type);
lustre-release/lnet/klnds/gnilnd/gnilnd_conn.c:			CERROR("error %d: could not post wildcard datagram # %d\n",
lustre-release/lnet/klnds/gnilnd/gnilnd_conn.c:		CERROR("Can't create peer for %s\n", libcfs_nid2str(her_nid));
lustre-release/lnet/klnds/gnilnd/gnilnd_conn.c:		CERROR("unexpected connreq type %s (%d) from %s\n",
lustre-release/lnet/klnds/gnilnd/gnilnd_conn.c:		CERROR("unknown datagram type %s (%d)\n",
lustre-release/lnet/klnds/gnilnd/gnilnd_modparams.c:		CERROR("Invalid checksum module parameter: %d\n",
lustre-release/lnet/klnds/gnilnd/gnilnd_cb.c:		CERROR("failed to allocate tx\n");
lustre-release/lnet/klnds/gnilnd/gnilnd_cb.c:		CERROR("couldn't allocate new tx type %s!\n",
lustre-release/lnet/klnds/gnilnd/gnilnd_cb.c:		CERROR("invalid msg type %s (%d)\n",
lustre-release/lnet/klnds/gnilnd/gnilnd_cb.c:			CERROR("Can't handle multiple vaddr fragments\n");
lustre-release/lnet/klnds/gnilnd/gnilnd_cb.c:		CERROR("Can't handle multiple vaddr fragments\n");
lustre-release/lnet/klnds/gnilnd/gnilnd_cb.c:		CERROR("failed to allocate tx_phys\n");
lustre-release/lnet/klnds/gnilnd/gnilnd_cb.c:			CERROR("Can't make payload contiguous in I/O VM:"
lustre-release/lnet/klnds/gnilnd/gnilnd_cb.c:			CERROR ("payload too big (%d)\n", (int)(phys - tx->tx_phys));
lustre-release/lnet/klnds/gnilnd/gnilnd_cb.c:		CERROR("invalid msg type %s (%d)\n",
lustre-release/lnet/klnds/gnilnd/gnilnd_cb.c:		CERROR("failed to allocate rx\n");
lustre-release/lnet/klnds/gnilnd/gnilnd_cb.c:		CERROR("lntmsg %p with unexpected type %d\n",
lustre-release/lnet/klnds/gnilnd/gnilnd_cb.c:			CERROR("unable to setup buffer: %d\n", rc);
lustre-release/lnet/klnds/gnilnd/gnilnd_cb.c:			CERROR("Can't create reply for GET to %s\n",
lustre-release/lnet/klnds/gnilnd/gnilnd_cb.c:		CERROR("invalid msg type %s (%d)\n",
lustre-release/lnet/klnds/gnilnd/gnilnd_cb.c:		CERROR("Couldnt find matching peer %p or conn %p / %p\n",
lustre-release/lnet/klnds/gnilnd/gnilnd_cb.c:			CERROR("Unexpected connstamp %#llx(%#llx expected)"
lustre-release/lnet/klnds/gnilnd/gnilnd_cb.c:		CERROR("Out of eager credits to %s\n",
lustre-release/lnet/klnds/gnilnd/gnilnd_cb.c:		CERROR("couldn't allocate eager rx message for conn %p to %s\n",
lustre-release/lnet/klnds/gnilnd/gnilnd.c:			CERROR("Can't spawn gnilnd scheduler[%d] %ld\n", i,
lustre-release/lnet/klnds/gnilnd/gnilnd.c:		CERROR("Too many conn are live: %d > %d\n",
lustre-release/lnet/klnds/gnilnd/gnilnd.c:		CERROR("Can't allocate conn tx_ref_table\n");
lustre-release/lnet/klnds/gnilnd/gnilnd.c:		CERROR("Could not allocate unique CQ ID for conn 0x%p\n", conn);
lustre-release/lnet/klnds/gnilnd/gnilnd.c:			CERROR("Failed to allocate nets[%d]\n", nnets);
lustre-release/lnet/klnds/gnilnd/gnilnd.c:	CERROR("Error setting connection params from %s: %d\n",
lustre-release/lnet/klnds/gnilnd/gnilnd.c:				CERROR("bad command %d\n", command);
lustre-release/lnet/klnds/gnilnd/gnilnd.c:			CERROR("obsolete IOC_LIBCFS_REGISTER_MYNID: %s(%s)\n",
lustre-release/lnet/klnds/gnilnd/gnilnd.c:		CERROR("Can't create CDM %d (%d)\n", dev->gnd_id, rrc);
lustre-release/lnet/klnds/gnilnd/gnilnd.c:		CERROR("Can't attach CDM to device %d (%d)\n",
lustre-release/lnet/klnds/gnilnd/gnilnd.c:			CERROR("Can't subscribe for errors on device %d: rc %d\n",
lustre-release/lnet/klnds/gnilnd/gnilnd.c:			CERROR("Can't subscribe for quiesce callback on device %d: rc %d\n",
lustre-release/lnet/klnds/gnilnd/gnilnd.c:			CERROR("couldn't translate host_id 0x%x to nid. rc %d\n",
lustre-release/lnet/klnds/gnilnd/gnilnd.c:		CERROR("Can't create rdma send cq size %u for device "
lustre-release/lnet/klnds/gnilnd/gnilnd.c:		CERROR("Can't create fma send cq size %u for device %d (%d)\n",
lustre-release/lnet/klnds/gnilnd/gnilnd.c:		CERROR("Can't create fma cq size %d for device %d (%d)\n",
lustre-release/lnet/klnds/gnilnd/gnilnd.c:		CERROR("Can't create slab for physical mbox blocks\n");
lustre-release/lnet/klnds/gnilnd/gnilnd.c:		CERROR("Can't create slab for kgn_rx_t descriptors\n");
lustre-release/lnet/klnds/gnilnd/gnilnd.c:		CERROR("Can't create slab for kgn_tx_t\n");
lustre-release/lnet/klnds/gnilnd/gnilnd.c:		CERROR("Can't create slab for kgn_tx_phys\n");
lustre-release/lnet/klnds/gnilnd/gnilnd.c:		CERROR("Can't create slab for outgoing datagrams\n");
lustre-release/lnet/klnds/gnilnd/gnilnd.c:		CERROR("Can't allocate vmap cksum pages\n");
lustre-release/lnet/klnds/gnilnd/gnilnd.c:			CERROR("Can't allocate vmap cksum pages for cpu %d\n", i);
lustre-release/lnet/klnds/gnilnd/gnilnd.c:		CERROR("Can't initialise any GNI devices\n");
lustre-release/lnet/klnds/gnilnd/gnilnd.c:		CERROR("Can't spawn gnilnd reaper: %d\n", rc);
lustre-release/lnet/klnds/gnilnd/gnilnd.c:		CERROR("Can't spawn gnilnd rca: %d\n", rc);
lustre-release/lnet/klnds/gnilnd/gnilnd.c:		CERROR("Can't spawn gnilnd ruhroh thread: %d\n", rc);
lustre-release/lnet/klnds/gnilnd/gnilnd.c:				CERROR("Can't spawn gnilnd scheduler[%d]: %d\n",
lustre-release/lnet/klnds/gnilnd/gnilnd.c:			CERROR("Can't spawn gnilnd dgram_mover[%d]: %d\n",
lustre-release/lnet/klnds/gnilnd/gnilnd.c:			CERROR("Can't spawn gnilnd dgram_waitq[%d]: %d\n",
lustre-release/lnet/klnds/gnilnd/gnilnd.c:			CERROR("Can't create wildcard dgrams[%d]: %d\n",
lustre-release/lnet/klnds/gnilnd/gnilnd.c:		CERROR("could not allocate net for new interface instance\n");
lustre-release/lnet/klnds/gnilnd/gnilnd.c:		CERROR("got NULL net for ni %p\n", ni);
lustre-release/lnet/klnds/gnilnd/gnilnd_proc.c:		CERROR("couldn't allocate iovs\n");
lustre-release/lnet/klnds/gnilnd/gnilnd_proc.c:			CERROR("couldn't allocate page %d\n", i);
lustre-release/lnet/klnds/gnilnd/gnilnd_proc.c:			CERROR("couldn't allocate page %d\n", i);
lustre-release/lnet/klnds/gnilnd/gnilnd_proc.c:		CERROR("bytes %d too large, requires niov %d > %d\n",
lustre-release/lnet/klnds/gnilnd/gnilnd_proc.c:			CERROR("case %d loop %d different checksums %x expected %x\n",
lustre-release/lnet/klnds/gnilnd/gnilnd_proc.c:		CERROR("can't run cksum test, kgnilnd is not initialized yet\n");
lustre-release/lnet/klnds/gnilnd/gnilnd_proc.c:		CERROR("kgnilnd is not initialized for stats write\n");
lustre-release/lnet/klnds/gnilnd/gnilnd_proc.c:		CERROR("could not allocate mdd sequence iterator\n");
lustre-release/lnet/klnds/gnilnd/gnilnd_proc.c:		CERROR("could not allocate smsg sequence iterator\n");
lustre-release/lnet/klnds/gnilnd/gnilnd_proc.c:		CERROR("could not allocate conn sequence iterator\n");
lustre-release/lnet/klnds/gnilnd/gnilnd_proc.c:		CERROR("could not allocate peer sequence iterator\n");
lustre-release/lnet/klnds/gnilnd/gnilnd_proc.c:		CERROR("couldn't create proc dir %s\n",
lustre-release/lnet/klnds/gnilnd/gnilnd_proc.c:		CERROR("couldn't create proc entry %s\n", GNILND_PROC_CKSUM_TEST);
lustre-release/lnet/klnds/gnilnd/gnilnd_proc.c:		CERROR("couldn't create proc entry %s\n", GNILND_PROC_STATS);
lustre-release/lnet/klnds/gnilnd/gnilnd_proc.c:		CERROR("couldn't create proc entry %s\n", GNILND_PROC_MDD);
lustre-release/lnet/klnds/gnilnd/gnilnd_proc.c:		CERROR("couldn't create proc entry %s\n", GNILND_PROC_SMSG);
lustre-release/lnet/klnds/gnilnd/gnilnd_proc.c:		CERROR("couldn't create proc entry %s\n", GNILND_PROC_CONN);
lustre-release/lnet/klnds/gnilnd/gnilnd_proc.c:		CERROR("couldn't create proc entry %s\n", GNILND_PROC_PEER_CONNS);
lustre-release/lnet/klnds/gnilnd/gnilnd_proc.c:		CERROR("couldn't create proc entry %s\n", GNILND_PROC_PEER);
lustre-release/lnet/klnds/gnilnd/gnilnd_stack.c:		CERROR("can't reset the stack, gnilnd is not initialized\n");
lustre-release/lnet/selftest/timer.c:		CERROR ("Can't spawn timer thread: %d\n", rc);
lustre-release/lnet/selftest/rpc.c:		CERROR("Can't allocate descriptor for %d pages\n", bulk_npg);
lustre-release/lnet/selftest/rpc.c:			CERROR("Can't allocate page %d of %d\n", i, bulk_npg);
lustre-release/lnet/selftest/rpc.c:		CERROR("LNetMEAttach failed: %d\n", rc);
lustre-release/lnet/selftest/rpc.c:		CERROR("LNetMDAttach failed: %d\n", rc);
lustre-release/lnet/selftest/rpc.c:		CERROR("LNetMDBind failed: %d\n", rc);
lustre-release/lnet/selftest/rpc.c:		CERROR("LNet%s(%s, %d, %lld) failed: %d\n",
lustre-release/lnet/selftest/rpc.c:			CERROR("Failed to add new buf to service: %s\n",
lustre-release/lnet/selftest/rpc.c:			CERROR("RPC %p: bulk %p, service %d\n",
lustre-release/lnet/selftest/rpc.c:			CERROR("Event: status %d, type %d, lnet %d\n",
lustre-release/lnet/selftest/rpc.c:		CERROR("Unknown event: status %d, type %d, lnet %d\n",
lustre-release/lnet/selftest/rpc.c:			CERROR("rpcev %p, crpc %p, reqstev %p, replyev %p, bulkev %p\n",
lustre-release/lnet/selftest/rpc.c:			CERROR("Bad event: status %d, type %d, lnet %d\n",
lustre-release/lnet/selftest/rpc.c:			CERROR("Dropping RPC (%s) from %s: status %d mlength %d type %u magic %u.\n",
lustre-release/lnet/selftest/rpc.c:		CERROR("LNetNIInit() has failed: %d\n", rc);
lustre-release/lnet/selftest/rpc.c:		CERROR("LNetEQAlloc() has failed: %d\n", rc);
lustre-release/lnet/selftest/module.c:		CERROR("Failed to create serial WI scheduler for LST\n");
lustre-release/lnet/selftest/module.c:			CERROR("Failed to create CPU partition affinity WI scheduler %d for LST\n",
lustre-release/lnet/selftest/module.c:		CERROR("LST can't startup rpc\n");
lustre-release/lnet/selftest/module.c:		CERROR("LST can't startup framework\n");
lustre-release/lnet/selftest/module.c:		CERROR("LST can't startup console\n");
lustre-release/lnet/selftest/framework.c:                CERROR ("Failed to register test %s (%d)\n",
lustre-release/lnet/selftest/framework.c:		CERROR("dropping RPC mksn under memory pressure\n");
lustre-release/lnet/selftest/framework.c:		CERROR ("Can't allocate test instance for batch: %llu\n",
lustre-release/lnet/selftest/framework.c:                                CERROR ("Can't allocate tsu for %d\n",
lustre-release/lnet/selftest/framework.c:		CERROR("Can't create rpc for test %d\n", tsi->tsi_service);
lustre-release/lnet/selftest/framework.c:		CERROR("dropping RPC %s from %s under memory pressure\n",
lustre-release/lnet/selftest/framework.c:		CERROR("dropping RPC %s from %s: racing with expiry timer\n",
lustre-release/lnet/selftest/framework.c:		CERROR("Bulk transfer failed for RPC: "
lustre-release/lnet/selftest/framework.c:		CERROR("dropping RPC %s from %s: racing with expiry timer\n",
lustre-release/lnet/selftest/framework.c:                CERROR ("Session timeout must be non-negative: %d\n",
lustre-release/lnet/selftest/framework.c:                CERROR ("RPC timeout must be non-negative: %d\n",
lustre-release/lnet/selftest/brw_test.c:	CERROR ("Bad data in page %p: %#llx, %#llx expected\n",
lustre-release/lnet/selftest/brw_test.c:			CERROR("Bulk page %p (%d/%d) is corrupted!\n",
lustre-release/lnet/selftest/brw_test.c:		CERROR("BRW RPC to %s failed with %d\n",
lustre-release/lnet/selftest/brw_test.c:		CERROR("Bulk data from %s is corrupted!\n",
lustre-release/lnet/selftest/brw_test.c:		CERROR("Bulk transfer %s %s has failed: %d\n",
lustre-release/lnet/selftest/brw_test.c:                CERROR ("BRW bulk %s failed for RPC from %s: %d\n",
lustre-release/lnet/selftest/brw_test.c:                CERROR ("Bulk data from %s is corrupted!\n",
lustre-release/lnet/selftest/console.c:                CERROR("Out of memory\n");
lustre-release/lnet/selftest/console.c:                        CERROR("Can't create ndlink, out of memory\n");
lustre-release/lnet/selftest/console.c:                CERROR("Can't create transaction: %d\n", rc);
lustre-release/lnet/selftest/console.c:                CERROR("Out of memory\n");
lustre-release/lnet/selftest/console.c:                CERROR("Can't create transaction: %d\n", rc);
lustre-release/lnet/selftest/console.c:                CERROR("Can't allocate descriptor for group %s\n", name);
lustre-release/lnet/selftest/console.c:                CERROR("Can't create transaction: %d\n", rc);
lustre-release/lnet/selftest/console.c:                CERROR("Can't allocate ndlist_ent\n");
lustre-release/lnet/selftest/console.c:                CERROR("Can't allocate descriptor for batch %s\n", name);
lustre-release/lnet/selftest/console.c:		CERROR("Can't allocate hash for batch %s\n", name);
lustre-release/lnet/selftest/console.c:                CERROR("Can't allocate hash for batch %s\n", name);
lustre-release/lnet/selftest/console.c:                CERROR("Can't create transaction: %d\n", rc);
lustre-release/lnet/selftest/console.c:                CERROR("Can't create transaction: %d\n", rc);
lustre-release/lnet/selftest/console.c:		CERROR("Can't allocate test descriptor\n");
lustre-release/lnet/selftest/console.c:                CERROR("Can't create transaction: %d\n", rc);
lustre-release/lnet/selftest/console.c:                CERROR("Can't create transaction: %d\n", rc);
lustre-release/lnet/selftest/console.c:                CERROR("Out of memory\n");
lustre-release/lnet/selftest/console.c:                CERROR("Can't create transaction: %d\n", rc);
lustre-release/lnet/selftest/console.c:                        CERROR("Can't create node link\n");
lustre-release/lnet/selftest/console.c:                CERROR("Can't create transaction: %d\n", rc);
lustre-release/lnet/selftest/console.c:		CERROR("Can't support these features: %x\n",
lustre-release/lnet/selftest/console.c:		CERROR("remote features %x do not match with "
lustre-release/lnet/selftest/console.c:                        CERROR("Out of memory\n");
lustre-release/lnet/selftest/console.c:                CERROR("Out of memory\n");
lustre-release/lnet/selftest/conrpc.c:                CERROR("Can't create transaction %d: %d\n", transop, rc);
lustre-release/lnet/selftest/conrpc.c:                        CERROR("Failed to create RPC for transaction %s: %d\n",
lustre-release/lnet/selftest/conrpc.c:                                CERROR("Out of memory\n");
lustre-release/lnet/selftest/conrpc.c:                        CERROR("Out of memory\n");
lustre-release/lnet/selftest/conrpc.c:                CERROR("Failed to create console pinger\n");
lustre-release/lnet/selftest/ping_test.c:                CERROR ("Unable to ping %s (%d): %d\n",
lustre-release/lnet/selftest/ping_test.c:                CERROR ("Bad magic %u from %s, %u expected.\n",
lustre-release/lnet/selftest/ping_test.c:                CERROR ("Bad seq %u from %s, %u expected.\n",
lustre-release/lnet/selftest/ping_test.c:                CERROR ("Unexpect magic %08x from %s\n",
lustre-release/lnet/lnet/lib-msg.c:		CERROR("ni %s added to recovery queue. Health = %d\n",
lustre-release/lnet/lnet/lib-msg.c:		CERROR("%d active msg on exit\n", count);
lustre-release/lnet/lnet/lib-msg.c:		CERROR("Failed to allocate message finalizers\n");
lustre-release/lnet/lnet/lib-msg.c:		CERROR("Failed to allocate message resenders\n");
lustre-release/lnet/lnet/lib-msg.c:		CERROR("Failed to allocate cpu-partition data for network\n");
lustre-release/lnet/lnet/router.c:		CERROR("Invalid module parameter value for 'router_sensitivity_percentage'\n");
lustre-release/lnet/lnet/router.c:		CERROR("Invalid value: %lu for 'router_sensitivity_percentage'\n", value);
lustre-release/lnet/lnet/router.c:			CERROR("peer %s is being used as a gateway but routing feature is not turned on\n",
lustre-release/lnet/lnet/router.c:		CERROR("route to %s through %s has gone from %s to %s\n",
lustre-release/lnet/lnet/router.c:		CERROR("Cannot add route with gateway %s. There is no local interface configured on LNet %s\n",
lustre-release/lnet/lnet/router.c:		CERROR("Out of memory creating route %s %d %s\n",
lustre-release/lnet/lnet/router.c:		CERROR("Error %d creating route %s %d %s\n", rc,
lustre-release/lnet/lnet/router.c:				CERROR("gateway %s has no networks\n",
lustre-release/lnet/lnet/router.c:			CERROR("no local network found for gateway %s\n",
lustre-release/lnet/lnet/router.c:			CERROR("Failed to discover router %s\n",
lustre-release/lnet/lnet/router.c:			CERROR("Failed to allocate %d route bufs of %d pages\n",
lustre-release/lnet/lnet/module.c:		CERROR("lnet_lib_init: error %d\n", rc);
lustre-release/lnet/lnet/lib-eq.c:		/* don't complain with CERROR: some EQs are sized small
lustre-release/lnet/lnet/lib-move.c:		CERROR("Unknown stats type\n");
lustre-release/lnet/lnet/lib-move.c:		CERROR("There is a BUG in the code. Unknown message type\n");
lustre-release/lnet/lnet/lib-move.c:		CERROR("recv from %s / send to %s aborted: "
lustre-release/lnet/lnet/lib-move.c:		CERROR("gateway peer %s has no NI on net %s\n",
lustre-release/lnet/lnet/lib-move.c:				CERROR("Gateway %s does not have a peer NI on net %s\n",
lustre-release/lnet/lnet/lib-move.c:			CERROR("Gateway %s does not have a peer NI on net %s\n",
lustre-release/lnet/lnet/lib-move.c:		CERROR("Can't send to %s: src %s is not a "
lustre-release/lnet/lnet/lib-move.c:		CERROR("Can't send to %s: src %s is not a "
lustre-release/lnet/lnet/lib-move.c:	CERROR("can't send to %s. no NI on %s\n",
lustre-release/lnet/lnet/lib-move.c:			CERROR("No peer NI for gateway %s\n",
lustre-release/lnet/lnet/lib-move.c:			CERROR("peer %s has no available nets\n",
lustre-release/lnet/lnet/lib-move.c:			CERROR("peer %s down\n",
lustre-release/lnet/lnet/lib-move.c:			CERROR("no route to %s from %s\n",
lustre-release/lnet/lnet/lib-move.c:			CERROR("Internal Error. Route expected to %s from %s\n",
lustre-release/lnet/lnet/lib-move.c:		CERROR("Internal Error. Expected local ni on %s but non found :%s\n",
lustre-release/lnet/lnet/lib-move.c:		CERROR("Can't send to %s: src %s is not a "
lustre-release/lnet/lnet/lib-move.c:			CERROR("no path to %s from net %s\n",
lustre-release/lnet/lnet/lib-move.c:		CERROR("Internal fault. Unable to send msg %s to %s. "
lustre-release/lnet/lnet/lib-move.c:			CERROR("Can't send response to %s. "
lustre-release/lnet/lnet/lib-move.c:		CERROR("Internal Error. Expected to have a best_lpni: "
lustre-release/lnet/lnet/lib-move.c:			CERROR("Can't send response to %s. "
lustre-release/lnet/lnet/lib-move.c:		CERROR("Unknown send case\n");
lustre-release/lnet/lnet/lib-move.c:			CERROR("Expected that a peer is already created for %s\n",
lustre-release/lnet/lnet/lib-move.c:				CERROR("Error sending %s to %s: %d\n",
lustre-release/lnet/lnet/lib-move.c:				CERROR("out of memory. Can't recover %s\n",
lustre-release/lnet/lnet/lib-move.c:				CERROR("out of memory. Can't recover %s\n",
lustre-release/lnet/lnet/lib-move.c:		CERROR("Can't bind MD: %d\n", rc);
lustre-release/lnet/lnet/lib-move.c:			CERROR("local NI (%s) recovery failed with %d\n",
lustre-release/lnet/lnet/lib-move.c:			CERROR("peer NI (%s) recovery failed with %d\n",
lustre-release/lnet/lnet/lib-move.c:		CERROR("Unexpected event: %d\n", event->type);
lustre-release/lnet/lnet/lib-move.c:		CERROR("Can't start monitor thread: %d\n", rc);
lustre-release/lnet/lnet/lib-move.c:		CERROR("%s: Unable to send REPLY for GET from %s: %d\n",
lustre-release/lnet/lnet/lib-move.c:			CERROR("REPLY MD also attached to portal %d\n",
lustre-release/lnet/lnet/lib-move.c:			CERROR("Source MD also attached to portal %d\n",
lustre-release/lnet/lnet/lib-move.c:			CERROR("%s, src %s: bad %s payload %d (0 expected)\n",
lustre-release/lnet/lnet/lib-move.c:			CERROR("%s, src %s: bad %s payload %d "
lustre-release/lnet/lnet/lib-move.c:		CERROR("%s, src %s: Bad message type 0x%x\n",
lustre-release/lnet/lnet/lib-move.c:			CERROR("%s, src %s: Bad dest nid %s "
lustre-release/lnet/lnet/lib-move.c:			CERROR("%s, src %s: Bad dest nid %s "
lustre-release/lnet/lnet/lib-move.c:			CERROR("%s, src %s: Bad optimized GET for %s "
lustre-release/lnet/lnet/lib-move.c:			CERROR("%s, src %s: Dropping message for %s "
lustre-release/lnet/lnet/lib-move.c:		CERROR("%s, src %s: Dropping %s to simulate failure\n",
lustre-release/lnet/lnet/lib-move.c:			CERROR("net %s not found\n",
lustre-release/lnet/lnet/lib-move.c:			CERROR("%s, src %s: Dropping asymmetrical route %s\n",
lustre-release/lnet/lnet/lib-move.c:		CERROR("%s, src %s: Dropping %s (out of memory)\n",
lustre-release/lnet/lnet/lib-move.c:		CERROR("%s, src %s: Dropping %s "
lustre-release/lnet/lnet/lib-move.c:		CERROR("Dropping PUT to %s: simulated failure\n",
lustre-release/lnet/lnet/lib-move.c:		CERROR("Dropping PUT to %s: ENOMEM on struct lnet_msg\n",
lustre-release/lnet/lnet/lib-move.c:			CERROR("Dropping PUT to %s: ENOMEM on response tracker\n",
lustre-release/lnet/lnet/lib-move.c:		CERROR("Dropping PUT (%llu:%d:%s): MD (%d) invalid\n",
lustre-release/lnet/lnet/lib-move.c:			CERROR("Source MD also attached to portal %d\n",
lustre-release/lnet/lnet/lib-move.c:		CERROR("%s: Dropping REPLY from %s: can't allocate msg\n",
lustre-release/lnet/lnet/lib-move.c:		CERROR("%s: Dropping REPLY from %s for inactive MD %p\n",
lustre-release/lnet/lnet/lib-move.c:		CERROR("Dropping GET to %s: simulated failure\n",
lustre-release/lnet/lnet/lib-move.c:		CERROR("Dropping GET to %s: ENOMEM on struct lnet_msg\n",
lustre-release/lnet/lnet/lib-move.c:		CERROR("Dropping GET to %s: ENOMEM on response tracker\n",
lustre-release/lnet/lnet/lib-move.c:		CERROR("Dropping GET (%llu:%d:%s): MD (%d) invalid\n",
lustre-release/lnet/lnet/lib-move.c:			CERROR("REPLY MD also attached to portal %d\n",
lustre-release/lnet/lnet/acceptor.c:				CERROR("Error sending magic+version in response"
lustre-release/lnet/lnet/acceptor.c:		CERROR("Error %d reading connection request version from "
lustre-release/lnet/lnet/acceptor.c:			CERROR("Error sending magic+version in response"
lustre-release/lnet/lnet/acceptor.c:		CERROR("Error %d reading connection request from "
lustre-release/lnet/lnet/acceptor.c:			CERROR("Can't determine new connection's address\n");
lustre-release/lnet/lnet/acceptor.c:			CERROR("Refusing connection from %pI4h: "
lustre-release/lnet/lnet/acceptor.c:			CERROR("Error %d reading connection request from "
lustre-release/lnet/lnet/acceptor.c:		CERROR("Can't start acceptor thread: %ld\n", rc2);
lustre-release/lnet/lnet/peer.c:		CERROR("Failed to allocate cpu-partition peer tables\n");
lustre-release/lnet/lnet/peer.c:			CERROR("Failed to create peer hash table\n");
lustre-release/lnet/lnet/peer.c:		CERROR("Peer NI %s is a gateway. Can not delete it\n",
lustre-release/lnet/lnet/peer.c:		CERROR("%s is a router. Can not be deleted\n",
lustre-release/lnet/lnet/peer.c:		CERROR("Push from non-Multi-Rail peer %s dropped\n",
lustre-release/lnet/lnet/peer.c:			CERROR("Push says %s is Multi-Rail, DLC says not\n",
lustre-release/lnet/lnet/peer.c:			CERROR("Multi-Rail state vanished from %s\n",
lustre-release/lnet/lnet/peer.c:			CERROR("Error adding NID %s to peer %s: %d\n",
lustre-release/lnet/lnet/peer.c:			CERROR("Error deleting NID %s from peer %s: %d\n",
lustre-release/lnet/lnet/peer.c:				CERROR("Primary NID error %s versus %s: %d\n",
lustre-release/lnet/lnet/peer.c:		CERROR("Can't bind push source MD: %d\n", rc);
lustre-release/lnet/lnet/peer.c:		CERROR("Can't allocate discovery EQ: %d\n", rc);
lustre-release/lnet/lnet/peer.c:		CERROR("Can't start peer discovery thread: %d\n", rc);
lustre-release/lnet/lnet/peer.c:		CERROR("lpni %s added to recovery queue. Health = %d\n",
lustre-release/lnet/lnet/lib-ptl.c:		CERROR("Matching packet from %s, match %llu"
lustre-release/lnet/lnet/lib-ptl.c:		CERROR("Invalid portal %d not in [0-%d]\n",
lustre-release/lnet/lnet/lib-ptl.c:				CERROR("Active ME %p on exit\n", me);
lustre-release/lnet/lnet/lib-ptl.c:		CERROR("Failed to create match table for portal %d\n", index);
lustre-release/lnet/lnet/lib-ptl.c:			CERROR("Failed to create match hash for portal %d\n",
lustre-release/lnet/lnet/lib-ptl.c:		CERROR("Failed to allocate portals table\n");
lustre-release/lnet/lnet/config.c:			CERROR("Out of Memory\n");
lustre-release/lnet/lnet/config.c:		CERROR("Duplicate net %s. Ignore\n",
lustre-release/lnet/lnet/config.c:		CERROR("Out of memory creating network %s\n",
lustre-release/lnet/lnet/config.c:		CERROR("Can't allocate net interface name\n");
lustre-release/lnet/lnet/config.c:		CERROR("Out of memory creating network interface %s%s\n",
lustre-release/lnet/lnet/config.c:			CERROR("Failed to set CPTs for NI %s(%s): %d\n",
lustre-release/lnet/lnet/config.c:		CERROR("networks string is undefined\n");
lustre-release/lnet/lnet/config.c:		CERROR("Can't allocate net tokens\n");
lustre-release/lnet/lnet/config.c:		CERROR("text buffer too big\n");
lustre-release/lnet/lnet/config.c:		CERROR("Too many text buffers\n");
lustre-release/lnet/lnet/config.c:				CERROR("Can't create route "
lustre-release/lnet/lnet/config.c:		CERROR("Error parsing routes\n");
lustre-release/lnet/lnet/config.c:		CERROR("Error parsing ip2nets\n");
lustre-release/lnet/lnet/config.c:				CERROR("Too many matched networks\n");
lustre-release/lnet/lnet/config.c:		CERROR("lnet: Can't find any usable interfaces, rc = -ENOENT\n");
lustre-release/lnet/lnet/config.c:		CERROR("lnet: Can't allocate ipaddrs[%d], rc = %d\n",
lustre-release/lnet/lnet/lib-md.c:		CERROR("find page for address in highmem\n");
lustre-release/lnet/lnet/lib-md.c:				CERROR("offset %d goes beyond kiov\n", offset);
lustre-release/lnet/lnet/lib-md.c:				CERROR("offset %d goes beyond iov\n", offset);
lustre-release/lnet/lnet/lib-md.c:			CERROR("Couldn't resolve vaddr 0x%lx to page\n", vaddr);
lustre-release/lnet/lnet/lib-md.c:		CERROR("MD start pointer can not be NULL with length %u\n",
lustre-release/lnet/lnet/lib-md.c:		CERROR("Invalid option: too many fragments %u, %d max\n",
lustre-release/lnet/lnet/lib-md.c:		CERROR("Invalid length: too big fragment size %u, %d max\n",
lustre-release/lnet/lnet/lib-md.c:		CERROR("Invalid option: no MD_OP set\n");
lustre-release/lnet/lnet/lib-md.c:		CERROR("Invalid option: GET|PUT illegal on active MDs\n");
lustre-release/lnet/lnet/lib-socket.c:				CERROR("Can't set socket send timeout "
lustre-release/lnet/lnet/lib-socket.c:			CERROR("Unexpected zero rc\n");
lustre-release/lnet/lnet/lib-socket.c:			CERROR("Can't set socket recv timeout %ld.%06d: %d\n",
lustre-release/lnet/lnet/lib-socket.c:		CERROR("Can't create socket: %d\n", rc);
lustre-release/lnet/lnet/lib-socket.c:		CERROR("Can't set SO_REUSEADDR for socket: %d\n", rc);
lustre-release/lnet/lnet/lib-socket.c:			CERROR("Error trying to bind to port %d: %d\n",
lustre-release/lnet/lnet/lib-socket.c:			CERROR("Can't set send buffer %d: %d\n",
lustre-release/lnet/lnet/lib-socket.c:			CERROR("Can't set receive buffer %d: %d\n",
lustre-release/lnet/lnet/lib-socket.c:		CERROR("Error %d getting sock %s IP/port\n",
lustre-release/lnet/lnet/lib-socket.c:			CERROR("Can't create socket: port %d already in use\n",
lustre-release/lnet/lnet/lib-socket.c:	CERROR("Can't set listen backlog %d: %d\n", backlog, rc);
lustre-release/lnet/lnet/lib-socket.c:		CERROR("Can't allocate socket\n");
lustre-release/lnet/lnet/api-ni.c:		CERROR("Invalid module parameter value for 'lnet_health_sensitivity'\n");
lustre-release/lnet/lnet/api-ni.c:		CERROR("Invalid health value. Maximum: %d value = %lu\n",
lustre-release/lnet/lnet/api-ni.c:		CERROR("Invalid module parameter value for 'lnet_recovery_interval'\n");
lustre-release/lnet/lnet/api-ni.c:		CERROR("lnet_recovery_interval must be at least 1 second\n");
lustre-release/lnet/lnet/api-ni.c:		CERROR("Invalid module parameter value for 'lnet_peer_discovery_disabled'\n");
lustre-release/lnet/lnet/api-ni.c:		CERROR("Invalid module parameter value for "
lustre-release/lnet/lnet/api-ni.c:		CERROR("Invalid module parameter value for 'lnet_transaction_timeout'\n");
lustre-release/lnet/lnet/api-ni.c:		CERROR("Invalid value for lnet_transaction_timeout (%lu). "
lustre-release/lnet/lnet/api-ni.c:		CERROR("Invalid module parameter value for 'lnet_retry_count'\n");
lustre-release/lnet/lnet/api-ni.c:		CERROR("Can not set retry_count when health feature is turned off\n");
lustre-release/lnet/lnet/api-ni.c:		CERROR("Invalid value for lnet_retry_count (%lu). "
lustre-release/lnet/lnet/api-ni.c:		CERROR("Invalid module parameter value for 'lnet_interfaces_max'\n");
lustre-release/lnet/lnet/api-ni.c:		CERROR("Failed to create remote nets hash table\n");
lustre-release/lnet/lnet/api-ni.c:		CERROR("%d active elements on exit of %s container\n",
lustre-release/lnet/lnet/api-ni.c:	CERROR("Failed to setup %s resource container\n",
lustre-release/lnet/lnet/api-ni.c:		CERROR("Failed to allocate %s resource containers\n",
lustre-release/lnet/lnet/api-ni.c:		CERROR("Failed to allocate queues\n");
lustre-release/lnet/lnet/api-ni.c:		CERROR("Failed to allocate counters for LNet\n");
lustre-release/lnet/lnet/api-ni.c:		CERROR("Failed to create portals for LNet: %d\n", rc);
lustre-release/lnet/lnet/api-ni.c:		CERROR("Can't allocate ping source [%d]\n", nnis);
lustre-release/lnet/lnet/api-ni.c:			CERROR("Can't allocate ping buffer EQ: %d\n", rc);
lustre-release/lnet/lnet/api-ni.c:		CERROR("Can't create ping target ME: %d\n", rc);
lustre-release/lnet/lnet/api-ni.c:		CERROR("Can't attach ping target MD: %d\n", rc);
lustre-release/lnet/lnet/api-ni.c:		CERROR("Can't create push target ME: %d\n", rc);
lustre-release/lnet/lnet/api-ni.c:		CERROR("Can't attach push MD: %d\n", rc);
lustre-release/lnet/lnet/api-ni.c:		CERROR("Can't allocated push target EQ: %d\n", rc);
lustre-release/lnet/lnet/api-ni.c:				CERROR("Can't load LND %s, module %s, rc=%d\n",
lustre-release/lnet/lnet/api-ni.c:		CERROR("Can't have %d CPTs for LNet (max allowed is %d), "
lustre-release/lnet/lnet/api-ni.c:		CERROR("Can't create LNet global locks: %d\n", rc);
lustre-release/lnet/lnet/api-ni.c:		CERROR("Can't allocate monitor thread EQ: %d\n", rc);
lustre-release/lnet/lnet/api-ni.c:		CERROR("Adding net %s will invalidate routing configuration\n",
lustre-release/lnet/lnet/api-ni.c:			CERROR("Failed to start up acceptor thread\n");
lustre-release/lnet/lnet/api-ni.c:		CERROR("No valid net and lnd information provided\n");
lustre-release/lnet/lnet/api-ni.c:		CERROR("net %s not found\n",
lustre-release/lnet/lnet/api-ni.c:		CERROR("nid %s not found\n",
lustre-release/lnet/lnet/api-ni.c:					CERROR("manually adding local NI %s to recovery\n",
lustre-release/lnet/lnet/api-ni.c:		CERROR("Can't allocate EQ: %d\n", rc);
lustre-release/lnet/lnet/api-ni.c:		CERROR("Can't bind MD: %d\n", rc);
lustre-release/lnet/lnet/api-ni.c:		/* Don't CERROR; this could be deliberate! */
lustre-release/lnet/lnet/api-ni.c:		CERROR("%s: ping info too short %d\n",
lustre-release/lnet/lnet/api-ni.c:		CERROR("%s: Unexpected magic %08x\n",
lustre-release/lnet/lnet/api-ni.c:		CERROR("%s: ping w/o NI status: 0x%x\n",
lustre-release/lnet/lnet/api-ni.c:		CERROR("%s: Short reply %d(%d min)\n",
lustre-release/lnet/lnet/api-ni.c:		CERROR("%s: Short reply %d(%d expected)\n",
lustre-release/lnet/lnet/api-ni.c:		CERROR("rc2 %d\n", rc2);
